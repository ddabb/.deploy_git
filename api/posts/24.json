{"total":266,"pageSize":10,"pageCount":27,"data":[{"title":"重绘Panel边框线","slug":"Paint_Panel_Border","date":"2019-01-21T14:00:53.000Z","updated":"2023-09-08T06:12:36.673Z","comments":true,"path":"api/articles/Paint_Panel_Border.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//%E9%94%99%E8%AF%AF%E9%87%8D%E7%BB%98%E7%A4%BA%E4%BE%8B.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近有一个需求,是重绘panel边框的颜色成指定的颜色,参考了网上的一些示例代码和结合实际情况,形成了自己的解决方案,以下是实现过程。</p>\n<h1 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h1><h2 id=\"边框绘制类\"><a href=\"#边框绘制类\" class=\"headerlink\" title=\"边框绘制类\"></a>边框绘制类</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> panel边框绘制类</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">PanelBorderPainter</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Color _colorPanelBorder = Color.FromArgb(<span class=\"number\">215</span>, <span class=\"number\">215</span>, <span class=\"number\">215</span>); <span class=\"comment\">//d7d7d7</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> BorderSize = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 重绘panel的边框颜色</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;para&gt;</span>Padding 需要设置为1,例如:panel.Padding = new System.Windows.Forms.Padding(1);<span class=\"doctag\">&lt;/para&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;para&gt;</span>默认颜色值是d7d7d7<span class=\"doctag\">&lt;/para&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;para&gt;</span>可以通过panel.Tag=Color.FromArgb(255, 0, 0)设置颜色为红色<span class=\"doctag\">&lt;/para&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span><span class=\"doctag\">&lt;para&gt;</span>注意:该Paint事件应置于InitializeComponent()之后实现,重新生成Designer.cs会导致代码丢失。<span class=\"doctag\">&lt;/para&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> </span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;sender&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;e&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Paint</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, PaintEventArgs e</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sender <span class=\"keyword\">is</span> Control control)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"meta\">#<span class=\"keyword\">region</span> panel颜色信息通过Tag传递</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (control.Tag != <span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (control.Tag <span class=\"keyword\">is</span> Color color)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    _colorPanelBorder = color;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">#<span class=\"keyword\">endregion</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            ButtonBorderStyle style = ButtonBorderStyle.Solid;</span><br><span class=\"line\">            ControlPaint.DrawBorder(e.Graphics, control.ClientRectangle,</span><br><span class=\"line\">                _colorPanelBorder, BorderSize, style,</span><br><span class=\"line\">                _colorPanelBorder, BorderSize, style,</span><br><span class=\"line\">                _colorPanelBorder, BorderSize, style,</span><br><span class=\"line\">                _colorPanelBorder, BorderSize, style);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"声明两个Panel\"><a href=\"#声明两个Panel\" class=\"headerlink\" title=\"声明两个Panel\"></a>声明两个Panel</h2><p><font color=\"#FF0000\">容器panelOuter包含panelInner</font></p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private System.Windows.Forms.Panel panelOuter<span class=\"comment\">;</span></span><br><span class=\"line\">private System.Windows.Forms.Panel panelInner<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关键代码\"><a href=\"#关键代码\" class=\"headerlink\" title=\"关键代码\"></a>关键代码</h2><p>panelOuter</p>\n<figure class=\"highlight wren\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">panelOuter</span>.<span class=\"property\">Padding</span> <span class=\"operator\">=</span> <span class=\"variable\">new</span> <span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">Padding</span>(<span class=\"number\">1</span>); <span class=\"comment\">//Padding属性设置为1。</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">panelOuter</span>.<span class=\"property\">Anchor</span> <span class=\"operator\">=</span> ((<span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>)((((<span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>.<span class=\"property\">Top</span> <span class=\"operator\">|</span> <span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>.<span class=\"property\">Bottom</span>) </span><br><span class=\"line\">            <span class=\"operator\">|</span> <span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>.<span class=\"property\">Left</span>) </span><br><span class=\"line\">            <span class=\"operator\">|</span> <span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>.<span class=\"property\">Right</span>)));</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">panelOuter</span>.<span class=\"property\">Controls</span>.<span class=\"property\">Add</span>(<span class=\"variable\">panelInner</span>); <span class=\"comment\">//必须</span></span><br></pre></td></tr></table></figure>\n\n<p>panelInner</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">this.panelInner.Dock</span> = System.Windows.Forms.DockStyle.Fill<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>Form1构造函数</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Form1</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    InitializeComponent();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.panelOuter.Paint += <span class=\"keyword\">new</span> PaintEventHandler(PanelBorderPainter.Paint);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"答疑\"><a href=\"#答疑\" class=\"headerlink\" title=\"答疑\"></a>答疑</h2><p><font color=\"#FF0000\">为什么需要两个Panel?</font><br>答:因为如果注释掉以下代码,水平拖拽时会出现如下的界面效果。</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.panelOuter.Controls.Add(panelInner);</span><br></pre></td></tr></table></figure>\n<p><img src=\"/.com//%E9%94%99%E8%AF%AF%E9%87%8D%E7%BB%98%E7%A4%BA%E4%BE%8B.png\" alt=\"错误重绘示例\"><br>取消该行代码注释则页面拖拽效果正常。</p>\n<p><font color=\"#FF0000\">是否必须需要两个Panel?</font><br>答:不是,内部是<strong>DataGridView</strong>等控件,其Dock&#x3D;DockStyle.Fill,可以起到同样的效果。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://blog.csdn.net/softimite_zifeng/article/details/54237134\">Winform的Panel绘制边框</a></li>\n</ul>\n","raw":null,"categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"代码世界/winform","path":"api/categories/代码世界/winform.json"}],"tags":[{"name":"winform","path":"api/tags/winform.json"},{"name":"panel重绘","path":"api/tags/panel重绘.json"}]},{"title":"用多项式解标准数独或锯齿数独","slug":"Solve_Soduku_With_Polynomial","date":"2019-01-13T14:06:50.000Z","updated":"2023-09-08T06:12:36.677Z","comments":true,"path":"api/articles/Solve_Soduku_With_Polynomial.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//%E5%9B%9B%E5%AE%AB%E7%A4%BA%E4%BE%8B.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近业余时间迷上了数独求解,所以试图用计算机的方式来解答数独。<br>接下来，我用四宫的数独为例子，示例怎么利用多项式求解数独。  </p>\n<h1 id=\"四宫数独\"><a href=\"#四宫数独\" class=\"headerlink\" title=\"四宫数独\"></a>四宫数独</h1><p>我们以四宫的每个单元格标上序号,如下图所示<br><img src=\"/.com//%E5%9B%9B%E5%AE%AB%E7%A4%BA%E4%BE%8B.png\" alt=\"四宫数独\"><br>因为每行每列每宫都包含1,2,3,4且不重复。<br>所以第一行满足 x00+x01+x02+x03&#x3D;10,x00*x01*x02*x03&#x3D;24。<br>其余列的关系依次类推,其余宫的关系也是如此。<br>若数独题目如下图所示<br><img src=\"/.com//%E5%9B%9B%E5%AE%AB%E6%A0%B7%E4%BE%8B.png\" alt=\"四宫例子\"><br>根据坐标和格子的关系可知:<br>x00&#x3D;1,x01&#x3D;4,x14&#x3D;1,x15&#x3D;2  </p>\n<p>通过以下Python代码  </p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sympy import *</span><br><span class=\"line\"><span class=\"attribute\">x00</span>=Symbol(&#x27;x00&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x01</span>=Symbol(&#x27;x01&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x02</span>=Symbol(&#x27;x02&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x03</span>=Symbol(&#x27;x03&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x04</span>=Symbol(&#x27;x04&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x05</span>=Symbol(&#x27;x05&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x06</span>=Symbol(&#x27;x06&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x07</span>=Symbol(&#x27;x07&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x08</span>=Symbol(&#x27;x08&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x09</span>=Symbol(&#x27;x09&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x10</span>=Symbol(&#x27;x10&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x11</span>=Symbol(&#x27;x11&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x12</span>=Symbol(&#x27;x12&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x13</span>=Symbol(&#x27;x13&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x14</span>=Symbol(&#x27;x14&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x15</span>=Symbol(&#x27;x15&#x27;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(solve([</span><br><span class=\"line\">    # 行之和为10</span><br><span class=\"line\">   x00+x01+x02+x03-10,</span><br><span class=\"line\">   x04+x05+x06+x07-10,</span><br><span class=\"line\">   x08+x09+x10+x11-10,</span><br><span class=\"line\">   x12+x13+x14+x15-10,</span><br><span class=\"line\"></span><br><span class=\"line\">   # 行之积为24</span><br><span class=\"line\">   x00*x01*x02*x03-24,</span><br><span class=\"line\">   x04*x05*x06*x07-24,</span><br><span class=\"line\">   x08*x09*x10*x11-24,</span><br><span class=\"line\">   x12*x13*x14*x15-24,</span><br><span class=\"line\"></span><br><span class=\"line\">   #列之和为10</span><br><span class=\"line\">   x00+x04+x08+x12-10, </span><br><span class=\"line\">   x01+x05+x09+x13-10,</span><br><span class=\"line\">   x02+x06+x10+x14-10,</span><br><span class=\"line\">   x03+x07+x11+x15-10,</span><br><span class=\"line\"></span><br><span class=\"line\">   #列之积为24</span><br><span class=\"line\">   x00*x04*x08*x12-24,</span><br><span class=\"line\">   x01*x05*x09*x13-24,</span><br><span class=\"line\">   x02*x06*x10*x14-24,</span><br><span class=\"line\">   x03*x07*x11*x15-24,</span><br><span class=\"line\"></span><br><span class=\"line\">   #宫之和为10</span><br><span class=\"line\">   x00+x01+x04+x05-10,</span><br><span class=\"line\">   x02+x03+x06+x07-10,</span><br><span class=\"line\">   x08+x09+x12+x13-10,</span><br><span class=\"line\">   x10+x11+x14+x15-10,</span><br><span class=\"line\"></span><br><span class=\"line\">   #宫之积为24</span><br><span class=\"line\">   x00*x01*x04*x05-24,</span><br><span class=\"line\">   x02*x03*x06*x07-24,</span><br><span class=\"line\">   x08*x09*x12*x13-24,</span><br><span class=\"line\">   x10*x11*x14*x15-24,</span><br><span class=\"line\"></span><br><span class=\"line\">   # <span class=\"attribute\">x00</span>=1,x01=4,x14=1,x15=2</span><br><span class=\"line\">   x00-1,</span><br><span class=\"line\">   x01-4,</span><br><span class=\"line\">   x14-1,</span><br><span class=\"line\">   x15-2</span><br><span class=\"line\">    ],[x00,x01,x02,x03,x04,x05,x06,x07,x08,x09,x10,x11,x12,x13,x14,x15]))</span><br></pre></td></tr></table></figure>\n<p>我们可以快速得知结果是</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,</span><br><span class=\"line\"><span class=\"attribute\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attribute\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,</span><br><span class=\"line\"><span class=\"attribute\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n<p>其余标准数独(只有唯一解)的四宫数独也可以通过该种方式进行求解。</p>\n<h1 id=\"九宫数独\"><a href=\"#九宫数独\" class=\"headerlink\" title=\"九宫数独\"></a>九宫数独</h1><p>既然4宫可以用多项式求解？那么九宫是不是也可以这样呢？<br>答案是可以，但是又有点不同。<br>∵4+4+4+9&#x3D;3+4+6+8&#x3D;21<br>∵4*4*4*9&#x3D;3*4*6*8&#x3D;576<br>∴ <strong>x1+x2+x3+x4+x5+x6+x7+x8+x9&#x3D;45</strong> 和<strong>x1*x2*x3*x4*x5*x6*x7*x8*x9&#x3D;362880</strong><br>存在{1,2,3,4,5,6,7,8,9}和{1,2,4,4,4,5,7,9,9}两组解。<br>若我们把8当做-1看待,9当做-2看待<br>则每行每列每宫之<strong>和</strong>变成了<strong>x1+x2+x3+x4+x5+x6+x7+x8+x9&#x3D;1+2+3+4+5+6+7+(-1)+(-2)&#x3D;25</strong><br>则每行每列每宫之<strong>积</strong>变成了<strong>x1*x2*x3*x4*x5*x6*x7*x8*x9&#x3D;1*2*3*4*5*6*7*(-1)*(-2)&#x3D;10080</strong><br>参考<strong>四宫数独中Python代码的实现</strong>,可以写出(9行+9列+9宫)*(和表达式1个+积表达式1个)共54个表达式,<br>若已知提示数为N个,则加上这个N个表达式,则可以借助Python的强大的计算能力实现求解。<br>再将-1还原成8,-2还原成9,则完成了标准数独的求解。  </p>\n<h1 id=\"锯齿数独\"><a href=\"#锯齿数独\" class=\"headerlink\" title=\"锯齿数独\"></a>锯齿数独</h1><p>众所周知,DLX算法求解数独比回溯法要来得快很多，但是锯齿数独并不适合于用DLX算法(稀疏矩阵精准覆盖算法求解)<br>因为锯齿数独依旧满足每行每列1到9不重复,只是9个宫中9个来源的坐标有变化了。<br>若坐标序号如下图所示<br><img src=\"/.com//%E6%95%B0%E7%8B%AC%E4%BD%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B.png\" alt=\"数独下标示意\">  </p>\n<p>以下图第一宫为例：<br><img src=\"/.com//%E9%94%AF%E9%BD%BF%E6%95%B0%E7%8B%AC%E7%A4%BA%E4%BE%8B.png\" alt=\"锯齿数独示例\">  </p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">x00</span>+x01+x02+x03+x09+x10+x18+x27+x28-<span class=\"number\">25</span>=<span class=\"number\">0</span> //每宫之和为<span class=\"number\">25</span>  </span><br><span class=\"line\"><span class=\"attribute\">x00</span>*x01*x02*x03*x09*x10*x18*x27*x28-<span class=\"number\">10080</span>=<span class=\"number\">0</span> //每宫之积为<span class=\"number\">10080</span>  </span><br><span class=\"line\"><span class=\"attribute\">x27</span>-<span class=\"number\">4</span>=<span class=\"number\">0</span>    //x27=<span class=\"number\">4</span>  </span><br><span class=\"line\"><span class=\"attribute\">x03</span>-(-<span class=\"number\">2</span>)=<span class=\"number\">0</span> //先用-<span class=\"number\">2</span>代替<span class=\"number\">9</span>  </span><br></pre></td></tr></table></figure>\n<p>其他宫的逻辑表达式依次类推,这样就能快速求解锯齿数独了。</p>\n<h1 id=\"推翻九宫结论\"><a href=\"#推翻九宫结论\" class=\"headerlink\" title=\"推翻九宫结论\"></a>推翻九宫结论</h1><p>如下图有39个提示数的标准数独<br><img src=\"/.com//39%E4%B8%AA%E6%8F%90%E7%A4%BA%E6%95%B0%E7%9A%84%E6%95%B0%E7%8B%AC.png\" alt=\"九宫提示数\"></p>\n<p>对应的python代码如下,仅仅实现了使CPU达到了100%的效果,迟迟出不来结果<br>所以该种方式求解9宫格的数独要么需要有强悍的电脑，要么还是直接使用DanceLink算法直接求解。</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from sympy import *</span><br><span class=\"line\">x00= Symbol(&#x27;x00&#x27;)</span><br><span class=\"line\">x01= Symbol(&#x27;x01&#x27;)</span><br><span class=\"line\">x02= Symbol(&#x27;x02&#x27;)</span><br><span class=\"line\">x03= Symbol(&#x27;x03&#x27;)</span><br><span class=\"line\">x04= Symbol(&#x27;x04&#x27;)</span><br><span class=\"line\">x05= Symbol(&#x27;x05&#x27;)</span><br><span class=\"line\">x06= Symbol(&#x27;x06&#x27;)</span><br><span class=\"line\">x07= Symbol(&#x27;x07&#x27;)</span><br><span class=\"line\">x08= Symbol(&#x27;x08&#x27;)</span><br><span class=\"line\">x09= Symbol(&#x27;x09&#x27;)</span><br><span class=\"line\">x10= Symbol(&#x27;x10&#x27;)</span><br><span class=\"line\">x11= Symbol(&#x27;x11&#x27;)</span><br><span class=\"line\">x12= Symbol(&#x27;x12&#x27;)</span><br><span class=\"line\">x13= Symbol(&#x27;x13&#x27;)</span><br><span class=\"line\">x14= Symbol(&#x27;x14&#x27;)</span><br><span class=\"line\">x15= Symbol(&#x27;x15&#x27;)</span><br><span class=\"line\">x16= Symbol(&#x27;x16&#x27;)</span><br><span class=\"line\">x17= Symbol(&#x27;x17&#x27;)</span><br><span class=\"line\">x18= Symbol(&#x27;x18&#x27;)</span><br><span class=\"line\">x19= Symbol(&#x27;x19&#x27;)</span><br><span class=\"line\">x20= Symbol(&#x27;x20&#x27;)</span><br><span class=\"line\">x21= Symbol(&#x27;x21&#x27;)</span><br><span class=\"line\">x22= Symbol(&#x27;x22&#x27;)</span><br><span class=\"line\">x23= Symbol(&#x27;x23&#x27;)</span><br><span class=\"line\">x24= Symbol(&#x27;x24&#x27;)</span><br><span class=\"line\">x25= Symbol(&#x27;x25&#x27;)</span><br><span class=\"line\">x26= Symbol(&#x27;x26&#x27;)</span><br><span class=\"line\">x27= Symbol(&#x27;x27&#x27;)</span><br><span class=\"line\">x28= Symbol(&#x27;x28&#x27;)</span><br><span class=\"line\">x29= Symbol(&#x27;x29&#x27;)</span><br><span class=\"line\">x30= Symbol(&#x27;x30&#x27;)</span><br><span class=\"line\">x31= Symbol(&#x27;x31&#x27;)</span><br><span class=\"line\">x32= Symbol(&#x27;x32&#x27;)</span><br><span class=\"line\">x33= Symbol(&#x27;x33&#x27;)</span><br><span class=\"line\">x34= Symbol(&#x27;x34&#x27;)</span><br><span class=\"line\">x35= Symbol(&#x27;x35&#x27;)</span><br><span class=\"line\">x36= Symbol(&#x27;x36&#x27;)</span><br><span class=\"line\">x37= Symbol(&#x27;x37&#x27;)</span><br><span class=\"line\">x38= Symbol(&#x27;x38&#x27;)</span><br><span class=\"line\">x39= Symbol(&#x27;x39&#x27;)</span><br><span class=\"line\">x40= Symbol(&#x27;x40&#x27;)</span><br><span class=\"line\">x41= Symbol(&#x27;x41&#x27;)</span><br><span class=\"line\">x42= Symbol(&#x27;x42&#x27;)</span><br><span class=\"line\">x43= Symbol(&#x27;x43&#x27;)</span><br><span class=\"line\">x44= Symbol(&#x27;x44&#x27;)</span><br><span class=\"line\">x45= Symbol(&#x27;x45&#x27;)</span><br><span class=\"line\">x46= Symbol(&#x27;x46&#x27;)</span><br><span class=\"line\">x47= Symbol(&#x27;x47&#x27;)</span><br><span class=\"line\">x48= Symbol(&#x27;x48&#x27;)</span><br><span class=\"line\">x49= Symbol(&#x27;x49&#x27;)</span><br><span class=\"line\">x50= Symbol(&#x27;x50&#x27;)</span><br><span class=\"line\">x51= Symbol(&#x27;x51&#x27;)</span><br><span class=\"line\">x52= Symbol(&#x27;x52&#x27;)</span><br><span class=\"line\">x53= Symbol(&#x27;x53&#x27;)</span><br><span class=\"line\">x54= Symbol(&#x27;x54&#x27;)</span><br><span class=\"line\">x55= Symbol(&#x27;x55&#x27;)</span><br><span class=\"line\">x56= Symbol(&#x27;x56&#x27;)</span><br><span class=\"line\">x57= Symbol(&#x27;x57&#x27;)</span><br><span class=\"line\">x58= Symbol(&#x27;x58&#x27;)</span><br><span class=\"line\">x59= Symbol(&#x27;x59&#x27;)</span><br><span class=\"line\">x60= Symbol(&#x27;x60&#x27;)</span><br><span class=\"line\">x61= Symbol(&#x27;x61&#x27;)</span><br><span class=\"line\">x62= Symbol(&#x27;x62&#x27;)</span><br><span class=\"line\">x63= Symbol(&#x27;x63&#x27;)</span><br><span class=\"line\">x64= Symbol(&#x27;x64&#x27;)</span><br><span class=\"line\">x65= Symbol(&#x27;x65&#x27;)</span><br><span class=\"line\">x66= Symbol(&#x27;x66&#x27;)</span><br><span class=\"line\">x67= Symbol(&#x27;x67&#x27;)</span><br><span class=\"line\">x68= Symbol(&#x27;x68&#x27;)</span><br><span class=\"line\">x69= Symbol(&#x27;x69&#x27;)</span><br><span class=\"line\">x70= Symbol(&#x27;x70&#x27;)</span><br><span class=\"line\">x71= Symbol(&#x27;x71&#x27;)</span><br><span class=\"line\">x72= Symbol(&#x27;x72&#x27;)</span><br><span class=\"line\">x73= Symbol(&#x27;x73&#x27;)</span><br><span class=\"line\">x74= Symbol(&#x27;x74&#x27;)</span><br><span class=\"line\">x75= Symbol(&#x27;x75&#x27;)</span><br><span class=\"line\">x76= Symbol(&#x27;x76&#x27;)</span><br><span class=\"line\">x77= Symbol(&#x27;x77&#x27;)</span><br><span class=\"line\">x78= Symbol(&#x27;x78&#x27;)</span><br><span class=\"line\">x79= Symbol(&#x27;x79&#x27;)</span><br><span class=\"line\">x80= Symbol(&#x27;x80&#x27;)</span><br><span class=\"line\">print(<span class=\"name\">solve</span>([</span><br><span class=\"line\">    x00+x01+x02+x03+x04+x05+x06+x07+x08-25,</span><br><span class=\"line\">    x00+x09+x18+x27+x36+x45+x54+x63+x72-25,</span><br><span class=\"line\">    x00+x01+x02+x09+x10+x11+x18+x19+x20-25,</span><br><span class=\"line\">    x00*x01*x02*x03*x04*x05*x06*x07*x08-10080,</span><br><span class=\"line\">    x00*x09*x18*x27*x36*x45*x54*x63*x72-10080,</span><br><span class=\"line\">    x00*x01*x02*x09*x10*x11*x18*x19*x20-10080,</span><br><span class=\"line\">    x09+x10+x11+x12+x13+x14+x15+x16+x17-25,</span><br><span class=\"line\">    x01+x10+x19+x28+x37+x46+x55+x64+x73-25,</span><br><span class=\"line\">    x03+x04+x05+x12+x13+x14+x21+x22+x23-25,</span><br><span class=\"line\">    x09*x10*x11*x12*x13*x14*x15*x16*x17-10080,</span><br><span class=\"line\">    x01*x10*x19*x28*x37*x46*x55*x64*x73-10080,</span><br><span class=\"line\">    x03*x04*x05*x12*x13*x14*x21*x22*x23-10080,</span><br><span class=\"line\">    x18+x19+x20+x21+x22+x23+x24+x25+x26-25,</span><br><span class=\"line\">    x02+x11+x20+x29+x38+x47+x56+x65+x74-25,</span><br><span class=\"line\">    x06+x07+x08+x15+x16+x17+x24+x25+x26-25,</span><br><span class=\"line\">    x18*x19*x20*x21*x22*x23*x24*x25*x26-10080,</span><br><span class=\"line\">    x02*x11*x20*x29*x38*x47*x56*x65*x74-10080,</span><br><span class=\"line\">    x06*x07*x08*x15*x16*x17*x24*x25*x26-10080,</span><br><span class=\"line\">    x27+x28+x29+x30+x31+x32+x33+x34+x35-25,</span><br><span class=\"line\">    x03+x12+x21+x30+x39+x48+x57+x66+x75-25,</span><br><span class=\"line\">    x27+x28+x29+x36+x37+x38+x45+x46+x47-25,</span><br><span class=\"line\">    x27*x28*x29*x30*x31*x32*x33*x34*x35-10080,</span><br><span class=\"line\">    x03*x12*x21*x30*x39*x48*x57*x66*x75-10080,</span><br><span class=\"line\">    x27*x28*x29*x36*x37*x38*x45*x46*x47-10080,</span><br><span class=\"line\">    x36+x37+x38+x39+x40+x41+x42+x43+x44-25,</span><br><span class=\"line\">    x04+x13+x22+x31+x40+x49+x58+x67+x76-25,</span><br><span class=\"line\">    x30+x31+x32+x39+x40+x41+x48+x49+x50-25,</span><br><span class=\"line\">    x36*x37*x38*x39*x40*x41*x42*x43*x44-10080,</span><br><span class=\"line\">    x04*x13*x22*x31*x40*x49*x58*x67*x76-10080,</span><br><span class=\"line\">    x30*x31*x32*x39*x40*x41*x48*x49*x50-10080,</span><br><span class=\"line\">    x45+x46+x47+x48+x49+x50+x51+x52+x53-25,</span><br><span class=\"line\">    x05+x14+x23+x32+x41+x50+x59+x68+x77-25,</span><br><span class=\"line\">    x33+x34+x35+x42+x43+x44+x51+x52+x53-25,</span><br><span class=\"line\">    x45*x46*x47*x48*x49*x50*x51*x52*x53-10080,</span><br><span class=\"line\">    x05*x14*x23*x32*x41*x50*x59*x68*x77-10080,</span><br><span class=\"line\">    x33*x34*x35*x42*x43*x44*x51*x52*x53-10080,</span><br><span class=\"line\">    x54+x55+x56+x57+x58+x59+x60+x61+x62-25,</span><br><span class=\"line\">    x06+x15+x24+x33+x42+x51+x60+x69+x78-25,</span><br><span class=\"line\">    x54+x55+x56+x63+x64+x65+x72+x73+x74-25,</span><br><span class=\"line\">    x54*x55*x56*x57*x58*x59*x60*x61*x62-10080,</span><br><span class=\"line\">    x06*x15*x24*x33*x42*x51*x60*x69*x78-10080,</span><br><span class=\"line\">    x54*x55*x56*x63*x64*x65*x72*x73*x74-10080,</span><br><span class=\"line\">    x63+x64+x65+x66+x67+x68+x69+x70+x71-25,</span><br><span class=\"line\">    x07+x16+x25+x34+x43+x52+x61+x70+x79-25,</span><br><span class=\"line\">    x57+x58+x59+x66+x67+x68+x75+x76+x77-25,</span><br><span class=\"line\">    x63*x64*x65*x66*x67*x68*x69*x70*x71-10080,</span><br><span class=\"line\">    x07*x16*x25*x34*x43*x52*x61*x70*x79-10080,</span><br><span class=\"line\">    x57*x58*x59*x66*x67*x68*x75*x76*x77-10080,</span><br><span class=\"line\">    x72+x73+x74+x75+x76+x77+x78+x79+x80-25,</span><br><span class=\"line\">    x08+x17+x26+x35+x44+x53+x62+x71+x80-25,</span><br><span class=\"line\">    x60+x61+x62+x69+x70+x71+x78+x79+x80-25,</span><br><span class=\"line\">    x72*x73*x74*x75*x76*x77*x78*x79*x80-10080,</span><br><span class=\"line\">    x08*x17*x26*x35*x44*x53*x62*x71*x80-10080,</span><br><span class=\"line\">    x60*x61*x62*x69*x70*x71*x78*x79*x80-10080,</span><br><span class=\"line\">    x00-7,</span><br><span class=\"line\">    x02-5,</span><br><span class=\"line\">    x03-6,</span><br><span class=\"line\">    x06+1,</span><br><span class=\"line\">    x08-4,</span><br><span class=\"line\">    x09-6,</span><br><span class=\"line\">    x10-4,</span><br><span class=\"line\">    x16-2,</span><br><span class=\"line\">    x17-7,</span><br><span class=\"line\">    x18-1,</span><br><span class=\"line\">    x19-2,</span><br><span class=\"line\">    x20+1,</span><br><span class=\"line\">    x21-4,</span><br><span class=\"line\">    x22-7,</span><br><span class=\"line\">    x25-5,</span><br><span class=\"line\">    x26-6,</span><br><span class=\"line\">    x27-2,</span><br><span class=\"line\">    x28-5,</span><br><span class=\"line\">    x29-1,</span><br><span class=\"line\">    x31-6,</span><br><span class=\"line\">    x35+1,</span><br><span class=\"line\">    x45+1,</span><br><span class=\"line\">    x49-5,</span><br><span class=\"line\">    x51-2,</span><br><span class=\"line\">    x52-6,</span><br><span class=\"line\">    x55+1,</span><br><span class=\"line\">    x58-3,</span><br><span class=\"line\">    x61-7,</span><br><span class=\"line\">    x63-5,</span><br><span class=\"line\">    x65-2,</span><br><span class=\"line\">    x66-7,</span><br><span class=\"line\">    x67-4,</span><br><span class=\"line\">    x70+1,</span><br><span class=\"line\">    x71-3,</span><br><span class=\"line\">    x72-3,</span><br><span class=\"line\">    x74-7,</span><br><span class=\"line\">    x75-5,</span><br><span class=\"line\">    x78-4,</span><br><span class=\"line\">    x80-2,</span><br><span class=\"line\">     <span class=\"number\">1</span><span class=\"number\">-1</span></span><br><span class=\"line\">],[x00,x01,x02,x03,x04,x05,x06,x07,x08,x09,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80]))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>这是我掌握的第三种通过计算机方式求解数独的第三种方式，前面两种分别是回溯法,DLX算法。<br>这种多项式求解的方法好处在于将数字之间的逻辑用多项式进行表达,将复杂的逻辑运算交由封装好的工具去处理。<br>稍微麻烦一点的就是书写多项式的表达式，通过数独的相关信息生成py文件再运行py文件,这是后话了。<br>该部分会在C#调用Python代码中会有详细介绍了(未完成,预计在2019年1月21日之前会补充这部分内容)。  </p>\n<h1 id=\"最终总结\"><a href=\"#最终总结\" class=\"headerlink\" title=\"最终总结\"></a>最终总结</h1><p>所有结论都需要实际验证正确之后，再形成文章，这是对自己的负责，也是对读者的负责。<br>也希望读者们能够不吝赐教,表示非常感谢！</p>\n","raw":null,"categories":[{"name":"数独之趣","path":"api/categories/数独之趣.json"}],"tags":[{"name":"数独","path":"api/tags/数独.json"},{"name":"python","path":"api/tags/python.json"}]},{"title":"迟到的元旦快乐","slug":"ComfirmedPostionSodukuClues","date":"2019-01-10T13:15:08.000Z","updated":"2023-09-08T06:12:36.540Z","comments":true,"path":"api/articles/ComfirmedPostionSodukuClues.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/photos/images/元初始状态.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>在元旦之前，本想炫技生成漂亮的数独图案的题目然后发在朋友圈祝朋友们节日快乐。可惜是技术实在不过关。</p>\n<h1 id=\"数独图形\"><a href=\"#数独图形\" class=\"headerlink\" title=\"数独图形\"></a>数独图形</h1><p>在资深的数独迷眼里,标准数独是指通过盘面上的所有提示数字，有且仅有唯一解。<br>以下四个图形，虽说有“元旦快乐”的四个字样，但是并不具备唯一解。  </p>\n<div style=\"clear:both; width:800px\">\n<div style=\"float:left;width:400px\"> <img src=\"/photos/images/元初始状态.png\"></div>\n<div style=\"float:right;width:400px\"><img src=\"/photos/images/旦初始状态.png\"></div>\n</div>\n\n<div style=\"clear:both; width:800px\">\n<div style=\"float:left;width:400px\"> <img src=\"/photos/images/快初始状态.png\"></div>\n<div style=\"float:right;width:400px\"><img src=\"/photos/images/乐初始状态.png\"></div>\n</div>\n\n<p>我们可以经由DLX算法可以快速得知<br>以上“元旦快乐”四个数字的可能解的个数是分别是512,8388,66,285。</p>\n<h1 id=\"标准数独的基本条件\"><a href=\"#标准数独的基本条件\" class=\"headerlink\" title=\"标准数独的基本条件\"></a>标准数独的基本条件</h1><blockquote>\n<p>盘面至少<strong>17</strong>个数字。<br>每一大行中没有两个空行,即第一，二，三行必须有两行存在数字。<br>每一大列中没有两个空列,即第一，二，三列必须有两列存在数字。<br>盘面至少有<strong>8</strong>个不同的已知数字。<br>即<strong>元</strong>字的r3c8会有个<strong>2</strong>的存在是为了避免第一和第三行可以互换,不满足数独唯一性的必要条件。</p>\n</blockquote>\n<h1 id=\"求解过程\"><a href=\"#求解过程\" class=\"headerlink\" title=\"求解过程\"></a>求解过程</h1><p>以元字的表达式为例</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 元表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> before = <span class=\"keyword\">new</span> <span class=\"type\">DanceLink</span>().solution_count(<span class=\"string\">&quot;000000000001234500000000020134659782000308000000402000000703004009006007070001358&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 元的第一个已知数据和第二个已知数据交换</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> after  = <span class=\"keyword\">new</span> <span class=\"type\">DanceLink</span>().solution_count(<span class=\"string\">&quot;000000000002134500000000020134659782000308000000402000000703004009006007070001358&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出的结果是</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">before</span> <span class=\"operator\">=</span> <span class=\"number\">512</span><span class=\"comment\">;</span></span><br><span class=\"line\"><span class=\"attribute\">after</span>  <span class=\"operator\">=</span> <span class=\"number\">312</span><span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>所以最终解可以由after的表达式进行进一步的两两交换去生成。<br>由因为A的已知数据是30个，所以位置的交换有30*29&#x2F;2&#x3D;435种。<br>整个交换的执行流程如下：<br>1、建立一个尝试字典集tryDic,键是数独的表达式,值是数独的结果的可能个数。<br>2、30个位置进行组合，生成435个包含两个位置的集合。<br>3、数独表达式交换前后分别记为before,after,解的个数分别记作b,a,将before,after及其结果数存入tryDic。<br>4、对435个集合进行遍历,若a!&#x3D;0,且a小于b,则before&#x3D;after;<br>5、很有可能第一轮排列组合之后,a并不等于1;没有找到唯一解的数独表达式,选取tryDic的结果个数最多的字符串S出来作为下一轮循环的因子。<br>6、循环执行1~5的过程，<strong>注意步骤5中的字符串S应该是过往循环中没有使用过的，否则会陷入死循环。</strong></p>\n<p>书上以</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">001000009000200046007080000000001000003000200000500000000030800960007000200000500</span><br></pre></td></tr></table></figure>\n<p>这个18个提示数的数独作为例子作为讲解，我也通过以上流程生成了一个18个提示数的标准数独。</p>\n<blockquote>\n<p>借助书上的说法,除了聪明和运气，我们别无他法。</p>\n</blockquote>\n<h1 id=\"标准数独-元旦快乐\"><a href=\"#标准数独-元旦快乐\" class=\"headerlink\" title=\"标准数独(元旦快乐)\"></a>标准数独(元旦快乐)</h1><p>最终生成的结果如下，难度不大。</p>\n<div style=\"clear:both; width:800px\">\n<div style=\"float:left;width:400px\"> <img src=\"/photos/images/元.png\"></div>\n<div style=\"float:right;width:400px\"><img src=\"/photos/images/旦.png\"></div>\n</div>\n\n<div style=\"clear:both; width:800px\">\n<div style=\"float:left;width:400px\"> <img src=\"/photos/images/快.png\"></div>\n<div style=\"float:right;width:400px\"><img src=\"/photos/images/乐.png\"></div>\n</div>\n\n<h1 id=\"逆向思维\"><a href=\"#逆向思维\" class=\"headerlink\" title=\"逆向思维\"></a>逆向思维</h1><p>由以上位置找固定数独的位置可知，如果标准数独去掉某个提示数，不在构成唯一解，但是满足构成标准数独的基本条件,则可能通过两两交换的生成一个新的标准数独。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.cnblogs.com/zhao-yi/p/8533035.html\">C#实现排列、组合</a></li>\n<li><a href=\"https://github.com/ddabb/soduku\">C#源码</a></li>\n</ul>\n","raw":null,"categories":[{"name":"数独之趣","path":"api/categories/数独之趣.json"}],"tags":[{"name":"排列组合","path":"api/tags/排列组合.json"},{"name":"数独","path":"api/tags/数独.json"},{"name":"固定位置","path":"api/tags/固定位置.json"}]},{"title":"SqlServer 迁移到mysql","slug":"sqlserver-to-mysql","date":"2018-12-25T13:56:21.000Z","updated":"2023-09-08T06:12:36.699Z","comments":true,"path":"api/articles/sqlserver-to-mysql.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近有开展Sqlserver 迁移到mysql的工作,以下经验基本上是别的博客没有提到过的，故行此文以作补充。</p>\n<h1 id=\"版本差异\"><a href=\"#版本差异\" class=\"headerlink\" title=\"版本差异\"></a>版本差异</h1><h2 id=\"时间精度\"><a href=\"#时间精度\" class=\"headerlink\" title=\"时间精度\"></a>时间精度</h2><p>Mysql 5.5版本不支持毫秒,Mysql 5.6以上才支持。<br>时间格式为<strong>DateTime(3)</strong>,当前时间为**Now(3)**。在5.5版本上,这两种写法为提示错误。</p>\n<h2 id=\"row-number函数\"><a href=\"#row-number函数\" class=\"headerlink\" title=\"row_number函数\"></a>row_number函数</h2><p>mysql 8.0才支持row_number函数，低版本都不支持该函数。<br><strong>低版本实现方式:</strong> 游标查询,或者少量数据的情况下,创建带有自增主键的临时表。</p>\n<h2 id=\"mysql-proc表\"><a href=\"#mysql-proc表\" class=\"headerlink\" title=\"mysql.proc表\"></a>mysql.proc表</h2><p>该表在mysql 8.0版本中已经不存在了,所以 **<font color=\"#FF0000\">select * from mysql.proc；</font>**在mysql 8.0版本中会报错;<br>需要转换成 **<font color=\"#FF0000\">show procedure status where db&#x3D;’sys’;</font>**这种写法来获取存储过程的相关信息。</p>\n<h2 id=\"with-cte\"><a href=\"#with-cte\" class=\"headerlink\" title=\"with cte\"></a>with cte</h2><p>mysql 8.0以上才支持cte,不过<a href=\"https://dev.mysql.com/doc/refman/8.0/en/with.html#common-table-expressions-recursive\">Mysql递归cte</a>的写法与sql server存在差异,需要添加关键字<strong>recursive</strong>,否则会提示cte不存在错误。</p>\n<p>如下</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">recursive</span> cte <span class=\"keyword\">as</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span> Id,Pid,DeptName,<span class=\"number\">0</span> <span class=\"keyword\">as</span> lvl <span class=\"keyword\">from</span> Department</span><br><span class=\"line\">    <span class=\"keyword\">where</span> Id = <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">union</span> <span class=\"keyword\">all</span></span><br><span class=\"line\">    <span class=\"keyword\">select</span> d.Id,d.Pid,d.DeptName,lvl+<span class=\"number\">1</span> <span class=\"keyword\">from</span> cte c <span class=\"keyword\">inner</span> <span class=\"keyword\">join</span> Department d</span><br><span class=\"line\">    <span class=\"keyword\">on</span> c.Id = d.Pid</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> cte</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"net-framework框架\"><a href=\"#net-framework框架\" class=\"headerlink\" title=\".net framework框架\"></a>.net framework框架</h2><p>5.6 及以上的的版本使用<strong>mysql.data.dll</strong>时需要 <strong>.net framework 4.5.2</strong>以上。</p>\n<h1 id=\"Mysql不具备的SQL-Server语法\"><a href=\"#Mysql不具备的SQL-Server语法\" class=\"headerlink\" title=\"Mysql不具备的SQL Server语法\"></a>Mysql不具备的SQL Server语法</h1><h2 id=\"uniqueidentifier\"><a href=\"#uniqueidentifier\" class=\"headerlink\" title=\"uniqueidentifier\"></a>uniqueidentifier</h2><p>SqlServer 通过WorkBench 迁移到Mysql时，该字段会自动变成varchar(36)类型。Mysql对应的生成Guid的语法是**uuid()**。<br>因object不支持强制转换成Guid，所以应将接口代码中的 <strong>(Guid)cmd.ExecuteScalar()<strong>替换成</strong>new Guid(cmd.ExecuteScalar())</strong></p>\n<h2 id=\"deleted-Inserted\"><a href=\"#deleted-Inserted\" class=\"headerlink\" title=\"deleted,Inserted\"></a>deleted,Inserted</h2><p>SqlServer在执行 insert into table_a select top 10 columnname from table_b时可以通过inserted获取到新插入的十条记录的自增主键,而Mysql不可以。<br><strong>实现方式</strong>  表新增Guid辅助字段,并将Guid放在临时表,通过多表链接查询获取数据。</p>\n<h2 id=\"select-top-…-percent\"><a href=\"#select-top-…-percent\" class=\"headerlink\" title=\"select top … percent\"></a>select top … percent</h2><p>SqlServer在执行 select top 10 percent columnname from table_a,如果table_a中有200条记录,则会返回前20条记录。<br><strong>实现方式</strong>  Mysql 需要通过获取总记录条数，然后获取总条数*百分比来获取数据。</p>\n<h1 id=\"临时表编码\"><a href=\"#临时表编码\" class=\"headerlink\" title=\"临时表编码\"></a>临时表编码</h1><p>CREATE TEMPORARY TABLE<br>temptable1(groupname VARCHAR(50))<br> <strong><font color=\"#FF0000\">DEFAULT CHARSET&#x3D;utf8;</font></strong><br>这样可以解决临时表不能插入中文的问题。</p>\n<h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><h2 id=\"默认位置\"><a href=\"#默认位置\" class=\"headerlink\" title=\"默认位置\"></a>默认位置</h2><p>各版本的配置文件的位置如下:<br><strong>5.5：</strong> C:\\<font color=\"#FF0000\">Program Files</font>\\MySQL\\MySQL Server 5.5\\my.ini<br><strong>5.6：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 5.6\\my.ini<br><strong>5.7：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 5.7\\my.ini<br><strong>8.0：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 8.0\\my.ini<br><strong><font color=\"#FF0000\">配置文件修改以后重启mysqlserver才会生效。</font></strong></p>\n<h2 id=\"longtext存储\"><a href=\"#longtext存储\" class=\"headerlink\" title=\"longtext存储\"></a>longtext存储</h2><p>max_allowed_packet 的默认值是4M。<br>设置<strong>max_allowed_packet&#x3D;100M</strong>可以解决longtext数据的存储长度的问题。</p>\n<h2 id=\"数据库名大小写\"><a href=\"#数据库名大小写\" class=\"headerlink\" title=\"数据库名大小写\"></a>数据库名大小写</h2><p>lower_case_table_names<br>设置lower_case_table_names&#x3D;1,表名称都设置为统一小写。</p>\n<h2 id=\"id自增不连续\"><a href=\"#id自增不连续\" class=\"headerlink\" title=\"id自增不连续\"></a>id自增不连续</h2><p>innodb_autoinc_lock_mode&#x3D;0  解决id自增不连续的问题；</p>\n<h1 id=\"语法差异\"><a href=\"#语法差异\" class=\"headerlink\" title=\"语法差异\"></a>语法差异</h1><h2 id=\"不等于\"><a href=\"#不等于\" class=\"headerlink\" title=\"不等于\"></a>不等于</h2><p>SqlServer的不等于符号 **!&#x3D;**中间可以存在空格，而Mysql的不可以。<br>Sql Server： select * from a where a.column !    &#x3D; 0  <font color=\"#FF0000\">不报错</font><br>Mysql： select * from a where a.column !    &#x3D; 0       <font color=\"#FF0000\">报错</font><br>Mysql： select * from a where a.column !&#x3D; 0           <font color=\"#FF0000\">不报错</font>  </p>\n<h2 id=\"逻辑取反\"><a href=\"#逻辑取反\" class=\"headerlink\" title=\"逻辑取反\"></a>逻辑取反</h2><p>SqlServer ： update table_a set isOk&#x3D;~isOk;<br>Mysql     ： update table_a set isOk&#x3D;!isOk;</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>以上就是本人在做SqlServer 迁移到Mysql的过程中遇到的问题以及相应的解决方案。<br>如果其中有不正确的地方，强烈欢迎指正，避免误导他人。<br>希望该文能为你的迁移大业贡献一份力量。</p>\n","raw":null,"categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"代码世界/数据库迁移","path":"api/categories/代码世界/数据库迁移.json"}],"tags":[{"name":"mysql","path":"api/tags/mysql.json"},{"name":"sqlserver","path":"api/tags/sqlserver.json"}]},{"title":"斗地主所有牌型组合个数统计","slug":"138712181744994","date":"2018-12-03T13:48:23.000Z","updated":"2023-09-08T06:12:36.538Z","comments":true,"path":"api/articles/138712181744994.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//4%E4%B8%AA3.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近业余时间在研究排列组合的相关问题,话题涉及到了<strong>在不考虑花色的情况下？54张牌按照斗地主的方式以20，17，17的方式分给3个人有多少中可能解决方案？</strong><br>我觉得这个问题有点意思，并以sql脚本的形式实现了问题的求解过程，希望大家能从这篇文章中所有收获。</p>\n<h1 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h1><p>以4个3为例，分给地主1，农民2，农民3的所有组合情况如下：<br><img src=\"/.com//4%E4%B8%AA3.png\" alt=\"4个3的组合情况\"><br>既4个3在3个玩家中的可能情况有15种。在不考虑斗地主手牌数限制的情况下,因A到K有13张牌，则A到K的所有位置的组合数有$15^{13}$种可能性。<br>以大王为例,分给地主1，农民2，农民3的所有组合情况如下：<br><img src=\"/.com//%E5%A4%A7%E7%8E%8B.png\" alt=\"大王的组合情况\"><br>在不考虑斗地主手牌数限制的情况下,大王和小王在三家的可能性有3*3&#x3D;9种可能性。<br>所以牌型组合的理论上限是$9*15^{13}$。接近于$1.75*10^{16}$。  </p>\n<p><img src=\"/.com//%E7%BB%84%E5%90%88.png\" alt=\"组合情况的一种\"><br>根据<a href=\"https://baike.baidu.com/item/%E8%AE%A1%E6%95%B0%E5%8E%9F%E7%90%86/4032370\">计数原理</a>,结合上图可知：<br>如果3<del>7在玩家1，2，3的手牌张数分别是20，0，0的可行方法是1种。<br>如果8</del>Q在玩家1，2，3的手牌张数分别是0，17，3的可行方法是35种。<br>如果K到大王在玩家1，2，3的手牌张数分别是0，0，14的可行方法是1种。<br>所以三个步骤组合起来的总可行方法是$1*35*1&#x3D;35$种方法。</p>\n<p>具体细节参考<a href=\"https://github.com/ddabb/138712181744994/blob/master/product.sql\">Sql server版斗地主牌型组合统计的代码</a>,最终的出来的结果是<strong>138712181744994</strong>,即$1.3871*10^{14}$。即在不区分花色的情况下，斗地主所有的牌型组合数。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>记录斗地主的所有牌型这种方式来做AI是不切实际的，毕竟普通PC机是没有办法存储$1.3871*10^{14}$条数据的。</p>\n<hr>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://baike.baidu.com/item/%E8%AE%A1%E6%95%B0%E5%8E%9F%E7%90%86/4032370\">计数原理</a></li>\n<li><a href=\"https://www.60points.com/combination/\">m个球放到n个箱子中几种解法</a></li>\n<li><a href=\"https://www.60points.com/Fight-the-Landlord-Card-Type-Aanalysis/\">欢乐斗地主出牌方式统计</a></li>\n</ul>\n","raw":null,"categories":[{"name":"逻辑思维","path":"api/categories/逻辑思维.json"}],"tags":[{"name":"欢乐斗地主","path":"api/tags/欢乐斗地主.json"},{"name":"排列组合","path":"api/tags/排列组合.json"}]},{"title":"m个球放到n个箱子中几种解法","slug":"combination","date":"2018-11-29T14:23:23.000Z","updated":"2023-09-08T06:12:36.689Z","comments":true,"path":"api/articles/combination.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//nine.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>该文的诞生源于一个问题:<strong>斗地主有多少种牌型组合?</strong><br>众所周知,斗地主共54张牌分别给三个人20,17,17张牌，因为方块3和梅花3在斗地主中无区别，转化一下问题就是13种不同的颜色（不包括黑白）的球各4个,黑球，白球各1个,放到容积分别为20,17,17的三个箱子中有多少种方法？<br>第一想法是想到采取排列组合的方式去解，但是多久没有做排列组合的习题，我发现<strong>3红3黄3蓝1黑1白共11个球放到容积为5,3,3的三个箱子中,不考虑顺序总共有多少种方法？</strong>这个问题我都计算困难,该文简单讲一下该问题的两种解法。</p>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><h2 id=\"方案1：全排列\"><a href=\"#方案1：全排列\" class=\"headerlink\" title=\"方案1：全排列\"></a>方案1：全排列</h2><h3 id=\"方案1-1-考虑黑白球\"><a href=\"#方案1-1-考虑黑白球\" class=\"headerlink\" title=\"方案1.1 考虑黑白球\"></a>方案1.1 考虑黑白球</h3><p>假设11个球的颜色全不相同,则所有排列顺序是1~11的全排列是<strong>11!&#x3D;39916800</strong>。<br>再假设1,4,7为红球,2,5,8为黄球,3,6,9为蓝球，10为黑球,11为白球。<br><font color=\"#FF0000\">也可以1,2,3为红球,4,5,6为黄球,7,8,9为蓝球，10为白球,11为黑球。给球编号是为了计算全排列方便。</font><br>以全排列元素中的一个<strong>链表X</strong>(全排列的取值之一) **{9,8,3,5,6,4,11,7,1,2,10}**为例,<br>可以分成 **{9,8,3,5,6}**和 **{4,11,7}**和 **{1,2,10}<strong>三组。<br>将每组数据中≤9的对3取余,结果变成了A:</strong>{0,2,0,2,0}<strong>和B:</strong>{1,1,11}<strong>和C:</strong>{1,2,10}**三组数据。<br>∵ 在箱子中 **{4,11,7}**和 <strong>{4,7,11}<strong>是等价的。<br>∴ A、B、C三组都需要排序，排序后为{0,0,0,2,2}，{1,1,11},{1,2,10}<br>∴</strong>{9,8,3,5,6,4,11,7,1,2,10}</strong> 表示A箱子有3个蓝球，2个黄球；B箱子有2个红球,1个白球；C箱子有1个红球,1个黄球,1个黑球。<br>∴链表X的表达式是0,0,0,2,2,1,1,11,1,2,10<br>∴将39916800链表的表达式去重就可以算出序中提到的问题的解为355个。  </p>\n<h3 id=\"方案1-2-先不考虑黑白球\"><a href=\"#方案1-2-先不考虑黑白球\" class=\"headerlink\" title=\"方案1.2 先不考虑黑白球\"></a>方案1.2 先不考虑黑白球</h3><p>∵黑球的可能位置只有3种,白球的可能位置也只有3种。<br>即黑白球都在A箱,都在B箱,都在C箱,分别在AC箱,分别在BC箱，分别在AB箱。<br>所有组合情况如下<br><img src=\"/.com//nine.png\" alt=\"黑白球位置组合\"><br>这样就只需要计算9的全排列<strong>9!&#x3D;362880</strong>次数据。<br>计算方式如方案1.1,再次不再赘述。<br>结果依旧为355。<br>具体计算代码请参考<a href=\"https://github.com/ddabb/permutations/blob/master/Program.cs\">方案一代码</a></p>\n<h2 id=\"方案2：笛卡尔积\"><a href=\"#方案2：笛卡尔积\" class=\"headerlink\" title=\"方案2：笛卡尔积\"></a>方案2：笛卡尔积</h2><p>在不考虑各箱子容积的前提下；<br>每个球都有3个箱子可以选择，则11个球的位置有<strong>3的11次方&#x3D;177147</strong>中可能性。<br>若箱子A,B,C编号为{1,2,3}。大小分别为{5,3,3}。<br>则第一个球和第二球的箱子可能组合是{1,2,3}和{1,2,3}的笛卡尔积  </p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"template-variable\">&#123;   &#123;1,1&#125;</span><span class=\"language-xml\">,</span><span class=\"template-variable\">&#123;1,2&#125;</span><span class=\"language-xml\">,</span><span class=\"template-variable\">&#123;1,3&#125;</span><span class=\"language-xml\">,   </span><span class=\"template-variable\">&#123;2,1&#125;</span><span class=\"language-xml\">,</span><span class=\"template-variable\">&#123;2,2&#125;</span><span class=\"language-xml\">,</span><span class=\"template-variable\">&#123;2,3&#125;</span><span class=\"language-xml\">,   </span><span class=\"template-variable\">&#123;3,1&#125;</span><span class=\"language-xml\">,</span><span class=\"template-variable\">&#123;3,2&#125;</span><span class=\"language-xml\">,</span><span class=\"template-variable\">&#123;3,3&#125;</span><span class=\"language-xml\">  &#125;  </span></span><br></pre></td></tr></table></figure>\n\n<p>将每个球所有的可能性做笛卡尔积之后，会得到一个177147个<strong>元素个数为11的链表L</strong>的集合S。<br>若链表L中有5个元素1，有3个元素2，有3个元素3。则链表L符合球进入箱子的逻辑。否则不符合球进入箱子的逻辑。<br>假若链表L为{1,2,3,2,3,2,1,1,1,1,3}且11个球的顺序为<strong>红,红,红,黄,黄,黄,蓝,蓝,蓝,黑,白</strong><br>则箱子内的颜色情况如下:<br>A箱：红蓝蓝蓝黑<br>B箱：红黄蓝<br>C箱：红黄白<br>所以链表L的表示式为 A-红蓝蓝蓝黑 B-红黄蓝 C-红黄白<br>将所有符合进箱逻辑的链表的表达式算出来去重,算出来<strong>结果依旧为355。</strong><br>具体计算代码请参考<a href=\"https://github.com/ddabb/combination\">方案二代码</a>  </p>\n<blockquote>\n<p><strong><font color=\"#FF0000\">注意：相同颜色的球的顺序应该连在一起，否则箱子内的球需要再做一次排序去重。</font></strong>  </p>\n</blockquote>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>该文是对排列组合知识的一个补充。如果有更好的解决m个不同颜色的球放到n个箱子中的更好的解法，欢迎留言或者直接联系我。<br>如果能有算出斗地主有多少种牌型组合的方法，则更希望能联系我。<br>方案2在箱子不够多,球不够多的情况下,的确是不错的一个计算方案。</p>\n<hr>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.cnblogs.com/localhost2016/p/8668355.html\">C# 用Linq的方式实现组合和笛卡尔积（支持泛型T）</a></li>\n<li><a href=\"https://blog.csdn.net/MaybeHelios/article/details/759315\">终于有个高效率的排列组合算法</a></li>\n<li><a href=\"https://www.60points.com/Fight-the-Landlord-Card-Type-Aanalysis/\">欢乐斗地主出牌方式统计</a></li>\n</ul>\n","raw":null,"categories":[{"name":"逻辑思维","path":"api/categories/逻辑思维.json"}],"tags":[{"name":"排列组合","path":"api/tags/排列组合.json"},{"name":"不同颜色","path":"api/tags/不同颜色.json"}]},{"title":"python画爱心","slug":"python-print-heart","date":"2018-11-26T12:57:46.000Z","updated":"2023-09-08T06:12:36.696Z","comments":true,"path":"api/articles/python-print-heart.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//heart1.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>该文算是python版的”Hello world”初探，故作相关的记录。<br>环境准备:Visual Studio 2017,python</p>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><h2 id=\"爱心一\"><a href=\"#爱心一\" class=\"headerlink\" title=\"爱心一\"></a>爱心一</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">import</span> numpy as np</span><br><span class=\"line\"><span class=\"attribute\">import</span> matplotlib.pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">x_coords</span> = np.linspace(- <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\"><span class=\"attribute\">y_coords</span> = np.linspace(- <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\"><span class=\"attribute\">points</span> =<span class=\"meta\"> []</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">for</span> y in y_coords:</span><br><span class=\"line\"> <span class=\"attribute\">for</span> x in x_coords:</span><br><span class=\"line\">    <span class=\"attribute\">if</span>((x* <span class=\"number\">0</span>.<span class=\"number\">03</span>)** <span class=\"number\">2</span>+(y* <span class=\"number\">0</span>.<span class=\"number\">03</span>)** <span class=\"number\">2</span>- <span class=\"number\">1</span>)** <span class=\"number\">3</span>-(x* <span class=\"number\">0</span>.<span class=\"number\">03</span>)** <span class=\"number\">2</span>*(y* <span class=\"number\">0</span>.<span class=\"number\">03</span>)** <span class=\"number\">3</span>&lt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">       <span class=\"attribute\">points</span>.append(&#123; <span class=\"string\">&quot;x&quot;</span>: x, <span class=\"string\">&quot;y&quot;</span>: y&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">heart_x</span> = list(map( lambda point: point[ <span class=\"string\">&quot;x&quot;</span>], points))</span><br><span class=\"line\"><span class=\"attribute\">heart_y</span> = list(map( lambda point: point[ <span class=\"string\">&quot;y&quot;</span>], points))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">plt</span>.scatter(heart_x, heart_y, s= <span class=\"number\">10</span>, alpha= <span class=\"number\">0</span>.<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"attribute\">plt</span>.show()</span><br></pre></td></tr></table></figure>\n<p>效果如图<br><img src=\"/.com//heart1.png\" alt=\"爱心1\">  </p>\n<h2 id=\"爱心二\"><a href=\"#爱心二\" class=\"headerlink\" title=\"爱心二\"></a>爱心二</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 画心形圆弧</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hart_arc</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">200</span>):</span><br><span class=\"line\">        turtle.right(<span class=\"number\">1</span>)</span><br><span class=\"line\">        turtle.forward(<span class=\"number\">2</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">move_pen_position</span>(<span class=\"params\">x, y</span>):</span><br><span class=\"line\">    turtle.hideturtle()     <span class=\"comment\"># 隐藏画笔（先）</span></span><br><span class=\"line\">    turtle.up()     <span class=\"comment\"># 提笔</span></span><br><span class=\"line\">    turtle.goto(x, y)    <span class=\"comment\"># 移动画笔到指定起始坐标（窗口中心为0,0）</span></span><br><span class=\"line\">    turtle.down()   <span class=\"comment\"># 下笔</span></span><br><span class=\"line\">    turtle.showturtle()     <span class=\"comment\"># 显示画笔</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#love = input(&quot;请输入表白话语，默认为‘I Love You’：&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">#signature = input(&quot;请签署你的大名，不填写默认不显示：&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">signature= <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">love = <span class=\"string\">&#x27;I Love You&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> love == <span class=\"string\">&#x27;&#x27;</span>:</span><br><span class=\"line\">    love = <span class=\"string\">&#x27;I Love You&#x27;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">turtle.setup(width=<span class=\"number\">800</span>, height=<span class=\"number\">500</span>)     <span class=\"comment\"># 窗口（画布）大小</span></span><br><span class=\"line\">turtle.color(<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>)     <span class=\"comment\"># 画笔颜色</span></span><br><span class=\"line\">turtle.pensize(<span class=\"number\">3</span>)       <span class=\"comment\"># 画笔粗细</span></span><br><span class=\"line\">turtle.speed(<span class=\"number\">1</span>)     <span class=\"comment\"># 描绘速度</span></span><br><span class=\"line\"><span class=\"comment\"># 初始化画笔起始坐标</span></span><br><span class=\"line\">move_pen_position(x=<span class=\"number\">0</span>,y=-<span class=\"number\">180</span>)   <span class=\"comment\"># 移动画笔位置</span></span><br><span class=\"line\">turtle.left(<span class=\"number\">140</span>)    <span class=\"comment\"># 向左旋转140度</span></span><br><span class=\"line\"> </span><br><span class=\"line\">turtle.begin_fill()     <span class=\"comment\"># 标记背景填充位置</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 画心形直线（ 左下方 ）</span></span><br><span class=\"line\">turtle.forward(<span class=\"number\">224</span>)    <span class=\"comment\"># 向前移动画笔，长度为224</span></span><br><span class=\"line\"><span class=\"comment\"># 画爱心圆弧</span></span><br><span class=\"line\">hart_arc()      <span class=\"comment\"># 左侧圆弧</span></span><br><span class=\"line\">turtle.left(<span class=\"number\">120</span>)    <span class=\"comment\"># 调整画笔角度</span></span><br><span class=\"line\">hart_arc()      <span class=\"comment\"># 右侧圆弧</span></span><br><span class=\"line\"><span class=\"comment\"># 画心形直线（ 右下方 ）</span></span><br><span class=\"line\">turtle.forward(<span class=\"number\">224</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">turtle.end_fill()       <span class=\"comment\"># 标记背景填充结束位置</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 在心形中写上表白话语</span></span><br><span class=\"line\">move_pen_position(<span class=\"number\">0</span>,<span class=\"number\">0</span>)      <span class=\"comment\"># 表白语位置</span></span><br><span class=\"line\">turtle.hideturtle()     <span class=\"comment\"># 隐藏画笔</span></span><br><span class=\"line\">turtle.color(<span class=\"string\">&#x27;#CD5C5C&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>)      <span class=\"comment\"># 字体颜色</span></span><br><span class=\"line\"><span class=\"comment\"># font:设定字体、尺寸（电脑下存在的字体都可设置）  align:中心对齐</span></span><br><span class=\"line\">turtle.write(love, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;bold&#x27;</span>), align=<span class=\"string\">&quot;center&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 签写署名</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> signature != <span class=\"string\">&#x27;&#x27;</span>:</span><br><span class=\"line\">    turtle.color(<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\">    move_pen_position(<span class=\"number\">180</span>, -<span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.hideturtle()  <span class=\"comment\"># 隐藏画笔</span></span><br><span class=\"line\">    turtle.write(signature, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">20</span>), align=<span class=\"string\">&quot;center&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 点击窗口关闭程序</span></span><br><span class=\"line\">window = turtle.Screen()</span><br><span class=\"line\">window.exitonclick()</span><br></pre></td></tr></table></figure>\n<p>效果如下图<br><img src=\"/.com//heart2.png\" alt=\"爱心2\">  </p>\n<h2 id=\"爱心三\"><a href=\"#爱心三\" class=\"headerlink\" title=\"爱心三\"></a>爱心三</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import matplotlib<span class=\"selector-class\">.pyplot</span> as plt</span><br><span class=\"line\">from matplotlib<span class=\"selector-class\">.font_manager</span> import FontProperties</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">x=np<span class=\"selector-class\">.linspace</span>(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">200</span>)</span><br><span class=\"line\">y1 =np<span class=\"selector-class\">.sqrt</span>(<span class=\"number\">1</span>-np<span class=\"selector-class\">.square</span>(np<span class=\"selector-class\">.fabs</span>(x)-<span class=\"number\">1</span>))</span><br><span class=\"line\">y2 =np<span class=\"selector-class\">.arccos</span>(<span class=\"number\">1</span>-np<span class=\"selector-class\">.fabs</span>(x))-np<span class=\"selector-class\">.pi</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt<span class=\"selector-class\">.plot</span>(x,y1,<span class=\"string\">&#x27;r&#x27;</span>,x,y2,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt<span class=\"selector-class\">.axis</span>(<span class=\"selector-attr\">[-2.5,2.5,-3.5,1.5]</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt<span class=\"selector-class\">.title</span>(<span class=\"string\">&#x27;hello world of python,copy from @andrew&#x27;</span>,fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt<span class=\"selector-class\">.show</span>()</span><br></pre></td></tr></table></figure>\n<p>效果如下图<br><img src=\"/.com//heart3.png\" alt=\"爱心3\">  </p>\n<h1 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h1><p><strong>在visual studio 2017中命令行执行 pip install numpy 无效</strong><br>在nuget程序包管理器控制台执行即可<br><strong>pip install pyinstaller之后生成的exe无法执行</strong><br>在我电脑上的路径是<strong>C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\Scripts</strong>,<br>把run.py拷贝到该目录,执行<strong>pyinstaller -F -W p . run.py</strong>解决问题</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p><img src=\"/.com//hurt.png\" alt=\"暴击\"></p>\n<hr>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://cloud.tencent.com/developer/news/216095\">520情人节，用python画个爱心送给你的那个她！</a></li>\n<li><a href=\"https://www.taitaiblog.com/1314.html\">七夕将至，教你用Python绘制爱心，优雅的表白520~</a></li>\n</ul>\n","raw":null,"categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"代码世界/python","path":"api/categories/代码世界/python.json"}],"tags":[{"name":"python","path":"api/tags/python.json"},{"name":"画爱心","path":"api/tags/画爱心.json"},{"name":"hello-world","path":"api/tags/hello-world.json"}]},{"title":"手写数独教程","slug":"handwrite-soduku","date":"2018-11-25T03:14:42.000Z","updated":"2023-09-08T06:12:36.692Z","comments":true,"path":"api/articles/handwrite-soduku.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>该文目的是简单记载3*3数独的手写过程,并熟悉一下mathjax工具的运用。</p>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><p>该文的整个过程可以用手写实现，也可以用编程语言实现，该文不对怎么用编程语言实现做详细描述。仅阐述手写的详细过程:</p>\n<h2 id=\"生成行\"><a href=\"#生成行\" class=\"headerlink\" title=\"生成行\"></a>生成行</h2><p>首先,我们可以手写一行包含1<del>9<strong>数据行A</strong>，不重复即可，顺序不重要,该文以1</del>9顺序排列做示例。<br>\\begin{bmatrix}<br>1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 \\<br>\\end{bmatrix}<br>然后将<strong>数据行A</strong>的前三位1,2,3移到<strong>数据行A</strong>的末尾,生成新的一行<strong>数据行B</strong>:<br>\\begin{bmatrix}<br>4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp;1 &amp; 2 &amp; 3 \\<br>\\end{bmatrix}<br>然后将<strong>数据行B</strong>的前三位4,5,6移到<strong>数据行B</strong>的末尾,生成新的一行<strong>数据行C</strong>:<br>\\begin{bmatrix}<br>7 &amp; 8 &amp; 9 &amp;1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6  \\<br>\\end{bmatrix}</p>\n<h2 id=\"生成块\"><a href=\"#生成块\" class=\"headerlink\" title=\"生成块\"></a>生成块</h2><p>再将数据行依次组合，生成一个3行9列的数据块 $X_1$<br>\\begin{bmatrix}<br>1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 \\<br>4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 \\<br>7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6  \\<br>\\end{bmatrix}<br>将数据块$X_1$的第一列<br>\\begin{bmatrix}<br>1 \\<br>4 \\<br>7  \\<br>\\end{bmatrix}<br>移到最后一列生成新的数据块$X_2$<br>\\begin{bmatrix}<br> 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1\\<br> 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4\\<br> 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7\\<br>\\end{bmatrix}<br>再将数据块$X_2$的第一列<br>\\begin{bmatrix}<br>2 \\<br>5 \\<br>8 \\<br>\\end{bmatrix}<br>移到最后一列生成新的数据块$X_3$<br>\\begin{bmatrix}<br> 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2\\<br> 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5\\<br> 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8\\<br>\\end{bmatrix}<br>再将数据块$X_1$,$X_2$,$X_3$依次组合,就形成了如下图所示的数独$Y_1$。<br>\\begin{bmatrix}<br>1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 \\<br>4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 \\<br>7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 \\<br>2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 \\<br>5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\<br>8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 \\<br>3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 \\<br>6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\<br>9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 \\<br>\\end{bmatrix}<br>所以说手写数独是很简单的，那怎么样让别人看不出来这是一个手写的?</p>\n<h2 id=\"行交换\"><a href=\"#行交换\" class=\"headerlink\" title=\"行交换\"></a>行交换</h2><p>可以将 **[1,2,3]**行中两两任意互换;<br>可以将 **[4,5,6]**行中两两任意互换;<br>可以将 **[7,8,9]**行中两两任意互换;<br>第一行和第三行交换用 $1\\Leftrightarrow3$ 表示。<br>依次执行$1\\Leftrightarrow3$ ，$4\\Leftrightarrow5$ 和 $8\\Leftrightarrow9$<br>生成新的数独$Y_2$。如下:<br>\\begin{bmatrix}<br>4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 \\<br>7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 \\<br>1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 \\<br>5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\<br>2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 \\<br>8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 \\<br>3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 \\<br>9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 \\<br>6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\<br>\\end{bmatrix}</p>\n<h2 id=\"列交换\"><a href=\"#列交换\" class=\"headerlink\" title=\"列交换\"></a>列交换</h2><p>可以将 **[1,2,3]**列中两两任意互换;<br>可以将 **[4,5,6]**列中两两任意互换;<br>可以将 **[7,8,9]**列中两两任意互换;<br>第一列和第三列交换用 $1\\Longleftrightarrow3$ 表示。<br>依次对$Y_2$执行$1\\Longleftrightarrow3$ ，$4\\Longleftrightarrow5$ 和 $8\\Longleftrightarrow9$<br>生成新的数独$Y_3$。如下:<br>\\begin{bmatrix}<br>6 &amp; 5 &amp; 4 &amp; 8 &amp; 7 &amp; 9 &amp; 1 &amp; 3 &amp; 2  \\<br>9 &amp; 8 &amp; 7 &amp; 2 &amp; 1 &amp; 3 &amp; 4 &amp; 6 &amp; 5  \\<br>3 &amp; 2 &amp; 1 &amp; 5 &amp; 4 &amp; 6 &amp; 7 &amp; 9 &amp; 8  \\<br>7 &amp; 6 &amp; 5 &amp; 9 &amp; 8 &amp; 1 &amp; 2 &amp; 4 &amp; 3  \\<br>4 &amp; 3 &amp; 2 &amp; 6 &amp; 5 &amp; 7 &amp; 8 &amp; 1 &amp; 9  \\<br>1 &amp; 9 &amp; 8 &amp; 3 &amp; 2 &amp; 4 &amp; 5 &amp; 7 &amp; 6  \\<br>5 &amp; 4 &amp; 3 &amp; 7 &amp; 6 &amp; 8 &amp; 9 &amp; 2 &amp; 1  \\<br>2 &amp; 1 &amp; 9 &amp; 4 &amp; 3 &amp; 5 &amp; 6 &amp; 8 &amp; 7  \\<br>8 &amp; 7 &amp; 6 &amp; 1 &amp; 9 &amp; 2 &amp; 3 &amp; 5 &amp; 4  \\<br>\\end{bmatrix}</p>\n<h2 id=\"数值交换\"><a href=\"#数值交换\" class=\"headerlink\" title=\"数值交换\"></a>数值交换</h2><p>将数独$Y_3$中的数字任意两个数字互换局组成了新的数独,如数独$Y_3$的<strong>2</strong>和<strong>7</strong>互换，就生成了新的数独$Y_4$<br>\\begin{bmatrix}<br>6 &amp; 5 &amp; 4 &amp; 8 &amp; 2 &amp; 9 &amp; 1 &amp; 3 &amp; 7  \\<br>9 &amp; 8 &amp; 2 &amp; 7 &amp; 1 &amp; 3 &amp; 4 &amp; 6 &amp; 5  \\<br>3 &amp; 7 &amp; 1 &amp; 5 &amp; 4 &amp; 6 &amp; 2 &amp; 9 &amp; 8  \\<br>2 &amp; 6 &amp; 5 &amp; 9 &amp; 8 &amp; 1 &amp; 7 &amp; 4 &amp; 3  \\<br>4 &amp; 3 &amp; 7 &amp; 6 &amp; 5 &amp; 2 &amp; 8 &amp; 1 &amp; 9  \\<br>1 &amp; 9 &amp; 8 &amp; 3 &amp; 7 &amp; 4 &amp; 5 &amp; 2 &amp; 6  \\<br>5 &amp; 4 &amp; 3 &amp; 2 &amp; 6 &amp; 8 &amp; 9 &amp; 7 &amp; 1  \\<br>7 &amp; 1 &amp; 9 &amp; 4 &amp; 3 &amp; 5 &amp; 6 &amp; 8 &amp; 2  \\<br>8 &amp; 2 &amp; 6 &amp; 1 &amp; 9 &amp; 7 &amp; 3 &amp; 5 &amp; 4  \\<br>\\end{bmatrix}</p>\n<blockquote>\n<p>行交换，列交换，数值交换次数越多,就越来越没有手写的痕迹。掌握了数独的一个相关规律,手写数独就再是遥不可及的事情。</p>\n</blockquote>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>该文简单地介绍了手写数独的过程,希望那些对数独感兴趣的人读了这篇文章后有所收获。</p>\n<hr>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://blog.csdn.net/frone/article/details/81170627\">如何在hexo中支持Mathjax</a></li>\n</ul>\n","raw":null,"categories":[{"name":"数独之趣","path":"api/categories/数独之趣.json"}],"tags":[{"name":"数独","path":"api/tags/数独.json"},{"name":"hexo","path":"api/tags/hexo.json"},{"name":"mathjax","path":"api/tags/mathjax.json"}]},{"title":"Hexo画流程图","slug":"Hexo_flow","date":"2018-11-24T12:10:41.000Z","updated":"2023-09-08T06:12:36.545Z","comments":true,"path":"api/articles/Hexo_flow.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>该文简单介绍一下在Hexo博客上画流程图。</p>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><h2 id=\"mermaid\"><a href=\"#mermaid\" class=\"headerlink\" title=\"mermaid\"></a>mermaid</h2><p>安装代码</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-<span class=\"built_in\">filter</span>-mermaid-diagrams</span><br></pre></td></tr></table></figure>\n<p>打开<strong>themes&#x2F;next&#x2F;_config.yml</strong><br>添加以下代码</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># mermaid chart</span></span><br><span class=\"line\"><span class=\"symbol\">mermaid:</span> <span class=\"meta\">## mermaid url https:<span class=\"comment\">//github.com/knsv/mermaid</span></span></span><br><span class=\"line\"><span class=\"symbol\">  enable:</span> true  <span class=\"meta\"># default true</span></span><br><span class=\"line\"><span class=\"symbol\">  version:</span> <span class=\"string\">&quot;7.1.2&quot;</span> <span class=\"meta\"># default v7.1.2</span></span><br><span class=\"line\"><span class=\"symbol\">  options:</span>  <span class=\"meta\"># find more api options from https:<span class=\"comment\">//github.com/knsv/mermaid/blob/master/src/mermaidAPI.js</span></span></span><br><span class=\"line\">    <span class=\"meta\">#startOnload: true  <span class=\"comment\">// default true</span></span></span><br></pre></td></tr></table></figure>\n<p>在<strong>themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.swig</strong>最后加上</p>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> (theme.mermaid.enable)  %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&#x27;https://cdnjs.cloudflare.com/ajax/libs/mermaid/7.1.2/mermaid.min.js&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">mermaid</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      mermaid.<span class=\"title function_\">initialize</span>(&#123;<span class=\"attr\">theme</span>: <span class=\"string\">&#x27;forest&#x27;</span>&#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>最后一步修改<strong>根目录的_config.yml</strong>，把external_link的值改为false，默认的为true，这一步绝大多数教程中都没有写。</p>\n<p>mermaid画流程图<br>示例代码</p>\n<blockquote>\n<p>```mermaid<br>graph TD;<br>   起床–&gt;洗漱;<br>   洗漱–&gt;吃早餐;<br>   洗漱–&gt;不吃早餐;<br>   吃早餐–&gt;出门;<br>   不吃早餐–&gt;出门;<br>```  </p>\n</blockquote>\n<p>效果如下</p>\n<pre class=\"mermaid\">graph TD;\n    起床-->洗漱;\n    洗漱-->吃早餐;\n    洗漱-->不吃早餐;\n    吃早餐-->出门;\n    不吃早餐-->出门;</pre>\n\n<h2 id=\"flow\"><a href=\"#flow\" class=\"headerlink\" title=\"flow\"></a>flow</h2><p>安装代码</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install <span class=\"attr\">--save</span> hexo-<span class=\"attribute\">filter</span>-flowchart</span><br></pre></td></tr></table></figure>\n<p>然后无需其余配置<br>flow画流程图示例代码如下</p>\n<blockquote>\n<p>```flow<br>st&#x3D;&gt;start: Start|past:&gt;<a href=\"http://www.google.com[blank]\">http://www.google.com[blank]</a><br>e&#x3D;&gt;end: End:&gt;<a href=\"http://www.google.com/\">http://www.google.com</a><br>op1&#x3D;&gt;operation: My Operation|past<br>op2&#x3D;&gt;operation: Stuff|current<br>sub1&#x3D;&gt;subroutine: My Subroutine|invalid<br>cond&#x3D;&gt;condition: Yes<br>or No?|approved:&gt;<a href=\"http://www.google.com/\">http://www.google.com</a><br>c2&#x3D;&gt;condition: Good idea|rejected<br>io&#x3D;&gt;inputoutput: catch something…|request<br>st-&gt;op1(right)-&gt;cond<br>cond(yes, right)-&gt;c2<br>cond(no)-&gt;sub1(left)-&gt;op1<br>c2(yes)-&gt;io-&gt;e<br>c2(no)-&gt;op2-&gt;e<br>```  </p>\n</blockquote>\n<p>flow画流程图效果如下</p>\n<div id=\"flowchart-0\" class=\"flow-chart\"></div>\n\n<h2 id=\"sequence\"><a href=\"#sequence\" class=\"headerlink\" title=\"sequence\"></a>sequence</h2><p>安装代码</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install <span class=\"attr\">--save</span> hexo-<span class=\"attribute\">filter</span>-sequence</span><br></pre></td></tr></table></figure>\n<p>然后无需其余配置。<br>sequence 画流程图示例代码</p>\n<blockquote>\n<p>```sequence<br>Alice-&gt;Bob: Hello Bob, how are you?<br>Note right of Bob: Bob thinks<br>Bob–&gt;Alice: I am good thanks!<br>```  </p>\n</blockquote>\n<p>sequence 画流程图效果如下</p>\n<div id=\"sequence-0\"></div>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>相比之下,mermaid的语法最简洁，渲染成图的过程最复杂，配置也最复杂。<br>而flow和sequence相对而言配置简单一点，但是语法复杂一些。</p>\n<hr>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\">如何让你的HEXO博客支持手写流程图？</a><script src=\"https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js\"></script><textarea id=\"flowchart-0-code\" style=\"display: none\">st=>start: Start|past:>http://www.google.com[blank]\ne=>end: End:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|request\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e</textarea><textarea id=\"flowchart-0-options\" style=\"display: none\">{\"theme\":\"simple\",\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12}</textarea><script>  var code = document.getElementById(\"flowchart-0-code\").value;  var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value));  var diagram = flowchart.parse(code);  diagram.drawSVG(\"flowchart-0\", options);</script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/webfont/1.6.27/webfontloader.js\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js\"></script><textarea id=\"sequence-0-code\" style=\"display: none\">Alice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!</textarea><textarea id=\"sequence-0-options\" style=\"display: none\">{\"theme\":\"simple\",\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12}</textarea><script>  var code = document.getElementById(\"sequence-0-code\").value;  var options = JSON.parse(decodeURIComponent(document.getElementById(\"sequence-0-options\").value));  var diagram = Diagram.parse(code);  diagram.drawSVG(\"sequence-0\", options);</script></li>\n</ul>\n","raw":null,"categories":[{"name":"Hexo教程","path":"api/categories/Hexo教程.json"}],"tags":[{"name":"hexo","path":"api/tags/hexo.json"},{"name":"流程图","path":"api/tags/流程图.json"}]},{"title":"hexo 调用share.js","slug":"hexo_share_to_wechat","date":"2018-11-24T09:39:56.000Z","updated":"2023-09-08T06:12:36.693Z","comments":true,"path":"api/articles/hexo_share_to_wechat.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//share.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>我本来想做的分享按钮预期效果如下：<br><img src=\"/.com//share.png\" alt=\"分享图标\">,本来也打开了一个实现了该效果的个人网站，结果一不小心关掉了,然后就只能自己动手制作分享功能。</p>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><p>首先在<strong>themes\\next\\layout</strong>中新建一个文件<strong>socialshare.swig</strong><br>编辑内容如下</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;../lib/jquery/index.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;link href=<span class=\"string\">&quot;https://cdn.bootcss.com/social-share.js/1.0.16/css/share.min.css&quot;</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">&quot;https://cdn.bootcss.com/social-share.js/1.0.16/js/jquery.share.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt; var <span class=\"variable\">$config</span> = &#123;</span><br><span class=\"line\">      url                 : window.location.href,<span class=\"regexp\">//</span> 网址，默认使用 window.location.href</span><br><span class=\"line\">      source              : <span class=\"string\">&#x27;&#x27;</span>, <span class=\"regexp\">//</span> 来源（QQ空间会用到）, 默认读取head标签：&lt;meta name=<span class=\"string\">&quot;site&quot;</span> content=<span class=\"string\">&quot;http://overtrue&quot;</span> /&gt;</span><br><span class=\"line\">      title               : <span class=\"string\">&#x27;&#x27;</span>, <span class=\"regexp\">//</span> 标题，默认读取 document.title 或者 &lt;meta name=<span class=\"string\">&quot;title&quot;</span> content=<span class=\"string\">&quot;share.js&quot;</span> /&gt;</span><br><span class=\"line\">      description         : <span class=\"string\">&#x27;&#x27;</span>, <span class=\"regexp\">//</span> 描述, 默认读取head标签：&lt;meta name=<span class=\"string\">&quot;description&quot;</span> content=<span class=\"string\">&quot;PHP弱类型的实现原理分析&quot;</span> /&gt;</span><br><span class=\"line\">      image               : <span class=\"string\">&#x27;&#x27;</span>, <span class=\"regexp\">//</span> 图片, 默认取网页中第一个img标签</span><br><span class=\"line\">      sites               : [<span class=\"string\">&#x27;qzone&#x27;</span>, <span class=\"string\">&#x27;qq&#x27;</span>, <span class=\"string\">&#x27;weibo&#x27;</span>,<span class=\"string\">&#x27;wechat&#x27;</span>], <span class=\"regexp\">//</span> 启用的站点</span><br><span class=\"line\">      disabled            : [<span class=\"string\">&#x27;google&#x27;</span>, <span class=\"string\">&#x27;facebook&#x27;</span>, <span class=\"string\">&#x27;twitter&#x27;</span>], <span class=\"regexp\">//</span> 禁用的站点</span><br><span class=\"line\">      wechatQrcodeTitle   : <span class=\"string\">&#x27;微信扫一扫：分享&#x27;</span>, <span class=\"regexp\">//</span> 微信二维码提示文字</span><br><span class=\"line\">      wechatQrcodeHelper  : <span class=\"string\">&#x27;&lt;p&gt;微信里点“发现”，扫一下&lt;/p&gt;&lt;p&gt;二维码便可将本文分享至朋友圈。&lt;/p&gt;&#x27;</span>,</span><br><span class=\"line\">      target : <span class=\"string\">&#x27;_blank&#x27;</span> <span class=\"regexp\">//</span>打开方式</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  $(<span class=\"string\">&#x27;.social-share&#x27;</span>).share(<span class=\"variable\">$config</span>);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>然后找到<strong>themes\\next\\layout</strong>中的文件<strong>post.swig</strong>中的这部分代码</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;footer <span class=\"attribute\">class</span>=<span class=\"string\">&quot;post-footer&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>之前贴上以下代码</p>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> theme.social_share and not is_index %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">   </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">include</span></span> &#x27;../_partials/share/socialshare.swig&#x27; %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;social-share&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>\n<p>在主题_config.yml文件中增加以下代码</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">social_share:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>保存修改后，然后hexo clean ，hexo g ，hexo d 即可看到点击效果。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>虽说分享功能不如我的预期完整,但是也是解决了baidu share组件和赞赏组件冲突的问题。<br>如果有时间,还有兴趣的时候会继续折腾Share.js这个组件。<br>然后希望有已经部署成功的人指点一二，不胜感激。</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>于2018年12月14日修正并解决了该问题。</p>\n<hr>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.oschina.net/p/share-js\">一键转发工具 Share.js</a></li>\n</ul>\n","raw":null,"categories":[{"name":"Hexo教程","path":"api/categories/Hexo教程.json"}],"tags":[{"name":"hexo","path":"api/tags/hexo.json"},{"name":"朋友圈","path":"api/tags/朋友圈.json"}]}]}