{"total":263,"pageSize":10,"pageCount":27,"data":[{"title":"休假之我思","slug":"Thinking_in_holiday","date":"2019-11-30T00:36:41.000Z","updated":"2023-09-08T06:12:36.684Z","comments":true,"path":"api/articles/Thinking_in_holiday.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//%E6%9A%B4%E5%8A%9B%E8%A3%81%E5%91%98%E8%AF%84%E8%AE%BA.jpg","content":"<p>在11月初的时候，预估了项目的进度，提出了月底休假四天的申请；为了让这次休假顺利进行，优化了跨团队的一些沟通成本，将一些自己手头上别人可以胜任的工作分配出去，结合昨日的最终产出来看，基本上做到公司有我和我没有一个样。<br>上周我休假了四天，原意是术业专攻，好好练车，没想到这件事情竟然还有了一些意外收获。这期间比较受关注的社会新闻是网易的暴力裁员和高以翔的猝死事件。基本上讲的是过劳。我这个假期中基本上都是12点前睡觉，7点多自然醒。因为不慌不忙的生活节奏，看了几本书，甚至还做了一些可能自己才能吃的面条和午饭。和十一假期比起来,因为十一要张罗搬家之后的添置物件等事项，这个假期显得更加轻松自在。<br>昨天朋友跟朋友聊天的时候，要她给我出个题，写一写命题作文。她要我针对下图做一个看图作文  </p>\n<p><img src=\"/.com//%E6%9A%B4%E5%8A%9B%E8%A3%81%E5%91%98%E8%AF%84%E8%AE%BA.jpg\" alt=\"暴力裁员\">  </p>\n<p>这图上，已经有各种哈姆雷特，不一一评论。里面有”是不是有必要认识一些大V，以备不时之需”这一句话，让我有些感触。以下我浅谈对这句话的理解。<br>我有一个姑姑，她无比操心我的婚事：<br>18年的大年30日，带我去相亲看了一个吴姓的妹子。那时候我是个200斤的胖子，结果可想而知。<br>19年的九月30日，吴姓妹子的奶奶给我姑姑推荐在珠海工作的一个姑娘，后来因为我个人觉得不合适，就没有了后文。<br>19年的十月30日，我姑姑给我介绍了一个在长沙的超级超级好看的姑娘，身高170，在上市公司工作，有些美好到虚幻。<br>19年的冬月30日，吴姓妹子的奶奶(请注意这是个连续剧)又给我做媒,说在深圳有个姓易的姑娘，这个还没有任何开始。<br>我姑姑估计是做过项目管理，每月的月底都给一个月度相亲计划，不成功就下一个项目计划，不允许项目延期迟迟不交付。回到正题，我姑姑就像是相亲届的大V，但是她这种热衷于相亲的事情估计也就对我如此上心，矫情一点的讲，这就是爱啊。如果不能从我这里获得一点爱的成就感，热脸贴到冷屁股上面，又何必如此上心。<br>换个角度来讲，我姑姑这个相亲大V有各种资源，比如长沙，深圳，珠海等各地的资源，甚至她还能通过资源扩展资源。奈何我自己不争气，不能好好珍惜大V提供的资源。大V再有能耐也无事于补嘛。<br>无论是工作，还是生活，如果本身的实力不允许，大V的再怎么协助也只能协助一时，寄希望于大V来协助解决问题终究有点本末倒置的感觉。喜欢和员工称兄道弟的大V刘强东在网易暴力裁员事件爆出来以后声明<strong>京东员工遭遇不幸的话 将负责子女费用到22岁</strong>。总不能为了免去子女22岁之前的费用还让自己遭遇一个不幸吧?正常作息、健康饮食、锻炼身体、枸杞人参，保证高的生活质量，提高工作效率，劳逸结合降低不幸的发生几率，让自己成为真正的大V，这才是幸福生活应该做的事情。<br>这个八天长假即将过去，不敢说我的失眠症状已经完全好了。但是很明确的是无论是工作还是生活，事情都在好转，渐渐地多了一些有条理的感觉。深化和储备在一步一步的推进，这就是生活中值得欣喜的地方。  </p>\n","raw":null,"categories":[{"name":"生活感悟","path":"api/categories/生活感悟.json"}],"tags":[{"name":"兄弟","path":"api/tags/兄弟.json"},{"name":"能力","path":"api/tags/能力.json"}]},{"title":"红颜蓝颜","slug":"red_color_and_blue_color","date":"2019-08-03T05:05:11.000Z","updated":"2023-09-08T06:12:36.698Z","comments":true,"path":"api/articles/red_color_and_blue_color.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h2 id=\"红颜\"><a href=\"#红颜\" class=\"headerlink\" title=\"红颜\"></a>红颜</h2><p>每当听到红颜这个词，我容易联想到关公，也容易想到红颜薄命。<br>红颜，某种层面上来讲就是朋友之上，恋人未满。娶了白玫瑰，红的就成了心口上的一颗朱砂痣。<br>我没有红颜，只有——我就要读研毕业了，“你来我学校陪我吃谢师宴吧”的雪姐。<br>我没有红颜，只有——我在某某地方旅游，谁需要明信片的学妹。我还厚着脸皮问人家要的那种。<br>我没有红颜，只有——大学毕业前三天才认识的倩姐，作为公务员，为人民服务，传授于我一些与人相处之道。<br>我没有红颜，只有——周末有空没，过来帮我弄个看房名额，我请你吃饭的女汉子。<br>我没有红颜，只有——你妈做的酸枣糕真好吃，带点到长沙来，来我家吃饭吧，我跟你买的徒弟。<br>我没有所谓的红颜，只有一些哪里有好吃的，好喝的，好玩的就惦记着我的异性朋友，然而我就是这样胖起来的。</p>\n<h2 id=\"蓝颜\"><a href=\"#蓝颜\" class=\"headerlink\" title=\"蓝颜\"></a>蓝颜</h2><p>蓝颜，另一角度的朋友之上，恋人未满。<br>我不是蓝颜，只是有数学老师跟我说——出了地铁那一刻莫名其妙地想哭。<br>我不是蓝颜，只是有家庭主妇跟我说——家里突生变故，能否给予一些经济帮助。<br>我不是蓝颜，只是有敬业同事跟我说——我只是觉得别人做得都比我好，我应该做得更好。<br>我不是蓝颜，只是有相亲对象跟我说——我觉得你人挺优秀的，很绅士，幽默，但是我确实没有什么感觉和想法。  </p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>我是一个头脑简单的人，只有冰(路人)，水(朋友)，水蒸气(恋人)三种状态。如果进入冰点，或者沸点。这种状态也不会长久，换句话说就是于我而言，没有永久的红颜，或者永久的蓝颜这种状态，详情参见热力学定律。  </p>\n<p>两个人相遇，只要三观不过于奇葩，既不易完全成为路人，也不易一下子就沸腾起来变成水蒸气。总得有个通过相处加热的过程。所谓的顺其自然，只不过是在说“你看这酒精灯里面的灯芯我还在让它燃着了，最后沸不沸腾就看造化了。”<br>红颜也好，蓝颜也罢。我即不批判也不反感，只是觉得这不是一种稳定状态。找个人好好恋爱，好好结婚就好了嘛~</p>\n<p><strong>补充说一句：杨紫与张一山，黄晓明与赵薇，何炅与谢娜是有着革命友谊的亲人。</strong></p>\n","raw":null,"categories":[{"name":"生活感悟","path":"api/categories/生活感悟.json"}],"tags":[{"name":"红颜","path":"api/tags/红颜.json"},{"name":"蓝颜","path":"api/tags/蓝颜.json"},{"name":"命题作文","path":"api/tags/命题作文.json"}]},{"title":"闲谈权游","slug":"闲谈权游","date":"2019-05-18T05:27:11.000Z","updated":"2023-09-08T06:12:36.710Z","comments":true,"path":"api/articles/闲谈权游.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<p>小恶魔、小指头、小玫瑰、小剥皮、二丫、三傻、龙母、火吻、弑君者、色后、灰虫子、猫姨、肉山、猎狗、红袍女、核桃大帝、乔大帝、托曼大帝、阿多（瓦德）、臭佬、巨人克星、大美人、闪电大王……，这部拥有超多绰号的美剧《权利的游戏》终于迎来了它的终结。<br>我就不对剧中喜欢的角色来做分析和讨论了，我就对冰与火之歌改编成权游这件事情做一点自己的分享。<br>2DB(权游的编剧)在阅读了《冰与火之歌》这个伟大的史诗魔幻巨作之后，看重了其中的无限商机，就找到还年轻的乔治马丁老爷子说想把书拍成电视剧，马丁老爷子就问他们”琼恩·雪诺”的母亲是谁，这两个被吐槽<strong>脱离原著加持，便毫无创作力可言</strong>的两编剧还真答出来了，最终确定了拍成电视剧的想法，并经过优秀的特效团队的后期，以及演员的精湛表演，才给我们奉献上了高清无码的大片（Ice And Fire又译Fxxk and Kill）。试想若是他们答不出来，就不会让剧迷们看到这么让人无奈的第八季了。<br>为什么第八季这么让人不满意？因为《冰与火之歌》这本书还停留在琼恩·雪诺被捅了四刀那一段。之后剧情中的故事全部由2DB两个编剧基于已有故事情节进行人物的重构以及剧情的再创作。<br>那为什么《冰与火之歌》最后两卷《凛冽的寒风》和《春晓的梦想》这么难产？马丁老爷子曾说过：</p>\n<blockquote>\n<p>“这几年我一直在努力去写，《凛冽的寒风》虽然只是小说中的第六卷，但是比一部小说还难些，简直是好多部小说，每一部都有一个主人公视角，还相应搭配着互不相同的一整套的队友、敌人、盟友、支持者，而所有这些又互相关联，关系交织在一起成了一张特别复杂的关系网络，牵一发而动全身，所以写到现在这个程度， 还要继续往下写就非常具有挑战性了。相对而言，外传《血火同源》就显得很容易写，并不是简单，这本书也花了我几年才完成，但是相对得心应手。”</p>\n</blockquote>\n<p>换个软件行业的角度来讲，这不就是一个写了20多年的高度耦合的软件系统越来越难以维护了么？剧迷们看到波德瑞克和詹德利都分不清，更何况剧中牵扯不清的人物关系，一个人是哥哥，又是儿子他爸。一会是阿莲.石东，一会是三傻。要从各个POV视角中厘清各个人物关系以及地图背景需要对原著通读好几遍然后才行。书中可以突然某一段冒出一个珍妮.普尔(局部变量)作为珊莎的侍女嫁个小剥皮，而电视剧不能这么拍，人物的出场必须得有一些前因后果。所以剧情会根据演员的情况，以及一些不可抗拒的因素做一些相应的调整,权力的游戏本身就很黄暴，而书更加黄暴，所以猫姨死后在水里泡了三天三夜被闪电大王复活的情节基本上从电视视觉上一开始就注定被人看不到了。既然电视剧是对书的二次创作，所以就根本不可能完完整整对书进行重现。<br>因为最终还有原著的编剧的加持，所以对前五季整个剧情的走向并不会太偏。后面随着两个编剧（策划）对整个系统的进度的把控严重失误，强行dispose多恩线和高庭线，导致这个电视剧像被人咀嚼过一遍的甘蔗，全是渣。<br>两个编剧在面对庞大的演员阵容，高昂的演出费用和特效费用，在原有系统停滞不前，孤立无援地情况下，只好自作主张拿起笔杆，自己来写，结果导致了大量剧迷对第八季的强烈不满。像是一个优秀的系统在两个完全外行的人手里瞎折腾一番之后变成了一个烂尾作品。而这两个编剧就像是耗费2个多亿，耗时2年多，连一个可用的网站或者APP都没有交付出来的某某某咨询公司。<br>其实第八季不让人那么满意的原因并不能仅仅责怪那两个编剧，如果能预见马丁老爷子写书慢，多做一些风险控制，在马丁老爷子不务正业正传都没有写完去写前传的时候多跟马丁老爷子做一些整个人物框架的构建，多做一些人物分析，少做一些out of memory 或者Out Of Character的剧情，也许整个剧集就不至于崩坏得这么一塌糊涂。<br>开篇时，我就提到我不想讨论剧情，写到这里还是讨论一下夜王的死法。其实我挺认可这种表现形式的，就像是二战纪录片诺曼底登陆那一段，一个年轻人拿着枪在岸边冲，结果一下子就躺在那里一动不动了。抑或是电影“死于明日”和“天劫余生”里面表现的死亡形式一样，死亡就像是抽烟喝酒一样平常，如果夜王不被艾丽娅·史塔克的匕首捅死，难道非得被托尼·史塔克的响指带走才合理么？难道布兰突然站起来说，我是“逆闪”然后用“震波”解决掉夜王？剧中就凡人皆有一血的二丫是最终解决夜王的人做了居多铺垫，比如二丫和大美人对打那一段。在此不赘述。也不再吐槽两编剧在第八季第三集展示出来的军事才能了。<br>闲谈一下生活中的事情，像两个编剧没有原著加持这种釜底抽薪的事情也不少见，比如高通及其他美国的芯片供应商不再向华为供货，但是任正非们在几年前就意识到要做自己的核心处理器芯片，这种强烈的危机意识才不至于成为殃及池鱼中的那条鱼。就是别人的产品我可以借鉴，但是一定得弄到其原理，才不会受制于人，才可以做到青出于蓝而胜于蓝。自己不强大，可依赖的对象失去了的时候那就是苦日子到来的时候了。  </p>\n","raw":null,"categories":[{"name":"生活感悟","path":"api/categories/生活感悟.json"}],"tags":[{"name":"权利的游戏","path":"api/tags/权利的游戏.json"}]},{"title":"重构技巧之添加参数","slug":"Add_Parameter_in_Refactoring","date":"2019-03-10T01:32:02.000Z","updated":"2023-09-08T06:12:36.540Z","comments":true,"path":"api/articles/Add_Parameter_in_Refactoring.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近在经手一个Winform项目,里面有个需求：TreeView控件选择不同的TreeNode时，需要展示不同的右键菜单。记录一下重构过程。</p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>现将公司内部需求初始需求转换如下：<br>如果TreeView选中的TreeNode是国家，则右键菜单展示”添加省”,一个选项。<br>如果TreeView选中的TreeNode是省份，则右键菜单展示”添加市”，”删除”两个选项。<br>如果TreeView选中的TreeNode是城市，则右键菜单展示”添加区”，”删除”两个选项。<br>如果TreeView选中的TreeNode是区，则右键菜单展示，”删除”一个选项。<br>这部分的伪代码如下：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var<span class=\"built_in\"> area </span>= TreeView.SelectedNode.Tag as<span class=\"built_in\"> Area; </span>//</span><br><span class=\"line\"><span class=\"keyword\">if</span>(area!=<span class=\"literal\">null</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    var <span class=\"attribute\">areaType</span>=area.type;</span><br><span class=\"line\">    ContextMenuStrip menuStrip = new ContextMenuStrip();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"attribute\">areaType</span>==AreaType.国家)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;添加省&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"attribute\">areaType</span>==AreaType.省份)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;添加市&quot;</span>));</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;删除&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"attribute\">areaType</span>==AreaType.城市)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;添加区&quot;</span>));</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;删除&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"attribute\">areaType</span>==AreaType.区)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;删除&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    menuStrip.Show(e.Location);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>后来业务发展了,除了AreaType.国家这个选项，右键菜单都需要添加一个”打开地图”的右键菜单，且位于右键菜单的最上方。<br>重构之后的示例代码变成了如下：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var<span class=\"built_in\"> area </span>= TreeView.SelectedNode.Tag as<span class=\"built_in\"> Area; </span>//</span><br><span class=\"line\"><span class=\"keyword\">if</span>(area!=<span class=\"literal\">null</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    var <span class=\"attribute\">areaType</span>=area.type;</span><br><span class=\"line\">    ContextMenuStrip menuStrip = new ContextMenuStrip();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"attribute\">areaType</span>==AreaType.国家)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;添加省&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"attribute\">areaType</span>==AreaType.省份)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;打开地图&quot;</span>));</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;添加市&quot;</span>));</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;删除&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"attribute\">areaType</span>==AreaType.城市)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;打开地图&quot;</span>));</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;添加区&quot;</span>));</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;删除&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"attribute\">areaType</span>==AreaType.区)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;打开地图&quot;</span>));</span><br><span class=\"line\">        menuStrip.Items.<span class=\"built_in\">Add</span>(new ToolStripMenuItem(<span class=\"string\">&quot;删除&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    menuStrip.Show(e.Location);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这次需求变动，已经让我闻到了代码中的坏味道。增删改一个右键菜单需要修改好几处地方，删除右键菜单也是同理。<br>故需要对代码进行重构。</p>\n<h2 id=\"重构\"><a href=\"#重构\" class=\"headerlink\" title=\"重构\"></a>重构</h2><p>提取函数，伪代码如下</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> ContextMenuStrip menuStrip = <span class=\"keyword\">new</span> <span class=\"constructor\">ContextMenuStrip()</span>; <span class=\"comment\">//菜单转为私有属性</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> void <span class=\"constructor\">AddToolStripMenuItem(<span class=\"params\">string</span> <span class=\"params\">controlName</span>, <span class=\"params\">bool</span> <span class=\"params\">isAdd</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isAdd)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        this.menuStrip.Items.<span class=\"constructor\">Add(<span class=\"params\">new</span> ToolStripMenuItem(<span class=\"params\">controlName</span>)</span>;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>故调用处的实现代码变成了如下</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var area = TreeView.SelectedNode.Tag <span class=\"keyword\">as</span> Area; <span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(area!=null)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    var areaType=area.<span class=\"keyword\">type</span>;</span><br><span class=\"line\">    this.menuStrip.Items.<span class=\"constructor\">Clear()</span>;</span><br><span class=\"line\">    <span class=\"constructor\">AddToolStripMenuItem(<span class=\"string\">&quot;添加省&quot;</span>,<span class=\"params\">areaType</span><span class=\"operator\">==</span>AreaType.国家)</span>;</span><br><span class=\"line\">    <span class=\"constructor\">AddToolStripMenuItem(<span class=\"string\">&quot;打开地图&quot;</span>,!<span class=\"params\">areaType</span><span class=\"operator\">==</span>AreaType.国家)</span>;</span><br><span class=\"line\">    <span class=\"constructor\">AddToolStripMenuItem(<span class=\"string\">&quot;添加市&quot;</span>,<span class=\"params\">areaType</span><span class=\"operator\">==</span>AreaType.省份)</span>;</span><br><span class=\"line\">    <span class=\"constructor\">AddToolStripMenuItem(<span class=\"string\">&quot;添加区&quot;</span>,<span class=\"params\">areaType</span><span class=\"operator\">==</span>AreaType.城市)</span>;</span><br><span class=\"line\">    <span class=\"constructor\">AddToolStripMenuItem(<span class=\"string\">&quot;删除&quot;</span>,!<span class=\"params\">areaType</span><span class=\"operator\">==</span>AreaType.国家)</span>;</span><br><span class=\"line\">    menuStrip.<span class=\"constructor\">Show(<span class=\"params\">e</span>.Location)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>若以后需求变更,<strong>打开地图</strong>需要改成<strong>打开百度地图</strong>，然后新增<strong>打开高德地图</strong>也只需要修改一行代码，并新增一行代码即可。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>该重构过程运用的是提取函数和函数添加参数。<br><strong>AddToolStripMenuItem函数</strong>只关心菜单项是否添加，而不关心菜单项添加的逻辑是什么。<br>重构之后，右键菜单的可能的菜单项也一目了然，每一个菜单项对应的添加条件也一目了然。若<strong>isAdd</strong>参数对应的表达式过长，则可以将该表达式封装成函数进行传递。<br>通过该重构提高了项目的可维护性，也算是一种成就。</p>\n","raw":null,"categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"代码世界/重构","path":"api/categories/代码世界/重构.json"}],"tags":[{"name":"重构","path":"api/tags/重构.json"},{"name":"TreeView","path":"api/tags/TreeView.json"}]},{"title":"委托在重构中的运用","slug":"Delegate_in_Refactoring","date":"2019-03-09T10:49:35.000Z","updated":"2023-09-08T06:12:36.540Z","comments":true,"path":"api/articles/Delegate_in_Refactoring.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近在工作中的一次重构过程中运用到了委托，记录一下。</p>\n<h2 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h2><p>有一段示例代码如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProjectAClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">CallMethod</span><span class=\"params\">(<span class=\"type\">bool</span> isTrue)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isTrue)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ProjectB_StaticClass.<span class=\"built_in\">DoSomething</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>后来因为业务的不断发展，需要把ProjectB从整个解决方案中移除掉。<br>ProjectB_StaticClassB.DoSomething();需要替换成 ProjectC_StaticClassC.DoSomething();<br>但是项目ProjectC需要引用ProjectA，故不能直接进行引用，否则会造成项目之间的循环依赖。  </p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>ProjectAClass添加一个委托事件,CallMethod函数添加一个<strong>Dosometing dosometing</strong>的参数。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ProjectAClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">delegate</span> <span class=\"keyword\">void</span> <span class=\"title\">Dosometing</span>()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CallMethod</span>(<span class=\"params\"><span class=\"built_in\">bool</span> isTrue, Dosometing dosometing</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isTrue)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dosometing?.Invoke();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>具体的调用代码处就变成了</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ProjectAClass.CallMethod(<span class=\"literal\">true</span>,<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;ProjectC_StaticClassC.DoSomething();&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><p>若ProjectAClass.CallMethod方法多地方出现，然而没有办法一下修改到位。可以通过参数默认值的方式来实现修改。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CallMethod</span>(<span class=\"params\"><span class=\"built_in\">bool</span> isTrue, Dosometing dosometing=<span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isTrue)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dosometing == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ProjectB_StaticClass.DoSomething();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dosometing.Invoke(); <span class=\"comment\">// or dosometing()</span></span><br><span class=\"line\">        &#125;         </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该方法可以避免原来的调用方法进行大面积的修改。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>重构之后的代码ProjectAClass只需要判断条件是否满足，满足则dosometing，而不需要知道dosometing这个委托方法中具体细节。</p>\n","raw":null,"categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"代码世界/重构","path":"api/categories/代码世界/重构.json"}],"tags":[{"name":"重构","path":"api/tags/重构.json"}]},{"title":"游戏的乐趣","slug":"games_fun","date":"2019-02-24T11:23:50.000Z","updated":"2023-09-08T06:12:36.692Z","comments":true,"path":"api/articles/games_fun.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>昨天跟朋友聊天，问他我的率土账号值多少钱了，他说应该值好几千块钱了吧。因为运气好和氪金，我招募了属性值了特别好的武将，然后因为个人时间关系一直都没有在玩，就委托给他在玩，他对这个账号爱不释手，他说他现在特别渴望来一个武将曹操，且这个游戏最有意思的就是武将搭配了。晚上闲来无事，顺便登陆了同样交给另外一个人搭理的一款游戏——英雄传奇，发现来了一个很久以前梦寐以求的英雄——李师师。<br>然而，这两个游戏却没有给我带来一种很强烈的愉悦感。</p>\n<h1 id=\"游戏为什么不好玩了？\"><a href=\"#游戏为什么不好玩了？\" class=\"headerlink\" title=\"游戏为什么不好玩了？\"></a>游戏为什么不好玩了？</h1><h2 id=\"痛苦的记忆\"><a href=\"#痛苦的记忆\" class=\"headerlink\" title=\"痛苦的记忆\"></a>痛苦的记忆</h2><p>我表弟原本是一个王者荣耀的游戏迷，去年的时候拿我手机非得下载王者荣耀和我的网友对打，局局被虐，然后急上脸了还有再来一局，再来一局的。今天过年回家，问他怎么不玩王者荣耀了，然后他说没味，迷上了球球大作战，蛇蛇大作战之类的游戏。论游戏，王者荣耀的皮肤比蛇蛇大作战的皮肤要好看，操作也更加复杂，五连杀也更比蛇蛇大作战的五杀甚至百杀有意思得多，为啥不喜欢了？究其原因就是现在他想起这个游戏就会想起偷偷花了几千块钱买皮肤，然后被父母教育的事情。这个王者荣耀于他来讲是和一段不美好的记忆挂钩的，不玩就减少了回忆的可能性。</p>\n<h2 id=\"缺乏对游戏的喜好\"><a href=\"#缺乏对游戏的喜好\" class=\"headerlink\" title=\"缺乏对游戏的喜好\"></a>缺乏对游戏的喜好</h2><p>我有一个同事特别喜欢玩欢乐斗地主，若一起吃饭，就能看见她拿着手机在玩欢乐斗地主。她玩这个游戏却兴趣盎然，在抢地主之后会心里默默念来个8，来个8，最终发现4个8都在上家手里，而且她只要有当地主的机会，则一定叫地主，抢地主。若是以前的话，我也喜欢玩斗地主，但是自从脑子抽风，算出斗地主有138712181744994种排列组合之后，看待斗地主这种游戏的态度就变了。若跟陌生人组成一个牌局，也就是138712181744994种斗地主组合方式中的一种而已，而且结局无外乎两种，要么赢，要么输，于我而言，因为觉得跟陌生人在网上斗地主没有多少精神上的满足，故基本上不再跟陌生人玩这种牌类游戏了。</p>\n<h2 id=\"游戏的固定模式\"><a href=\"#游戏的固定模式\" class=\"headerlink\" title=\"游戏的固定模式\"></a>游戏的固定模式</h2><p>为什么王者荣耀会让这么多人都废寝忘食的玩个不停？个人觉得主要是加强了朋友之间的联系，然后每一局的可能性都比较多，最重要的一点，有些角色勤加练习就可以达到熟能生巧，起到了一个放松心情，减压的效果。个人并没有怎么玩过王者荣耀，技术比我表弟还要菜。我倒是玩过率土之滨和英雄传奇两种卡牌游戏，只不过现在这两个游戏都转交给我朋友去玩了。因为我运气比较好，两款游戏中比较主流的英雄武将我都拥有，故没有多少期待属性值特别特别厉害的武将，然后如果非得氪金去和别的网友比个高低，回报是远小于付出的。率土之滨相对好一点，基本上公平，充钱再多也不一定获得心仪的武将卡。而腾讯的游戏则不然，只要有钱就是大爷。VIP15基本上就是需要投资60万。充了钱的人通过使用李师师和虞姬组队在一起刷牌，然后虞姬还配上一个回春技能。基本上就是秒杀全场的节奏。玩家是希望通过游戏来减压，和放松自己的，而不是被各种氪金玩家虐待的。率土在于你充钱了，你也不是大爷。而英雄传奇就是你充的钱足够足够多，那就是大爷。光比谁砸的钱多的这种游戏对于普通玩家来讲个人放松的心理是得不到满足的。如果你们对我举例的这两款游戏不熟，那俄罗斯方块和贪吃蛇就是很好的固定模式的例子。</p>\n<h1 id=\"什么样的游戏才好玩？\"><a href=\"#什么样的游戏才好玩？\" class=\"headerlink\" title=\"什么样的游戏才好玩？\"></a>什么样的游戏才好玩？</h1><p>千个读者有千种想法，我代表不了你们。我只表达一下我心目中的好游戏。  </p>\n<h2 id=\"好游戏是有回报的\"><a href=\"#好游戏是有回报的\" class=\"headerlink\" title=\"好游戏是有回报的\"></a>好游戏是有回报的</h2><p>比如说我现在正在减肥，减肥是很痛苦的过程，因为它增加了个人欲望，我以前只想吃，不考虑瘦不瘦的事情。而现在，我既要想着吃，还要想着怎么吃和怎么瘦的问题。为什么要辜负长沙臭豆腐，炸鸡翅，牛肉丸，开心果，奶茶等等各种人世间的美好？如果把减肥当做一场游戏，就显得简单了许多。减肥成功的回报之一就是——再也不用担心踩在小树枝上会断，再大一点的奖励就是可以通过小树枝爬上从来没有征服过的猪头石顶部，更大的奖励就是整个人都脱胎换骨，可以去体验不一样的人生。</p>\n<h2 id=\"好游戏满足社交属性\"><a href=\"#好游戏满足社交属性\" class=\"headerlink\" title=\"好游戏满足社交属性\"></a>好游戏满足社交属性</h2><p>球类游戏，狼人杀之类的桌游基本上都需要好几个人参加，在这些游戏中，虽然是你输我赢的结局，但是在你来我往的不同战术的交锋过程中促进了对团队之间不同人的理解。这也就是大学入校以来，宿舍第一件事情就是玩升级，从2打到A，玩到凌晨两点丝毫不困的原因。</p>\n<h2 id=\"好游戏满足人的成就感\"><a href=\"#好游戏满足人的成就感\" class=\"headerlink\" title=\"好游戏满足人的成就感\"></a>好游戏满足人的成就感</h2><p>蚂蚁庄园的登山赛游戏在某些人眼里看起来简单弱智，但是分数越高，然后可以兑换的奖品越多，最重要的一点，其具备的公益属性会满足一个人的积少成多和做出了奉献的成就感。</p>\n<h2 id=\"好游戏满足人的好奇心\"><a href=\"#好游戏满足人的好奇心\" class=\"headerlink\" title=\"好游戏满足人的好奇心\"></a>好游戏满足人的好奇心</h2><p>纪念碑谷或地狱边境或者机械迷城等游戏都是很好的满足人类的求知欲或者好奇心的例子。限于篇幅不对其做具体介绍。   </p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>若去问小孩子，他们一般都会觉得游戏会被读书有趣。学习并不见得一定是一件很枯燥无非的东西，如果这个读书满足了他的成就感，新鲜感，好奇心，让他交到了更多的朋友，这个学习便成为了一件有趣的事情。其余有趣的东西亦是如此。  </p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.60points.com/138712181744994/\">斗地主所有牌型组合个数统计</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生活感悟","path":"api/categories/生活感悟.json"}],"tags":[{"name":"乐趣","path":"api/tags/乐趣.json"},{"name":"新鲜感","path":"api/tags/新鲜感.json"}]},{"title":"用Dictionary替换switch case的注意事项","slug":"Notes_On_Switch_Convert_to_Dictionary","date":"2019-01-21T15:40:18.000Z","updated":"2023-09-08T06:12:36.546Z","comments":true,"path":"api/articles/Notes_On_Switch_Convert_to_Dictionary.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//%E5%B7%AE%E5%BC%82%E5%AF%B9%E6%AF%94.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近试图重构一段现做现卖的祖传代码,结果改完之后,性能急速下降,下面给出示意代码的截图,以便提醒自己工作需要更加认真和细心。  </p>\n<h1 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h1><h2 id=\"错误的重构\"><a href=\"#错误的重构\" class=\"headerlink\" title=\"错误的重构\"></a>错误的重构</h2><p><img src=\"/.com//%E5%B7%AE%E5%BC%82%E5%AF%B9%E6%AF%94.png\" alt=\"差异对比\"><br>Dictionary的执行时间竟然是Switch case的四倍以上？原因是啥？我们来看一下各个动物的构造函数<br><img src=\"/.com//%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0.png\" alt=\"构造函数\"><br>即生成Dictionary的每一个键值对的值的时候,都实例化了一个Animal的子类,每个子类的实例化都等待了十秒钟,总实例化就耗费了40秒钟。</p>\n<h2 id=\"正确的重构\"><a href=\"#正确的重构\" class=\"headerlink\" title=\"正确的重构\"></a>正确的重构</h2><p><img src=\"/.com//%E6%AD%A3%E7%A1%AE%E9%87%8D%E6%9E%84.png\" alt=\"正确重构\"><br>先获取对象的type,然后通过Activator.CreateInstance(type)创建对象。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>switch case转换成dictionary算得上是一种重构,起到了<strong>减少代码量，提高可维护性的效果。</strong><br>这次我的失误也算是明白了一个深刻的道理,所有的重构需要建立在完整的测试机制的前提下，否则可能会造成严重的损失。<br>最后一句箴言<font color=\"#FF0000\">如无必要，勿动祖传代码</font></p>\n","raw":null,"categories":[{"name":"代码世界","path":"api/categories/代码世界.json"}],"tags":[{"name":"重构","path":"api/tags/重构.json"}]},{"title":"重绘Panel边框线","slug":"Paint_Panel_Border","date":"2019-01-21T14:00:53.000Z","updated":"2023-09-08T06:12:36.673Z","comments":true,"path":"api/articles/Paint_Panel_Border.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//%E9%94%99%E8%AF%AF%E9%87%8D%E7%BB%98%E7%A4%BA%E4%BE%8B.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近有一个需求,是重绘panel边框的颜色成指定的颜色,参考了网上的一些示例代码和结合实际情况,形成了自己的解决方案,以下是实现过程。</p>\n<h1 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h1><h2 id=\"边框绘制类\"><a href=\"#边框绘制类\" class=\"headerlink\" title=\"边框绘制类\"></a>边框绘制类</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> panel边框绘制类</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">PanelBorderPainter</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Color _colorPanelBorder = Color.FromArgb(<span class=\"number\">215</span>, <span class=\"number\">215</span>, <span class=\"number\">215</span>); <span class=\"comment\">//d7d7d7</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> BorderSize = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 重绘panel的边框颜色</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;para&gt;</span>Padding 需要设置为1,例如:panel.Padding = new System.Windows.Forms.Padding(1);<span class=\"doctag\">&lt;/para&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;para&gt;</span>默认颜色值是d7d7d7<span class=\"doctag\">&lt;/para&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;para&gt;</span>可以通过panel.Tag=Color.FromArgb(255, 0, 0)设置颜色为红色<span class=\"doctag\">&lt;/para&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span><span class=\"doctag\">&lt;para&gt;</span>注意:该Paint事件应置于InitializeComponent()之后实现,重新生成Designer.cs会导致代码丢失。<span class=\"doctag\">&lt;/para&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> </span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;sender&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;e&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Paint</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, PaintEventArgs e</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sender <span class=\"keyword\">is</span> Control control)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"meta\">#<span class=\"keyword\">region</span> panel颜色信息通过Tag传递</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (control.Tag != <span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (control.Tag <span class=\"keyword\">is</span> Color color)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    _colorPanelBorder = color;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">#<span class=\"keyword\">endregion</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            ButtonBorderStyle style = ButtonBorderStyle.Solid;</span><br><span class=\"line\">            ControlPaint.DrawBorder(e.Graphics, control.ClientRectangle,</span><br><span class=\"line\">                _colorPanelBorder, BorderSize, style,</span><br><span class=\"line\">                _colorPanelBorder, BorderSize, style,</span><br><span class=\"line\">                _colorPanelBorder, BorderSize, style,</span><br><span class=\"line\">                _colorPanelBorder, BorderSize, style);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"声明两个Panel\"><a href=\"#声明两个Panel\" class=\"headerlink\" title=\"声明两个Panel\"></a>声明两个Panel</h2><p><font color=\"#FF0000\">容器panelOuter包含panelInner</font></p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private System.Windows.Forms.Panel panelOuter<span class=\"comment\">;</span></span><br><span class=\"line\">private System.Windows.Forms.Panel panelInner<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关键代码\"><a href=\"#关键代码\" class=\"headerlink\" title=\"关键代码\"></a>关键代码</h2><p>panelOuter</p>\n<figure class=\"highlight wren\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">panelOuter</span>.<span class=\"property\">Padding</span> <span class=\"operator\">=</span> <span class=\"variable\">new</span> <span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">Padding</span>(<span class=\"number\">1</span>); <span class=\"comment\">//Padding属性设置为1。</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">panelOuter</span>.<span class=\"property\">Anchor</span> <span class=\"operator\">=</span> ((<span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>)((((<span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>.<span class=\"property\">Top</span> <span class=\"operator\">|</span> <span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>.<span class=\"property\">Bottom</span>) </span><br><span class=\"line\">            <span class=\"operator\">|</span> <span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>.<span class=\"property\">Left</span>) </span><br><span class=\"line\">            <span class=\"operator\">|</span> <span class=\"title class_\">System</span>.<span class=\"property\">Windows</span>.<span class=\"property\">Forms</span>.<span class=\"property\">AnchorStyles</span>.<span class=\"property\">Right</span>)));</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">panelOuter</span>.<span class=\"property\">Controls</span>.<span class=\"property\">Add</span>(<span class=\"variable\">panelInner</span>); <span class=\"comment\">//必须</span></span><br></pre></td></tr></table></figure>\n\n<p>panelInner</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">this.panelInner.Dock</span> = System.Windows.Forms.DockStyle.Fill<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>Form1构造函数</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Form1</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    InitializeComponent();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.panelOuter.Paint += <span class=\"keyword\">new</span> PaintEventHandler(PanelBorderPainter.Paint);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"答疑\"><a href=\"#答疑\" class=\"headerlink\" title=\"答疑\"></a>答疑</h2><p><font color=\"#FF0000\">为什么需要两个Panel?</font><br>答:因为如果注释掉以下代码,水平拖拽时会出现如下的界面效果。</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.panelOuter.Controls.Add(panelInner);</span><br></pre></td></tr></table></figure>\n<p><img src=\"/.com//%E9%94%99%E8%AF%AF%E9%87%8D%E7%BB%98%E7%A4%BA%E4%BE%8B.png\" alt=\"错误重绘示例\"><br>取消该行代码注释则页面拖拽效果正常。</p>\n<p><font color=\"#FF0000\">是否必须需要两个Panel?</font><br>答:不是,内部是<strong>DataGridView</strong>等控件,其Dock&#x3D;DockStyle.Fill,可以起到同样的效果。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://blog.csdn.net/softimite_zifeng/article/details/54237134\">Winform的Panel绘制边框</a></li>\n</ul>\n","raw":null,"categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"代码世界/winform","path":"api/categories/代码世界/winform.json"}],"tags":[{"name":"winform","path":"api/tags/winform.json"},{"name":"panel重绘","path":"api/tags/panel重绘.json"}]},{"title":"用多项式解标准数独或锯齿数独","slug":"Solve_Soduku_With_Polynomial","date":"2019-01-13T14:06:50.000Z","updated":"2023-09-08T06:12:36.677Z","comments":true,"path":"api/articles/Solve_Soduku_With_Polynomial.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//%E5%9B%9B%E5%AE%AB%E7%A4%BA%E4%BE%8B.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近业余时间迷上了数独求解,所以试图用计算机的方式来解答数独。<br>接下来，我用四宫的数独为例子，示例怎么利用多项式求解数独。  </p>\n<h1 id=\"四宫数独\"><a href=\"#四宫数独\" class=\"headerlink\" title=\"四宫数独\"></a>四宫数独</h1><p>我们以四宫的每个单元格标上序号,如下图所示<br><img src=\"/.com//%E5%9B%9B%E5%AE%AB%E7%A4%BA%E4%BE%8B.png\" alt=\"四宫数独\"><br>因为每行每列每宫都包含1,2,3,4且不重复。<br>所以第一行满足 x00+x01+x02+x03&#x3D;10,x00*x01*x02*x03&#x3D;24。<br>其余列的关系依次类推,其余宫的关系也是如此。<br>若数独题目如下图所示<br><img src=\"/.com//%E5%9B%9B%E5%AE%AB%E6%A0%B7%E4%BE%8B.png\" alt=\"四宫例子\"><br>根据坐标和格子的关系可知:<br>x00&#x3D;1,x01&#x3D;4,x14&#x3D;1,x15&#x3D;2  </p>\n<p>通过以下Python代码  </p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sympy import *</span><br><span class=\"line\"><span class=\"attribute\">x00</span>=Symbol(&#x27;x00&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x01</span>=Symbol(&#x27;x01&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x02</span>=Symbol(&#x27;x02&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x03</span>=Symbol(&#x27;x03&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x04</span>=Symbol(&#x27;x04&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x05</span>=Symbol(&#x27;x05&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x06</span>=Symbol(&#x27;x06&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x07</span>=Symbol(&#x27;x07&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x08</span>=Symbol(&#x27;x08&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x09</span>=Symbol(&#x27;x09&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x10</span>=Symbol(&#x27;x10&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x11</span>=Symbol(&#x27;x11&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x12</span>=Symbol(&#x27;x12&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x13</span>=Symbol(&#x27;x13&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x14</span>=Symbol(&#x27;x14&#x27;)</span><br><span class=\"line\"><span class=\"attribute\">x15</span>=Symbol(&#x27;x15&#x27;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(solve([</span><br><span class=\"line\">    # 行之和为10</span><br><span class=\"line\">   x00+x01+x02+x03-10,</span><br><span class=\"line\">   x04+x05+x06+x07-10,</span><br><span class=\"line\">   x08+x09+x10+x11-10,</span><br><span class=\"line\">   x12+x13+x14+x15-10,</span><br><span class=\"line\"></span><br><span class=\"line\">   # 行之积为24</span><br><span class=\"line\">   x00*x01*x02*x03-24,</span><br><span class=\"line\">   x04*x05*x06*x07-24,</span><br><span class=\"line\">   x08*x09*x10*x11-24,</span><br><span class=\"line\">   x12*x13*x14*x15-24,</span><br><span class=\"line\"></span><br><span class=\"line\">   #列之和为10</span><br><span class=\"line\">   x00+x04+x08+x12-10, </span><br><span class=\"line\">   x01+x05+x09+x13-10,</span><br><span class=\"line\">   x02+x06+x10+x14-10,</span><br><span class=\"line\">   x03+x07+x11+x15-10,</span><br><span class=\"line\"></span><br><span class=\"line\">   #列之积为24</span><br><span class=\"line\">   x00*x04*x08*x12-24,</span><br><span class=\"line\">   x01*x05*x09*x13-24,</span><br><span class=\"line\">   x02*x06*x10*x14-24,</span><br><span class=\"line\">   x03*x07*x11*x15-24,</span><br><span class=\"line\"></span><br><span class=\"line\">   #宫之和为10</span><br><span class=\"line\">   x00+x01+x04+x05-10,</span><br><span class=\"line\">   x02+x03+x06+x07-10,</span><br><span class=\"line\">   x08+x09+x12+x13-10,</span><br><span class=\"line\">   x10+x11+x14+x15-10,</span><br><span class=\"line\"></span><br><span class=\"line\">   #宫之积为24</span><br><span class=\"line\">   x00*x01*x04*x05-24,</span><br><span class=\"line\">   x02*x03*x06*x07-24,</span><br><span class=\"line\">   x08*x09*x12*x13-24,</span><br><span class=\"line\">   x10*x11*x14*x15-24,</span><br><span class=\"line\"></span><br><span class=\"line\">   # <span class=\"attribute\">x00</span>=1,x01=4,x14=1,x15=2</span><br><span class=\"line\">   x00-1,</span><br><span class=\"line\">   x01-4,</span><br><span class=\"line\">   x14-1,</span><br><span class=\"line\">   x15-2</span><br><span class=\"line\">    ],[x00,x01,x02,x03,x04,x05,x06,x07,x08,x09,x10,x11,x12,x13,x14,x15]))</span><br></pre></td></tr></table></figure>\n<p>我们可以快速得知结果是</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,</span><br><span class=\"line\"><span class=\"attribute\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attribute\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,</span><br><span class=\"line\"><span class=\"attribute\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n<p>其余标准数独(只有唯一解)的四宫数独也可以通过该种方式进行求解。</p>\n<h1 id=\"九宫数独\"><a href=\"#九宫数独\" class=\"headerlink\" title=\"九宫数独\"></a>九宫数独</h1><p>既然4宫可以用多项式求解？那么九宫是不是也可以这样呢？<br>答案是可以，但是又有点不同。<br>∵4+4+4+9&#x3D;3+4+6+8&#x3D;21<br>∵4*4*4*9&#x3D;3*4*6*8&#x3D;576<br>∴ <strong>x1+x2+x3+x4+x5+x6+x7+x8+x9&#x3D;45</strong> 和<strong>x1*x2*x3*x4*x5*x6*x7*x8*x9&#x3D;362880</strong><br>存在{1,2,3,4,5,6,7,8,9}和{1,2,4,4,4,5,7,9,9}两组解。<br>若我们把8当做-1看待,9当做-2看待<br>则每行每列每宫之<strong>和</strong>变成了<strong>x1+x2+x3+x4+x5+x6+x7+x8+x9&#x3D;1+2+3+4+5+6+7+(-1)+(-2)&#x3D;25</strong><br>则每行每列每宫之<strong>积</strong>变成了<strong>x1*x2*x3*x4*x5*x6*x7*x8*x9&#x3D;1*2*3*4*5*6*7*(-1)*(-2)&#x3D;10080</strong><br>参考<strong>四宫数独中Python代码的实现</strong>,可以写出(9行+9列+9宫)*(和表达式1个+积表达式1个)共54个表达式,<br>若已知提示数为N个,则加上这个N个表达式,则可以借助Python的强大的计算能力实现求解。<br>再将-1还原成8,-2还原成9,则完成了标准数独的求解。  </p>\n<h1 id=\"锯齿数独\"><a href=\"#锯齿数独\" class=\"headerlink\" title=\"锯齿数独\"></a>锯齿数独</h1><p>众所周知,DLX算法求解数独比回溯法要来得快很多，但是锯齿数独并不适合于用DLX算法(稀疏矩阵精准覆盖算法求解)<br>因为锯齿数独依旧满足每行每列1到9不重复,只是9个宫中9个来源的坐标有变化了。<br>若坐标序号如下图所示<br><img src=\"/.com//%E6%95%B0%E7%8B%AC%E4%BD%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B.png\" alt=\"数独下标示意\">  </p>\n<p>以下图第一宫为例：<br><img src=\"/.com//%E9%94%AF%E9%BD%BF%E6%95%B0%E7%8B%AC%E7%A4%BA%E4%BE%8B.png\" alt=\"锯齿数独示例\">  </p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">x00</span>+x01+x02+x03+x09+x10+x18+x27+x28-<span class=\"number\">25</span>=<span class=\"number\">0</span> //每宫之和为<span class=\"number\">25</span>  </span><br><span class=\"line\"><span class=\"attribute\">x00</span>*x01*x02*x03*x09*x10*x18*x27*x28-<span class=\"number\">10080</span>=<span class=\"number\">0</span> //每宫之积为<span class=\"number\">10080</span>  </span><br><span class=\"line\"><span class=\"attribute\">x27</span>-<span class=\"number\">4</span>=<span class=\"number\">0</span>    //x27=<span class=\"number\">4</span>  </span><br><span class=\"line\"><span class=\"attribute\">x03</span>-(-<span class=\"number\">2</span>)=<span class=\"number\">0</span> //先用-<span class=\"number\">2</span>代替<span class=\"number\">9</span>  </span><br></pre></td></tr></table></figure>\n<p>其他宫的逻辑表达式依次类推,这样就能快速求解锯齿数独了。</p>\n<h1 id=\"推翻九宫结论\"><a href=\"#推翻九宫结论\" class=\"headerlink\" title=\"推翻九宫结论\"></a>推翻九宫结论</h1><p>如下图有39个提示数的标准数独<br><img src=\"/.com//39%E4%B8%AA%E6%8F%90%E7%A4%BA%E6%95%B0%E7%9A%84%E6%95%B0%E7%8B%AC.png\" alt=\"九宫提示数\"></p>\n<p>对应的python代码如下,仅仅实现了使CPU达到了100%的效果,迟迟出不来结果<br>所以该种方式求解9宫格的数独要么需要有强悍的电脑，要么还是直接使用DanceLink算法直接求解。</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from sympy import *</span><br><span class=\"line\">x00= Symbol(&#x27;x00&#x27;)</span><br><span class=\"line\">x01= Symbol(&#x27;x01&#x27;)</span><br><span class=\"line\">x02= Symbol(&#x27;x02&#x27;)</span><br><span class=\"line\">x03= Symbol(&#x27;x03&#x27;)</span><br><span class=\"line\">x04= Symbol(&#x27;x04&#x27;)</span><br><span class=\"line\">x05= Symbol(&#x27;x05&#x27;)</span><br><span class=\"line\">x06= Symbol(&#x27;x06&#x27;)</span><br><span class=\"line\">x07= Symbol(&#x27;x07&#x27;)</span><br><span class=\"line\">x08= Symbol(&#x27;x08&#x27;)</span><br><span class=\"line\">x09= Symbol(&#x27;x09&#x27;)</span><br><span class=\"line\">x10= Symbol(&#x27;x10&#x27;)</span><br><span class=\"line\">x11= Symbol(&#x27;x11&#x27;)</span><br><span class=\"line\">x12= Symbol(&#x27;x12&#x27;)</span><br><span class=\"line\">x13= Symbol(&#x27;x13&#x27;)</span><br><span class=\"line\">x14= Symbol(&#x27;x14&#x27;)</span><br><span class=\"line\">x15= Symbol(&#x27;x15&#x27;)</span><br><span class=\"line\">x16= Symbol(&#x27;x16&#x27;)</span><br><span class=\"line\">x17= Symbol(&#x27;x17&#x27;)</span><br><span class=\"line\">x18= Symbol(&#x27;x18&#x27;)</span><br><span class=\"line\">x19= Symbol(&#x27;x19&#x27;)</span><br><span class=\"line\">x20= Symbol(&#x27;x20&#x27;)</span><br><span class=\"line\">x21= Symbol(&#x27;x21&#x27;)</span><br><span class=\"line\">x22= Symbol(&#x27;x22&#x27;)</span><br><span class=\"line\">x23= Symbol(&#x27;x23&#x27;)</span><br><span class=\"line\">x24= Symbol(&#x27;x24&#x27;)</span><br><span class=\"line\">x25= Symbol(&#x27;x25&#x27;)</span><br><span class=\"line\">x26= Symbol(&#x27;x26&#x27;)</span><br><span class=\"line\">x27= Symbol(&#x27;x27&#x27;)</span><br><span class=\"line\">x28= Symbol(&#x27;x28&#x27;)</span><br><span class=\"line\">x29= Symbol(&#x27;x29&#x27;)</span><br><span class=\"line\">x30= Symbol(&#x27;x30&#x27;)</span><br><span class=\"line\">x31= Symbol(&#x27;x31&#x27;)</span><br><span class=\"line\">x32= Symbol(&#x27;x32&#x27;)</span><br><span class=\"line\">x33= Symbol(&#x27;x33&#x27;)</span><br><span class=\"line\">x34= Symbol(&#x27;x34&#x27;)</span><br><span class=\"line\">x35= Symbol(&#x27;x35&#x27;)</span><br><span class=\"line\">x36= Symbol(&#x27;x36&#x27;)</span><br><span class=\"line\">x37= Symbol(&#x27;x37&#x27;)</span><br><span class=\"line\">x38= Symbol(&#x27;x38&#x27;)</span><br><span class=\"line\">x39= Symbol(&#x27;x39&#x27;)</span><br><span class=\"line\">x40= Symbol(&#x27;x40&#x27;)</span><br><span class=\"line\">x41= Symbol(&#x27;x41&#x27;)</span><br><span class=\"line\">x42= Symbol(&#x27;x42&#x27;)</span><br><span class=\"line\">x43= Symbol(&#x27;x43&#x27;)</span><br><span class=\"line\">x44= Symbol(&#x27;x44&#x27;)</span><br><span class=\"line\">x45= Symbol(&#x27;x45&#x27;)</span><br><span class=\"line\">x46= Symbol(&#x27;x46&#x27;)</span><br><span class=\"line\">x47= Symbol(&#x27;x47&#x27;)</span><br><span class=\"line\">x48= Symbol(&#x27;x48&#x27;)</span><br><span class=\"line\">x49= Symbol(&#x27;x49&#x27;)</span><br><span class=\"line\">x50= Symbol(&#x27;x50&#x27;)</span><br><span class=\"line\">x51= Symbol(&#x27;x51&#x27;)</span><br><span class=\"line\">x52= Symbol(&#x27;x52&#x27;)</span><br><span class=\"line\">x53= Symbol(&#x27;x53&#x27;)</span><br><span class=\"line\">x54= Symbol(&#x27;x54&#x27;)</span><br><span class=\"line\">x55= Symbol(&#x27;x55&#x27;)</span><br><span class=\"line\">x56= Symbol(&#x27;x56&#x27;)</span><br><span class=\"line\">x57= Symbol(&#x27;x57&#x27;)</span><br><span class=\"line\">x58= Symbol(&#x27;x58&#x27;)</span><br><span class=\"line\">x59= Symbol(&#x27;x59&#x27;)</span><br><span class=\"line\">x60= Symbol(&#x27;x60&#x27;)</span><br><span class=\"line\">x61= Symbol(&#x27;x61&#x27;)</span><br><span class=\"line\">x62= Symbol(&#x27;x62&#x27;)</span><br><span class=\"line\">x63= Symbol(&#x27;x63&#x27;)</span><br><span class=\"line\">x64= Symbol(&#x27;x64&#x27;)</span><br><span class=\"line\">x65= Symbol(&#x27;x65&#x27;)</span><br><span class=\"line\">x66= Symbol(&#x27;x66&#x27;)</span><br><span class=\"line\">x67= Symbol(&#x27;x67&#x27;)</span><br><span class=\"line\">x68= Symbol(&#x27;x68&#x27;)</span><br><span class=\"line\">x69= Symbol(&#x27;x69&#x27;)</span><br><span class=\"line\">x70= Symbol(&#x27;x70&#x27;)</span><br><span class=\"line\">x71= Symbol(&#x27;x71&#x27;)</span><br><span class=\"line\">x72= Symbol(&#x27;x72&#x27;)</span><br><span class=\"line\">x73= Symbol(&#x27;x73&#x27;)</span><br><span class=\"line\">x74= Symbol(&#x27;x74&#x27;)</span><br><span class=\"line\">x75= Symbol(&#x27;x75&#x27;)</span><br><span class=\"line\">x76= Symbol(&#x27;x76&#x27;)</span><br><span class=\"line\">x77= Symbol(&#x27;x77&#x27;)</span><br><span class=\"line\">x78= Symbol(&#x27;x78&#x27;)</span><br><span class=\"line\">x79= Symbol(&#x27;x79&#x27;)</span><br><span class=\"line\">x80= Symbol(&#x27;x80&#x27;)</span><br><span class=\"line\">print(<span class=\"name\">solve</span>([</span><br><span class=\"line\">    x00+x01+x02+x03+x04+x05+x06+x07+x08-25,</span><br><span class=\"line\">    x00+x09+x18+x27+x36+x45+x54+x63+x72-25,</span><br><span class=\"line\">    x00+x01+x02+x09+x10+x11+x18+x19+x20-25,</span><br><span class=\"line\">    x00*x01*x02*x03*x04*x05*x06*x07*x08-10080,</span><br><span class=\"line\">    x00*x09*x18*x27*x36*x45*x54*x63*x72-10080,</span><br><span class=\"line\">    x00*x01*x02*x09*x10*x11*x18*x19*x20-10080,</span><br><span class=\"line\">    x09+x10+x11+x12+x13+x14+x15+x16+x17-25,</span><br><span class=\"line\">    x01+x10+x19+x28+x37+x46+x55+x64+x73-25,</span><br><span class=\"line\">    x03+x04+x05+x12+x13+x14+x21+x22+x23-25,</span><br><span class=\"line\">    x09*x10*x11*x12*x13*x14*x15*x16*x17-10080,</span><br><span class=\"line\">    x01*x10*x19*x28*x37*x46*x55*x64*x73-10080,</span><br><span class=\"line\">    x03*x04*x05*x12*x13*x14*x21*x22*x23-10080,</span><br><span class=\"line\">    x18+x19+x20+x21+x22+x23+x24+x25+x26-25,</span><br><span class=\"line\">    x02+x11+x20+x29+x38+x47+x56+x65+x74-25,</span><br><span class=\"line\">    x06+x07+x08+x15+x16+x17+x24+x25+x26-25,</span><br><span class=\"line\">    x18*x19*x20*x21*x22*x23*x24*x25*x26-10080,</span><br><span class=\"line\">    x02*x11*x20*x29*x38*x47*x56*x65*x74-10080,</span><br><span class=\"line\">    x06*x07*x08*x15*x16*x17*x24*x25*x26-10080,</span><br><span class=\"line\">    x27+x28+x29+x30+x31+x32+x33+x34+x35-25,</span><br><span class=\"line\">    x03+x12+x21+x30+x39+x48+x57+x66+x75-25,</span><br><span class=\"line\">    x27+x28+x29+x36+x37+x38+x45+x46+x47-25,</span><br><span class=\"line\">    x27*x28*x29*x30*x31*x32*x33*x34*x35-10080,</span><br><span class=\"line\">    x03*x12*x21*x30*x39*x48*x57*x66*x75-10080,</span><br><span class=\"line\">    x27*x28*x29*x36*x37*x38*x45*x46*x47-10080,</span><br><span class=\"line\">    x36+x37+x38+x39+x40+x41+x42+x43+x44-25,</span><br><span class=\"line\">    x04+x13+x22+x31+x40+x49+x58+x67+x76-25,</span><br><span class=\"line\">    x30+x31+x32+x39+x40+x41+x48+x49+x50-25,</span><br><span class=\"line\">    x36*x37*x38*x39*x40*x41*x42*x43*x44-10080,</span><br><span class=\"line\">    x04*x13*x22*x31*x40*x49*x58*x67*x76-10080,</span><br><span class=\"line\">    x30*x31*x32*x39*x40*x41*x48*x49*x50-10080,</span><br><span class=\"line\">    x45+x46+x47+x48+x49+x50+x51+x52+x53-25,</span><br><span class=\"line\">    x05+x14+x23+x32+x41+x50+x59+x68+x77-25,</span><br><span class=\"line\">    x33+x34+x35+x42+x43+x44+x51+x52+x53-25,</span><br><span class=\"line\">    x45*x46*x47*x48*x49*x50*x51*x52*x53-10080,</span><br><span class=\"line\">    x05*x14*x23*x32*x41*x50*x59*x68*x77-10080,</span><br><span class=\"line\">    x33*x34*x35*x42*x43*x44*x51*x52*x53-10080,</span><br><span class=\"line\">    x54+x55+x56+x57+x58+x59+x60+x61+x62-25,</span><br><span class=\"line\">    x06+x15+x24+x33+x42+x51+x60+x69+x78-25,</span><br><span class=\"line\">    x54+x55+x56+x63+x64+x65+x72+x73+x74-25,</span><br><span class=\"line\">    x54*x55*x56*x57*x58*x59*x60*x61*x62-10080,</span><br><span class=\"line\">    x06*x15*x24*x33*x42*x51*x60*x69*x78-10080,</span><br><span class=\"line\">    x54*x55*x56*x63*x64*x65*x72*x73*x74-10080,</span><br><span class=\"line\">    x63+x64+x65+x66+x67+x68+x69+x70+x71-25,</span><br><span class=\"line\">    x07+x16+x25+x34+x43+x52+x61+x70+x79-25,</span><br><span class=\"line\">    x57+x58+x59+x66+x67+x68+x75+x76+x77-25,</span><br><span class=\"line\">    x63*x64*x65*x66*x67*x68*x69*x70*x71-10080,</span><br><span class=\"line\">    x07*x16*x25*x34*x43*x52*x61*x70*x79-10080,</span><br><span class=\"line\">    x57*x58*x59*x66*x67*x68*x75*x76*x77-10080,</span><br><span class=\"line\">    x72+x73+x74+x75+x76+x77+x78+x79+x80-25,</span><br><span class=\"line\">    x08+x17+x26+x35+x44+x53+x62+x71+x80-25,</span><br><span class=\"line\">    x60+x61+x62+x69+x70+x71+x78+x79+x80-25,</span><br><span class=\"line\">    x72*x73*x74*x75*x76*x77*x78*x79*x80-10080,</span><br><span class=\"line\">    x08*x17*x26*x35*x44*x53*x62*x71*x80-10080,</span><br><span class=\"line\">    x60*x61*x62*x69*x70*x71*x78*x79*x80-10080,</span><br><span class=\"line\">    x00-7,</span><br><span class=\"line\">    x02-5,</span><br><span class=\"line\">    x03-6,</span><br><span class=\"line\">    x06+1,</span><br><span class=\"line\">    x08-4,</span><br><span class=\"line\">    x09-6,</span><br><span class=\"line\">    x10-4,</span><br><span class=\"line\">    x16-2,</span><br><span class=\"line\">    x17-7,</span><br><span class=\"line\">    x18-1,</span><br><span class=\"line\">    x19-2,</span><br><span class=\"line\">    x20+1,</span><br><span class=\"line\">    x21-4,</span><br><span class=\"line\">    x22-7,</span><br><span class=\"line\">    x25-5,</span><br><span class=\"line\">    x26-6,</span><br><span class=\"line\">    x27-2,</span><br><span class=\"line\">    x28-5,</span><br><span class=\"line\">    x29-1,</span><br><span class=\"line\">    x31-6,</span><br><span class=\"line\">    x35+1,</span><br><span class=\"line\">    x45+1,</span><br><span class=\"line\">    x49-5,</span><br><span class=\"line\">    x51-2,</span><br><span class=\"line\">    x52-6,</span><br><span class=\"line\">    x55+1,</span><br><span class=\"line\">    x58-3,</span><br><span class=\"line\">    x61-7,</span><br><span class=\"line\">    x63-5,</span><br><span class=\"line\">    x65-2,</span><br><span class=\"line\">    x66-7,</span><br><span class=\"line\">    x67-4,</span><br><span class=\"line\">    x70+1,</span><br><span class=\"line\">    x71-3,</span><br><span class=\"line\">    x72-3,</span><br><span class=\"line\">    x74-7,</span><br><span class=\"line\">    x75-5,</span><br><span class=\"line\">    x78-4,</span><br><span class=\"line\">    x80-2,</span><br><span class=\"line\">     <span class=\"number\">1</span><span class=\"number\">-1</span></span><br><span class=\"line\">],[x00,x01,x02,x03,x04,x05,x06,x07,x08,x09,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80]))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>这是我掌握的第三种通过计算机方式求解数独的第三种方式，前面两种分别是回溯法,DLX算法。<br>这种多项式求解的方法好处在于将数字之间的逻辑用多项式进行表达,将复杂的逻辑运算交由封装好的工具去处理。<br>稍微麻烦一点的就是书写多项式的表达式，通过数独的相关信息生成py文件再运行py文件,这是后话了。<br>该部分会在C#调用Python代码中会有详细介绍了(未完成,预计在2019年1月21日之前会补充这部分内容)。  </p>\n<h1 id=\"最终总结\"><a href=\"#最终总结\" class=\"headerlink\" title=\"最终总结\"></a>最终总结</h1><p>所有结论都需要实际验证正确之后，再形成文章，这是对自己的负责，也是对读者的负责。<br>也希望读者们能够不吝赐教,表示非常感谢！</p>\n","raw":null,"categories":[{"name":"数独之趣","path":"api/categories/数独之趣.json"}],"tags":[{"name":"数独","path":"api/tags/数独.json"},{"name":"python","path":"api/tags/python.json"}]},{"title":"迟到的元旦快乐","slug":"ComfirmedPostionSodukuClues","date":"2019-01-10T13:15:08.000Z","updated":"2023-09-08T06:12:36.540Z","comments":true,"path":"api/articles/ComfirmedPostionSodukuClues.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/photos/images/元初始状态.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>在元旦之前，本想炫技生成漂亮的数独图案的题目然后发在朋友圈祝朋友们节日快乐。可惜是技术实在不过关。</p>\n<h1 id=\"数独图形\"><a href=\"#数独图形\" class=\"headerlink\" title=\"数独图形\"></a>数独图形</h1><p>在资深的数独迷眼里,标准数独是指通过盘面上的所有提示数字，有且仅有唯一解。<br>以下四个图形，虽说有“元旦快乐”的四个字样，但是并不具备唯一解。  </p>\n<div style=\"clear:both; width:800px\">\n<div style=\"float:left;width:400px\"> <img src=\"/photos/images/元初始状态.png\"></div>\n<div style=\"float:right;width:400px\"><img src=\"/photos/images/旦初始状态.png\"></div>\n</div>\n\n<div style=\"clear:both; width:800px\">\n<div style=\"float:left;width:400px\"> <img src=\"/photos/images/快初始状态.png\"></div>\n<div style=\"float:right;width:400px\"><img src=\"/photos/images/乐初始状态.png\"></div>\n</div>\n\n<p>我们可以经由DLX算法可以快速得知<br>以上“元旦快乐”四个数字的可能解的个数是分别是512,8388,66,285。</p>\n<h1 id=\"标准数独的基本条件\"><a href=\"#标准数独的基本条件\" class=\"headerlink\" title=\"标准数独的基本条件\"></a>标准数独的基本条件</h1><blockquote>\n<p>盘面至少<strong>17</strong>个数字。<br>每一大行中没有两个空行,即第一，二，三行必须有两行存在数字。<br>每一大列中没有两个空列,即第一，二，三列必须有两列存在数字。<br>盘面至少有<strong>8</strong>个不同的已知数字。<br>即<strong>元</strong>字的r3c8会有个<strong>2</strong>的存在是为了避免第一和第三行可以互换,不满足数独唯一性的必要条件。</p>\n</blockquote>\n<h1 id=\"求解过程\"><a href=\"#求解过程\" class=\"headerlink\" title=\"求解过程\"></a>求解过程</h1><p>以元字的表达式为例</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 元表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> before = <span class=\"keyword\">new</span> <span class=\"type\">DanceLink</span>().solution_count(<span class=\"string\">&quot;000000000001234500000000020134659782000308000000402000000703004009006007070001358&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 元的第一个已知数据和第二个已知数据交换</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> after  = <span class=\"keyword\">new</span> <span class=\"type\">DanceLink</span>().solution_count(<span class=\"string\">&quot;000000000002134500000000020134659782000308000000402000000703004009006007070001358&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出的结果是</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">before</span> <span class=\"operator\">=</span> <span class=\"number\">512</span><span class=\"comment\">;</span></span><br><span class=\"line\"><span class=\"attribute\">after</span>  <span class=\"operator\">=</span> <span class=\"number\">312</span><span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>所以最终解可以由after的表达式进行进一步的两两交换去生成。<br>由因为A的已知数据是30个，所以位置的交换有30*29&#x2F;2&#x3D;435种。<br>整个交换的执行流程如下：<br>1、建立一个尝试字典集tryDic,键是数独的表达式,值是数独的结果的可能个数。<br>2、30个位置进行组合，生成435个包含两个位置的集合。<br>3、数独表达式交换前后分别记为before,after,解的个数分别记作b,a,将before,after及其结果数存入tryDic。<br>4、对435个集合进行遍历,若a!&#x3D;0,且a小于b,则before&#x3D;after;<br>5、很有可能第一轮排列组合之后,a并不等于1;没有找到唯一解的数独表达式,选取tryDic的结果个数最多的字符串S出来作为下一轮循环的因子。<br>6、循环执行1~5的过程，<strong>注意步骤5中的字符串S应该是过往循环中没有使用过的，否则会陷入死循环。</strong></p>\n<p>书上以</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">001000009000200046007080000000001000003000200000500000000030800960007000200000500</span><br></pre></td></tr></table></figure>\n<p>这个18个提示数的数独作为例子作为讲解，我也通过以上流程生成了一个18个提示数的标准数独。</p>\n<blockquote>\n<p>借助书上的说法,除了聪明和运气，我们别无他法。</p>\n</blockquote>\n<h1 id=\"标准数独-元旦快乐\"><a href=\"#标准数独-元旦快乐\" class=\"headerlink\" title=\"标准数独(元旦快乐)\"></a>标准数独(元旦快乐)</h1><p>最终生成的结果如下，难度不大。</p>\n<div style=\"clear:both; width:800px\">\n<div style=\"float:left;width:400px\"> <img src=\"/photos/images/元.png\"></div>\n<div style=\"float:right;width:400px\"><img src=\"/photos/images/旦.png\"></div>\n</div>\n\n<div style=\"clear:both; width:800px\">\n<div style=\"float:left;width:400px\"> <img src=\"/photos/images/快.png\"></div>\n<div style=\"float:right;width:400px\"><img src=\"/photos/images/乐.png\"></div>\n</div>\n\n<h1 id=\"逆向思维\"><a href=\"#逆向思维\" class=\"headerlink\" title=\"逆向思维\"></a>逆向思维</h1><p>由以上位置找固定数独的位置可知，如果标准数独去掉某个提示数，不在构成唯一解，但是满足构成标准数独的基本条件,则可能通过两两交换的生成一个新的标准数独。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.cnblogs.com/zhao-yi/p/8533035.html\">C#实现排列、组合</a></li>\n<li><a href=\"https://github.com/ddabb/soduku\">C#源码</a></li>\n</ul>\n","raw":null,"categories":[{"name":"数独之趣","path":"api/categories/数独之趣.json"}],"tags":[{"name":"排列组合","path":"api/tags/排列组合.json"},{"name":"数独","path":"api/tags/数独.json"},{"name":"固定位置","path":"api/tags/固定位置.json"}]}]}