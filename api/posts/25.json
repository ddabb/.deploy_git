{"total":263,"pageSize":10,"pageCount":27,"data":[{"title":"集合S取出n个元素其和为K个数统计","slug":"from_list_S_take_N_numbers_make_sum_K","date":"2018-11-17T00:17:17.000Z","updated":"2023-09-08T06:12:36.691Z","comments":true,"path":"api/articles/from_list_S_take_N_numbers_make_sum_K.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//1234_10.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近csrediscore的创作者在制作一个斗地主的机器人,他探讨性地给我出了一个问题——<strong>怎么样去统计手牌组合的可能性？</strong><br>该问题算是比较复杂的,在不考虑癞子的情况下有<strong>火箭、炸弹、单牌、对牌、连对、三张牌、三带一、单顺、双顺、三顺、飞机带翅膀、四带二</strong>等等牌型。<br>以地主20张手牌为例：</p>\n<ul>\n<li>20张手牌中能打出火箭次数在[0,1]中取值。</li>\n<li>20张手牌中能打出炸弹次数在[0,5]中取值。</li>\n<li>20张手牌中能打出单牌次数在[0,20]中取值——在不考虑其他玩家的情况下,最多出20次单牌。</li>\n<li>依次类推…………<br>所以问题转换为<strong>每种牌型中选取任意次数构成N张手牌的情况有多少种？</strong></li>\n</ul>\n<h1 id=\"问题分解一\"><a href=\"#问题分解一\" class=\"headerlink\" title=\"问题分解一\"></a>问题分解一</h1><p>为了更加简单一点描述问题,我继续对问题进行了简化。<br><strong>从集合{1,2,3,4}中,取出一个元素和为10的个数统计</strong><br>比如集合为：{1,2,3,4}，和值为10；其中取法1,2,3,4和4,3,2,1等价。<br>因和值固定，且都为正数，所以每个元素的取出次数有限，可以得出结论如下图<br><img src=\"/.com//1234_10.png\" alt=\"1,2,3,4可以取出次数分析\">  </p>\n<h1 id=\"问题分解二\"><a href=\"#问题分解二\" class=\"headerlink\" title=\"问题分解二\"></a>问题分解二</h1><figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从集合</span><br><span class=\"line\">&#123;<span class=\"number\">0,1,2,3</span>,<span class=\"number\">4,5,6,7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0,2,4,6</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0,3,6,9</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>&#125;</span><br><span class=\"line\">中各取出一个元素组成新集合S1,S1求和为<span class=\"number\">10</span>的个数统计。</span><br></pre></td></tr></table></figure>\n<p>由图可知,可以取出的元素组合情况为:  11 *  6 * 4 * 3&#x3D;792种。</p>\n<p>最终只需要在这792种方案中选取出和为10的记录。<br>罗列792种方案的可行性的过程叫做求笛卡尔积,以下给出代码实现C#版代码实现过程。</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>求笛卡尔积扩展类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">EnumerableEx</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 求集合的笛卡尔积</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"title\">IEnumerable</span>&lt;<span class=\"title\">IEnumerable</span>&lt;<span class=\"title\">T</span>&gt;&gt; <span class=\"title\">Cartesian</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"keyword\">this</span> IEnumerable&lt;IEnumerable&lt;T&gt;&gt; sequences</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        IEnumerable&lt;IEnumerable&lt;T&gt;&gt; tempProduct = <span class=\"keyword\">new</span>[] &#123;Enumerable.Empty&lt;T&gt;()&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sequences.Aggregate(tempProduct,</span><br><span class=\"line\">            (current, sequence) =&gt;</span><br><span class=\"line\">                (<span class=\"keyword\">from</span> accseq <span class=\"keyword\">in</span> current <span class=\"keyword\">from</span> item <span class=\"keyword\">in</span> sequence <span class=\"keyword\">select</span> accseq.Concat(<span class=\"keyword\">new</span>[] &#123;item&#125;)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建数字集合类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"doctag\">///</span> 数字集合</span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DigitGroup</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 元素</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Value;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 次数</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Times;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 和</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Sum;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DigitGroup</span>(<span class=\"params\"><span class=\"built_in\">int</span> <span class=\"keyword\">value</span>, <span class=\"built_in\">int</span> times</span>)</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Value = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Times = times;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Sum = <span class=\"keyword\">value</span> * times;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"built_in\">string</span> <span class=\"title\">ToString</span>()</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;&#123;0&#125;个&#123;1&#125;,和为&#123;2&#125;&quot;</span>, Times, Value, Sum);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台Program类</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Program</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> Main(string[] args)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          List&lt;<span class=\"built_in\">int</span>&gt; numbers = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">int</span>&gt; &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> Sum = <span class=\"number\">10</span>;</span><br><span class=\"line\">          <span class=\"built_in\">var</span> digitGroupList = GetChooseList(numbers, Sum);</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"built_in\">var</span> result = digitGroupList.Cartesian();</span><br><span class=\"line\">          result = result.Where(chooses =&gt; chooses.Sum(choose =&gt; choose.Sum) == Sum);</span><br><span class=\"line\">          PrintResult(result);</span><br><span class=\"line\"></span><br><span class=\"line\">          Console.ReadKey();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IEnumerable&lt;IEnumerable&lt;DigitGroup&gt;&gt; GetChooseList(List&lt;<span class=\"built_in\">int</span>&gt; intList, <span class=\"built_in\">int</span> target)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          List&lt;List&lt;DigitGroup&gt;&gt; newList = <span class=\"keyword\">new</span> List&lt;List&lt;DigitGroup&gt;&gt;();</span><br><span class=\"line\">          foreach (<span class=\"built_in\">var</span> beichushu <span class=\"keyword\">in</span> intList)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              List&lt;DigitGroup&gt; temp = <span class=\"keyword\">new</span> List&lt;DigitGroup&gt;();</span><br><span class=\"line\">              <span class=\"built_in\">var</span> <span class=\"keyword\">count</span> = target / beichushu;</span><br><span class=\"line\">              <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"keyword\">count</span>; i++)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  temp.Add(<span class=\"keyword\">new</span> DigitGroup(beichushu, i));</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              newList.Add(temp);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">return</span> newList;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> PrintResult(IEnumerable&lt;IEnumerable&lt;DigitGroup&gt;&gt; result)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> <span class=\"keyword\">index</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">          foreach (<span class=\"built_in\">var</span> list <span class=\"keyword\">in</span> result)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              <span class=\"keyword\">index</span> += <span class=\"number\">1</span>;</span><br><span class=\"line\">              Console.Write(<span class=\"keyword\">index</span> + <span class=\"string\">&quot;: &quot;</span>);</span><br><span class=\"line\">              foreach (<span class=\"built_in\">var</span> choose <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  <span class=\"keyword\">if</span> (choose.Sum != <span class=\"number\">0</span>)</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\">                      Console.Write(<span class=\"string\">&quot; &quot;</span> + choose + <span class=\"string\">&quot;   &quot;</span>);</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              Console.WriteLine();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>最终运行结果如下</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">1</span>:  <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">2</span>:  <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">4</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">3</span>:  <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">4</span>:  <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">5</span>:  <span class=\"number\">5</span>个<span class=\"number\">2</span>,和为<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attribute\">6</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">3</span>个<span class=\"number\">3</span>,和为<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"attribute\">7</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">8</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">9</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">4</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">10</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">11</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">12</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">4</span>个<span class=\"number\">2</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">13</span>:  <span class=\"number\">3</span>个<span class=\"number\">1</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">14</span>:  <span class=\"number\">3</span>个<span class=\"number\">1</span>,和为<span class=\"number\">3</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">15</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">16</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">17</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">18</span>:  <span class=\"number\">5</span>个<span class=\"number\">1</span>,和为<span class=\"number\">5</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">19</span>:  <span class=\"number\">6</span>个<span class=\"number\">1</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">20</span>:  <span class=\"number\">6</span>个<span class=\"number\">1</span>,和为<span class=\"number\">6</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">21</span>:  <span class=\"number\">7</span>个<span class=\"number\">1</span>,和为<span class=\"number\">7</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">22</span>:  <span class=\"number\">8</span>个<span class=\"number\">1</span>,和为<span class=\"number\">8</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attribute\">23</span>:  <span class=\"number\">10</span>个<span class=\"number\">1</span>,和为<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>  我现在依旧不知道20张手牌,各种牌型组合的可能性有多少种,但是将问题转化成{1,2,3,4}求和为10的这种方式已经将问题做了一个很好的分解。<br>  只需要将DigitGroup再做一下相应的替换就可以计算出可能的牌型有多少种，该问题的求解已经不在该文的范畴类，有兴趣的读者可以尝试解决一下。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.cnblogs.com/localhost2016/p/8668355.html\">C# 用Linq的方式实现组合和笛卡尔积（支持泛型T）</a></li>\n<li><a href=\"https://ddabb.github.io/Fight-the-Landlord-Card-Type-Aanalysis/\">欢乐斗地主出牌方式统计</a></li>\n</ul>\n","raw":null,"categories":[{"name":"逻辑思维","path":"api/categories/逻辑思维.json"}],"tags":[{"name":"笛卡尔积","path":"api/tags/笛卡尔积.json"},{"name":"斗地主","path":"api/tags/斗地主.json"}]},{"title":"Hexo站点统计","slug":"Hexo站点统计","date":"2018-11-14T14:01:45.000Z","updated":"2023-09-08T06:12:36.546Z","comments":true,"path":"api/articles/Hexo站点统计.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>页脚的总访问人数和单页访问人数显示不正常。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>查找</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>替换成</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>即可  </p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://busuanzi.ibruce.info/\">busuanzi.ibruce.info</a></li>\n</ul>\n","raw":null,"categories":[{"name":"Hexo教程","path":"api/categories/Hexo教程.json"}],"tags":[{"name":"hexo","path":"api/tags/hexo.json"},{"name":"不蒜子","path":"api/tags/不蒜子.json"},{"name":"统计数量","path":"api/tags/统计数量.json"}]},{"title":"欢迎来到60分加油站","slug":"index","date":"2018-11-12T06:09:35.000Z","updated":"2023-09-08T06:12:36.694Z","comments":true,"path":"api/articles/index.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h3 id=\"逻辑思维\"><a href=\"#逻辑思维\" class=\"headerlink\" title=\"逻辑思维\"></a><a href=\"https://ddabb.github.io/categories/%E9%80%BB%E8%BE%91%E6%80%9D%E7%BB%B4/\">逻辑思维</a></h3><p><a href=\"https://ddabb.github.io/%E5%AD%97%E5%85%B8%E6%95%B0%E6%8E%92%E5%BA%8F/\">字典数排序</a><br><a href=\"https://ddabb.github.io/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2012%E5%B9%B4%E7%89%88%E6%9C%AC/\">人狼羊菜2012年版本</a><br><a href=\"https://ddabb.github.io/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E8%BF%87%E7%A8%8B%E7%89%88%E6%9C%AC/\">人狼羊菜2018年过程版本</a><br><a href=\"https://ddabb.github.io/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E5%AF%B9%E8%B1%A1%E7%89%88%E6%9C%AC/\">人狼羊菜2018年对象版本</a>  </p>\n<h3 id=\"代码世界\"><a href=\"#代码世界\" class=\"headerlink\" title=\"代码世界\"></a><a href=\"https://ddabb.github.io/categories/%E4%BB%A3%E7%A0%81%E4%B8%96%E7%95%8C/\">代码世界</a></h3><p><a href=\"https://ddabb.github.io/hexo_written_%E7%AB%99%E7%82%B9%E7%BB%9F%E8%AE%A1/\">修正站点次数统计的bug</a><br><a href=\"https://ddabb.github.io/%E6%80%8E%E4%B9%88%E5%AD%A6%E4%B9%A0C/\">怎么学习C++</a><br><a href=\"https://ddabb.github.io/%E7%AC%AC%E4%B8%80%E4%B8%AAAI%E5%BA%94%E7%94%A8/\">第一个AI应用</a><br><a href=\"https://ddabb.github.io/%E5%A6%82%E6%97%A0%E5%BF%85%E8%A6%81%E5%8B%BF%E5%A2%9E%E5%AE%9E%E4%BD%93/\">如无必要,勿增实体</a></p>\n<h3 id=\"60分加油站\"><a href=\"#60分加油站\" class=\"headerlink\" title=\"60分加油站\"></a><a href=\"https://ddabb.github.io/categories/60%E5%88%86%E5%8A%A0%E6%B2%B9%E7%AB%99/\">60分加油站</a></h3><p><a href=\"https://ddabb.github.io/%E6%88%91%E4%BB%AC%E5%B7%A5%E4%BD%9C%E5%88%B0%E5%BA%95%E4%B8%BA%E4%BA%86%E4%BB%80%E4%B9%88/\">我们工作到底为了什么</a><br><a href=\"https://ddabb.github.io/%E6%94%BE%E8%BF%87%E7%8A%80%E5%88%A9%E5%93%A5%EF%BC%8C%E5%88%AB%E6%8B%BF%E4%B9%9E%E4%B8%90%E4%B8%8D%E5%BD%93%E4%BA%BA/\">放过犀利哥，别拿乞丐不当人</a><br><a href=\"https://ddabb.github.io/%E4%B9%9D%E4%B8%80%E5%85%AB%EF%BC%9A%E6%88%91%E4%BB%AC%E6%8B%BF%E4%BB%80%E4%B9%88%E6%9D%A5%E7%88%B1%E5%9B%BD/\">九一八：我们拿什么来爱国</a><br><a href=\"https://ddabb.github.io/%E6%95%88%E7%8E%87%E6%9E%81%E4%BD%8E%E4%BA%BA%E7%BE%A4%E4%B9%8B%E4%B8%83%E5%A4%A7%E4%B9%A0%E6%83%AF/\">效率极低人群之七大习惯</a> </p>\n<h3 id=\"生活感悟\"><a href=\"#生活感悟\" class=\"headerlink\" title=\"生活感悟\"></a><a href=\"https://ddabb.github.io/categories/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/\">生活感悟</a></h3><p><a href=\"https://ddabb.github.io/520%E7%9A%84%E6%95%85%E4%BA%8B/\">520的故事</a><br><a href=\"https://ddabb.github.io/%E6%B5%85%E8%B0%88%E5%80%BE%E5%90%AC/\">浅谈倾听</a><br><a href=\"https://ddabb.github.io/%E9%87%8E%E8%9B%AE%E4%BD%95%E4%BB%A5%E6%88%90%E4%B8%BA%E6%96%87%E6%98%8E%E7%9A%84%E5%B9%8C%E5%AD%90/\">野蛮何以成为文明的幌子</a><br><a href=\"https://ddabb.github.io/%E9%82%A3%E7%88%B1%E6%83%85%E7%BB%8F%E4%B8%8D%E8%B5%B7%E7%AD%89%E5%BE%85/\">那爱情,经不起等待</a><br><a href=\"https://ddabb.github.io/%E8%99%9A%E8%8D%A3%E5%BF%83%E4%BF%83%E8%BF%9B%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95/\">虚荣心，促进经济发展</a><br><a href=\"https://ddabb.github.io/TheManFromEarth/\">这个男人来自地球——观后感</a>  </p>\n<h3 id=\"关于本站点\"><a href=\"#关于本站点\" class=\"headerlink\" title=\"关于本站点\"></a>关于本站点</h3><p><a href=\"https://ddabb.github.io/%E5%BB%BA%E7%AB%99%E5%8E%9F%E5%9B%A0/\">建站原因</a><br><a href=\"https://ddabb.github.io/%E6%80%8E%E4%B9%88%E6%A0%B7%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/\">怎么样搭建一个博客网站</a>  </p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><p><a href=\"https://ddabb.github.io/vio/\">个人简历</a><br><a href=\"https://ddabb.github.io/contactme/\">联系方式</a></p>\n","raw":null,"categories":[],"tags":[{"name":"网站简介","path":"api/tags/网站简介.json"}]},{"title":"第一个AI应用","slug":"第一个AI应用","date":"2018-11-11T11:25:27.000Z","updated":"2023-09-08T06:12:36.707Z","comments":true,"path":"api/articles/第一个AI应用.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//%E6%AD%A3%E7%A1%AE.png","content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>我的第一个AI应用是参考<a href=\"https://cloud.tencent.com/developer/article/1348205\">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a>和<a href=\"http://www.cnblogs.com/ms-uap/p/9123033.html\">AI应用开发实战 - 从零开始配置环境</a>两篇文章进行的实施,故以该文做出相应的补充。</p>\n<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><h2 id=\"‘python’-不是内部或外部变量\"><a href=\"#‘python’-不是内部或外部变量\" class=\"headerlink\" title=\"‘python’ 不是内部或外部变量\"></a>‘python’ 不是内部或外部变量</h2><p>命令行执行<strong>python –version</strong>提示’python’ 不是内部或外部变量，在命令行中输入</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"attribute\">PATH</span>=<span class=\"string\">&quot;C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64&quot;</span>;%PATH%</span><br></pre></td></tr></table></figure>\n<p>之后,再输入</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">python</span> --<span class=\"keyword\">version</span></span><br></pre></td></tr></table></figure>\n<p>输出版本为3.6.5<br>但是关闭命令行之后，再输入python –version时,依旧提示 <strong>‘python’ 不是内部或外部变量</strong>。<br>故在计算机→属性右键→高级系统设置→环境变量→选择<strong>PATH</strong>→点击新建→将<strong>C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64</strong>添加→确定，之后再运行python –version，显示正常。</p>\n<h2 id=\"saved-model-pb路径不对\"><a href=\"#saved-model-pb路径不对\" class=\"headerlink\" title=\"saved_model.pb路径不对\"></a>saved_model.pb路径不对</h2><p>单独参考第一篇文章进行配置时，发现没有<strong>samples-for-ai\\export\\saved_model.pb</strong>这个路径。<br>原因是没有启动<strong>examples\\tensorflow\\TensorflowExamples.sln</strong>这个解决方案，将MNIST项目设置为启动项目并运行,则会有samples-for-ai\\export\\saved_model.pb这个文件了。</p>\n<h2 id=\"命令行无响应\"><a href=\"#命令行无响应\" class=\"headerlink\" title=\"命令行无响应\"></a>命令行无响应</h2><p>安装<strong>scipy-1.1.0</strong>和<strong>mxnet_cu90-1.2.0</strong>时,命令行一直无响应,解决方案是到<a href=\"https://pypi.org/project/scipy/1.1.0/\">scipy-1.1.0</a>和<a href=\"https://pypi.org/project/mxnet-cu90/1.2.0/\">mxnet-cu90 1.2.0</a>下载指定的文件，然后通过pip3命令来执行安装，其余问题也可以通过类似命令来解决。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">pip3</span> install D:\\scipy-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">0</span>-cp36-none-win_amd64.whl</span><br><span class=\"line\"><span class=\"attribute\">pip3</span> install D:\\mxnet_cu90-<span class=\"number\">1</span>.<span class=\"number\">2</span>.<span class=\"number\">0</span>-py2.py3-none-win_amd64.whl</span><br></pre></td></tr></table></figure>\n<p>通过下载的文件可以得知，文件较大，命令行无法及时完成下载,所以<strong>需要有一定的耐心等待</strong></p>\n<blockquote>\n<p>注意需要将<strong>C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\Scripts</strong>添加到<strong>PATH变量</strong>中。</p>\n</blockquote>\n<h2 id=\"cudnn版本不对\"><a href=\"#cudnn版本不对\" class=\"headerlink\" title=\"cudnn版本不对\"></a>cudnn版本不对</h2><p>现在官网<a href=\"https://developer.nvidia.com/cudnn\">https://developer.nvidia.com/cudnn</a>提供的cudnn版本是7.4.1,而微软示例代码中的cudnn版本是7.0.3,高版本的cudnn也会导致编译失败，需要找低版本的7.0.<em>的cudnn替换到*<em>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll</em></em>  </p>\n<h1 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h1><p>解决了这部分问题之后,能正常展示winform界面，运行结果如下:<br><img src=\"/.com//%E6%AD%A3%E7%A1%AE.png\" alt=\"正确识别\"><br><img src=\"/.com//%E9%94%99%E8%AF%AF.png\" alt=\"错误识别\"><br>该部分涉及到训练模型是否足够多的问题，该文不做深入的研究。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>参考资料中提及的两篇文章都已经是做<strong>手写识别</strong>非常好的入门资料，该文仅仅是对这两篇文章做一个相应的补充，以作备忘。<br>另外我希望早日掌握以下技能</p>\n<blockquote>\n<p>识别<strong>开心消消乐</strong>的游戏界面，然后通过能够确定执行的最佳下一步，达到这个目的，我觉得我对人工智能的了解和我的AI编程就进入了新的层次了。</p>\n</blockquote>\n<p>#参考资料</p>\n<ul>\n<li><a href=\"https://cloud.tencent.com/developer/article/1348205\">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a></li>\n<li><a href=\"http://www.cnblogs.com/ms-uap/p/9123033.html\">AI应用开发实战 - 从零开始配置环境</a></li>\n</ul>\n","raw":null,"categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"代码世界/人工智能","path":"api/categories/代码世界/人工智能.json"}],"tags":[{"name":"python","path":"api/tags/python.json"},{"name":"原创","path":"api/tags/原创.json"},{"name":"手写识别","path":"api/tags/手写识别.json"}]},{"title":"我的简历","slug":"bio","date":"2018-11-11T06:09:35.000Z","updated":"2023-09-08T06:12:36.688Z","comments":true,"path":"api/articles/bio.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"个人基本信息\"><a href=\"#个人基本信息\" class=\"headerlink\" title=\"个人基本信息\"></a>个人基本信息</h1><ul>\n<li><strong>姓名</strong> 刘石丰</li>\n<li><strong>性别</strong> 男</li>\n<li><strong>学历</strong> 本科</li>\n<li><strong>专业</strong> 电子信息工程</li>\n<li><strong>院校</strong> 中南林业科技大学</li>\n<li><strong>政治面貌</strong> 人民群众</li>\n<li><strong>所在城市</strong> 广东广州</li>\n<li><strong>移动电话</strong> 18664891357</li>\n<li><strong>电子邮件</strong> <a href=\"mailto:&#x34;&#x31;&#x37;&#x31;&#52;&#52;&#52;&#53;&#x32;&#x40;&#113;&#x71;&#46;&#99;&#111;&#x6d;\">&#x34;&#x31;&#x37;&#x31;&#52;&#52;&#52;&#53;&#x32;&#x40;&#113;&#x71;&#46;&#99;&#111;&#x6d;</a></li>\n<li><strong>Github</strong> @ddabb</li>\n<li><strong>个人博客</strong> <a href=\"https://ddabb.github.io/\">https://ddabb.github.io</a></li>\n<li><strong>求职状态</strong> 在职，无离职意向</li>\n</ul>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><p>广州市睿明计算机科技有限公司<br><a href=\"http://www.anta.com/\">中国（安踏）有限公司</a><br><a href=\"http://www.boykee.com/\">广州市铂铱柯信息科技有限公司</a><br><a href=\"http://www.homonia.com/\">北京和信融慧信息科技有限公司</a>  </p>\n<h1 id=\"擅长领域\"><a href=\"#擅长领域\" class=\"headerlink\" title=\"擅长领域\"></a>擅长领域</h1><p>业务:</p>\n<ul>\n<li>RPA系统的设计开发  </li>\n<li><a href=\"https://dynamics.microsoft.com/zh-cn/dynamics-crm/\">CRM</a>系统的设计开发  </li>\n<li><a href=\"https://baike.baidu.com/item/%E4%BE%9B%E5%BA%94%E5%95%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\">ESCM</a>系统的设计开发</li>\n</ul>\n<p>框架：    </p>\n<ul>\n<li>基于<a href=\"https://dynamics.microsoft.com/zh-cn/dynamics-crm/\">CRM</a>框架的 Web 系统设计开发</li>\n<li>对于前端框架 <a href=\"http://cn.inspinia.cn/\">Inspina</a>、BootStrap、Jquery、<a href=\"https://www.layui.com/\">Layui</a>等有使用经验</li>\n</ul>\n<p>技术：</p>\n<ul>\n<li>webform项目重构及性能调优</li>\n<li>winform项目重构及性能调优</li>\n<li>webapi,webservice</li>\n<li>.net core和gensql结合开发  </li>\n<li>IDE ：VS code,Visual Studio 2017,SSMS</li>\n</ul>\n<p>其他：  </p>\n<ul>\n<li><strong>DB：</strong> 主要使用sqlserver为主,对mysql,PostgreSQL,redis等数据库有基本的了解  </li>\n<li><strong>消息队列：</strong> RabbitMq,Redis  </li>\n<li><strong>开发语言：</strong> 主要使用C#和sql为主,用java、vb、python等语言做过基本功能。  </li>\n<li><strong>版本管理:</strong> 主要使用SVN、Git、VSS</li>\n<li><strong>反编译工具:</strong> dnspy&#x2F;ILSpy，JetBrains dotPeek，.Net Reflector，Telerik JustDecompile</li>\n</ul>\n<h1 id=\"开发经历\"><a href=\"#开发经历\" class=\"headerlink\" title=\"开发经历\"></a>开发经历</h1><h2 id=\"ISSUE管理系统\"><a href=\"#ISSUE管理系统\" class=\"headerlink\" title=\"ISSUE管理系统\"></a>ISSUE管理系统</h2><ul>\n<li><strong>时间：</strong> 一周</li>\n<li><strong>描述：</strong> 统计公司项目的问题，统计分析问题进展情况。</li>\n<li><strong>职责：</strong> 全栈</li>\n<li><strong>角色：</strong> 全栈</li>\n<li><strong>状态：</strong> 成功上线</li>\n<li><strong>团队规模：</strong> 1人</li>\n<li><strong>总结</strong><br> 该系统基于webform开发。<br> 该系统实现了多人多项目的状态管理,实现了ISSUE单据的assign，日报，周报，发送邮件通知等功能，对公司的项目管理质量有明显的提升，是个轻巧灵活的ISSUE管理系统。<br> 通过该系统掌握了window定时任务，发送邮件等基本功能。<br> 随着工作经验的丰富，发现有tower,jira等工具可以使用,比自己写的ISSUE管理系统相对而言要健壮,美观一些。<br> 该系统算是敏捷开发的一次不错的尝试。</li>\n</ul>\n<h2 id=\"SqlSever迁移到Mysql项目\"><a href=\"#SqlSever迁移到Mysql项目\" class=\"headerlink\" title=\"SqlSever迁移到Mysql项目\"></a>SqlSever迁移到Mysql项目</h2><ul>\n<li><strong>时间：</strong> 一个月</li>\n<li><strong>描述：</strong> 重构项目,目标是实现SqlServer数据库到Mysql数据库的迁移。</li>\n<li><strong>职责：</strong> 全栈</li>\n<li><strong>角色：</strong> 研发人员</li>\n<li><strong>团队规模：</strong> 3人</li>\n<li><strong>状态：</strong> 成功上线</li>\n<li><strong>总结</strong><br> 该系统基于winform开发。<br> 该项目的目标是底层数据库并行支持mysql或者sqlserver,项目目标是600多个sql server的sql语句需要支持mysql版本的实现。<br> 通过该项目对比总结了mysql和sqlserver的语法和字段类型的差异，并温习了策略模式。<br> 因项目时间有限等原因,故没有采取将原生sql重构成EF实现的这种方式,若采用EF实现,可以更加便捷地继续向PostgreSQL等数据库进行迁移。</li>\n</ul>\n<h2 id=\"搭建个人博客系统\"><a href=\"#搭建个人博客系统\" class=\"headerlink\" title=\"搭建个人博客系统\"></a>搭建个人博客系统</h2><ul>\n<li><strong>时间：</strong> 三个月的业余时间</li>\n<li><strong>描述：</strong> 该项目的目标是基于.net core构建一个博客系统,该博客系统具备编辑，分类，标签，评论等功能。</li>\n<li><strong>职责：</strong> 全栈</li>\n<li><strong>角色：</strong> 全栈</li>\n<li><strong>团队规模：</strong> 1人</li>\n<li><strong>项目状态：</strong> <strong><font color=\"#FF0000\">既有失败,又有成功</font></strong></li>\n<li><strong>总结</strong><br> 该系统基于.netcore开发。<br> 该系统失败的定义是我没有实现基于.netcore搭建出来一套具备编辑，分类，标签，评论等功能的博客系统的这个目标。<br> 该系统成功的部分在于基于该目标,我接触了很多之前没有接触的知识点。比如markdown,.netcore+dbfirst,PostgreSQL开发等等。<br> 在摸索该目标的过程中发现了Hexo这一套可以自己选择主题定制化的博客系统，并基于此搭建了一个属于自己的博客站点——<a href=\"https://ddabb.github.io/\">60分加油站</a>。<br> 该项目的经验是 **<font color=\"#FF0000\">一定要记住项目立项的最重要的目标是什么。</font>**，该项目的主要目标是一个博客系统,而创建一个博客系统的目标是对个人知识进行一个归纳整理，现在已经可以通过Hexo框架对个人知识进行归纳整理，就无需要再制造新的车轮了。</li>\n</ul>\n<h1 id=\"自我评价\"><a href=\"#自我评价\" class=\"headerlink\" title=\"自我评价\"></a>自我评价</h1><ul>\n<li>个人遵循**”Do not repeat yourself”**原则，想法设法将重复低效的事情交由系统执行。</li>\n<li>认可开源分享理念,混迹于github,oschina等站点,并认为开源促进社会进步。乐于总结和分享个人经验。座右铭——<strong>不接触，不了解；不分享，不成长。</strong></li>\n<li>对算法以及AI等方向比较感兴趣  </li>\n<li>做事专一，热衷于在一个领域持续积累经验并有所作为。</li>\n</ul>\n","raw":null,"categories":[],"tags":[{"name":"简历","path":"api/tags/简历.json"}]},{"title":"个人信息","slug":"contactme","date":"2018-11-11T06:09:35.000Z","updated":"2023-09-08T06:12:36.690Z","comments":true,"path":"api/articles/contactme.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"个人基本信息\"><a href=\"#个人基本信息\" class=\"headerlink\" title=\"个人基本信息\"></a>个人基本信息</h1><ul>\n<li><strong>姓名</strong> 刘石丰</li>\n<li><strong>性别</strong> 男</li>\n<li><strong>学历</strong> 本科</li>\n<li><strong>专业</strong> 电子信息工程</li>\n<li><strong>院校</strong> 中南林业科技大学</li>\n<li><strong>政治面貌</strong> 人民群众</li>\n<li><strong>所在城市</strong> 广东深圳</li>\n<li><strong>移动电话</strong> 18664891357</li>\n<li><strong>电子邮件</strong> <a href=\"mailto:&#49;&#48;&#49;&#x31;&#x38;&#x38;&#56;&#x38;&#57;&#x31;&#64;&#x71;&#113;&#x2e;&#x63;&#111;&#x6d;\">&#49;&#48;&#49;&#x31;&#x38;&#x38;&#56;&#x38;&#57;&#x31;&#64;&#x71;&#113;&#x2e;&#x63;&#111;&#x6d;</a></li>\n<li><strong>Github</strong> @ddabb</li>\n<li><strong>个人博客</strong> <a href=\"https://ddabb.github.io/\">https://ddabb.github.io</a></li>\n<li><strong>求职状态</strong> 在职，无离职意向</li>\n<li><strong>个人网站</strong> <a href=\"https://www.60points.com/\">https://www.60points.com</a></li>\n<li><strong>个人技能</strong> 微信小程序,C#</li>\n</ul>\n","raw":null,"categories":[{"name":"生活感悟","path":"api/categories/生活感悟.json"}],"tags":[{"name":"简历","path":"api/tags/简历.json"}]},{"title":"如无必要,勿增实体","slug":"如无必要勿增实体","date":"2018-11-08T13:04:50.000Z","updated":"2023-09-08T06:12:36.703Z","comments":true,"path":"api/articles/如无必要勿增实体.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>初次接触到 <strong><a href=\"https://baike.baidu.com/item/%E5%A5%A5%E5%8D%A1%E5%A7%86%E5%89%83%E5%88%80%E5%8E%9F%E7%90%86\">如无必要,勿增实体</a></strong> 是在《西部世界》这部美剧中,今日早晨我在看<a href=\"https://baike.baidu.com/item/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AE%9A%E7%90%86\">贝叶斯定理</a>的相关文章的时候,恰巧又温习到这句话，想聊一下该语句是怎么影响我的生活的。</p>\n<h1 id=\"以往\"><a href=\"#以往\" class=\"headerlink\" title=\"以往\"></a>以往</h1><p>参加新的工作以后,很多东西都发生了变化。比如以前是B&#x2F;S项目，现在是C&#x2F;S项目。因为B&#x2F;S的逻辑代码都存在于服务器端,基本上不用考虑源码被不良居心的人使用。而C&#x2F;S架构存在源码泄露的风险，故需要对产品的Dll做混淆处理。<br>如果要制作一个安装包,避免不了以下这些步骤：</p>\n<ul>\n<li>SVN签出最新代码</li>\n<li>重新生成解决方案</li>\n<li>Release目录内的dll拷贝到混淆工具指定路径</li>\n<li>混淆结果拷贝到安装包制作路径</li>\n<li>生成安装包发布到指定路径</li>\n</ul>\n<p>在window下的tortoisesvn 可视化操作下,选中指定目录签出文件,并不麻烦。<br>在visual studio 2017下,打开几十个项目重新编译通过就有点麻烦，毕竟项目越多,Visual Studio加载越慢。<br>在多个Release目录中,选中指定的待混淆文件拷贝对混淆工具的指定路径是重复低效事件。<br>再将混淆结果拷贝到安装包制作路径再制作安装包是重复低效事件。<br>再将安装包拷贝到阿里云的Ftp服务器是重复低效事件。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原目录和目标目录的不断切换,不同工具的开启和调用,整个过程操作下来，顺利则30分钟，不顺利则一个小时。</span><br></pre></td></tr></table></figure>\n<p>如果一天做两个不同版本的安装包，一天就一个多小时重复在安装包的制作之上。这并不能体现出我的工作价值。<br>鲁迅先生说过:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无端地空耗别人的时间,其实无异于谋财害命。</span><br></pre></td></tr></table></figure>\n<p>若不想被谋财害命,需要作出一些改变。</p>\n<h1 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h1><p>若是一年做一次安装包，写一个安装包部署手册就好了。一年之后再制作安装包的时候，参考该部署手册就能很好的解决问题了。<br>但是一周2~3次的安装包制作（不做解释^_^）,一周就有三四个小时用于制作安装包了。<br>《西部世界》好歹是一个机器人的世界,我公司又是做的RPA的产品,怎么自己还在做这种重复低效无意义的事情？  </p>\n<ul>\n<li>SVN可以通过命令行做签入签出的动作。</li>\n<li>Visual Studio 2017 也可以通过命令行执行重新生成解决方案的动作。</li>\n<li>拷贝文件到指定目录的代码网上比比皆是。</li>\n<li>ftp也可以通过命令行执行上传下载文件的动作。</li>\n</ul>\n<p>我能不能制作一个工具,一键就把以上所有实现都给完成了？</p>\n<h1 id=\"现在\"><a href=\"#现在\" class=\"headerlink\" title=\"现在\"></a>现在</h1><p>参考了一些资料，花了几天终于折腾出来了一个发布工具(Ftp命令行这部分未实现)，虽说这个发布并比不上docker的一件部署。<br>但是于我个人而言，却是近期以来</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如无必要，勿增实体</span><br></pre></td></tr></table></figure>\n<p>的最佳实践，基于此工具,制作一个安装包的时间已经省到一半的时间了,这样也是<strong>惜时如金</strong>的一种表现吧。<br>这个基于Hexo主题的网站搭建也是一个<strong>Do not repeat yourself</strong>的实践,没有试图再去从零开始搭建一个网站框架，创作一个新型的电子垃圾也是迷途知返吧；<br>再引用一句鲁迅的名言</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">总之，我们要拿来。我们要或使用，或存放，或毁灭。  </span><br><span class=\"line\">那么，主人是新主人，宅子也就会成为新宅子。  </span><br><span class=\"line\">然而首先要这人沉着，勇猛，有辨别，不自私。  </span><br><span class=\"line\">没有拿来的，人不能自成为新人，没有拿来的，文艺不能自成为新文艺。</span><br></pre></td></tr></table></figure>\n\n<p><strong>没有拿来的,技术不能自成为新技术</strong>。不需要创造重复的轮子，但是手上也需要有适合自己的工具。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>奥卡姆剃刀原理也好,Dry原则也好,RPA也好,AI也好，甚至西部世界也好都说明了一个道理：<br><strong>人从事重复简单的工作,能带来的是熟练程度的提升，但是在更年轻力壮的人或者机器人面前,他并不具备足够的竞争力。</strong></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://blog.csdn.net/lixiangminghate/article/details/51350846\">使用bat脚本编译VS工程</a></li>\n<li><a href=\"http://www.cnblogs.com/136asdxxl/p/7410947.html\">svn 命令行使用总结</a></li>\n<li><a href=\"http://www.cnblogs.com/joean/p/4870486.html\">C# 如何执行bat文件 传参数</a></li>\n<li><a href=\"https://blog.csdn.net/qq_18808965/article/details/77882381\">如何使用DOS命令通过FTP进行上传和下载</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生活感悟","path":"api/categories/生活感悟.json"}],"tags":[{"name":"原创","path":"api/tags/原创.json"},{"name":"代码世界","path":"api/tags/代码世界.json"},{"name":"命令行","path":"api/tags/命令行.json"},{"name":"制作安装包","path":"api/tags/制作安装包.json"},{"name":"Svn签出","path":"api/tags/Svn签出.json"}]},{"title":"人狼羊菜2018年对象版本","slug":"人狼羊菜2018年对象版本","date":"2018-10-31T15:46:29.000Z","updated":"2023-09-08T06:12:36.699Z","comments":true,"path":"api/articles/人狼羊菜2018年对象版本.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<p>新建Transport类,因方法和属性都有对应的详细说明，故不再赘述。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 运输类</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Transport</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 运输对象名称</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> ObjectName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 运输方向描述</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> DirectionDescription &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 校验初始状态的函数</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">bool</span>&gt; ValidInitStateFuc &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 校验结束状态的函数</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">bool</span>&gt; ValidEndStateFuc &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 单次运输函数</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>&gt; MoveFunc &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Transport</span>(<span class=\"params\"><span class=\"built_in\">string</span> objectName, Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">bool</span>&gt; validInitState, Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">bool</span>&gt; validEndState,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">        Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>&gt; moveFunc</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.ObjectName = objectName;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.ValidInitStateFuc = validInitState;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.ValidEndStateFuc = validEndState;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.MoveFunc = moveFunc;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 运输方法</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;state&quot;&gt;</span>初始状态<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>运输之后的状态<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> <span class=\"title\">Transfer</span>(<span class=\"params\"><span class=\"built_in\">int</span> state</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ValidInitStateFuc(state))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> result = MoveFunc(state);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ValidEndStateFuc(result))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                DirectionDescription = result &gt; <span class=\"number\">8</span> ? <span class=\"string\">&quot;从A岸到了B岸。&quot;</span> : <span class=\"string\">&quot;从B岸到了A岸。&quot;</span>;</span><br><span class=\"line\">                Console.WriteLine(ObjectName + DirectionDescription);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>调用方法如下</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static void <span class=\"constructor\">Main(<span class=\"params\">string</span>[] <span class=\"params\">args</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Console.<span class=\"constructor\">WriteLine(<span class=\"string\">&quot;transports 开始&quot;</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断是否合法状态</span></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> <span class=\"constructor\">ValidEndState(<span class=\"params\">int</span> <span class=\"params\">state</span>)</span> =&gt; state != <span class=\"number\">3</span><span class=\"operator\"> &amp;&amp; </span>!(state &gt;= <span class=\"number\">6</span><span class=\"operator\"> &amp;&amp; </span>state &lt;= <span class=\"number\">9</span>)<span class=\"operator\"> &amp;&amp; </span>state != <span class=\"number\">12</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断人是否和羊在一起</span></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> <span class=\"constructor\">IsPeopleWithSheep(<span class=\"params\">int</span> <span class=\"params\">state</span>)</span> =&gt; state<span class=\"operator\"> / </span><span class=\"number\">2</span> % <span class=\"number\">2</span><span class=\"operator\"> == </span><span class=\"number\">0</span><span class=\"operator\"> &amp;&amp; </span>state &lt; <span class=\"number\">8</span><span class=\"operator\"> || </span>state<span class=\"operator\"> / </span><span class=\"number\">2</span> % <span class=\"number\">2</span><span class=\"operator\"> == </span><span class=\"number\">1</span><span class=\"operator\"> &amp;&amp; </span>state &gt;= <span class=\"number\">8</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断人是否和狼在一起</span></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> <span class=\"constructor\">IsPeopleWithWolf(<span class=\"params\">int</span> <span class=\"params\">state</span>)</span> =&gt; !(state &gt;= <span class=\"number\">4</span><span class=\"operator\"> &amp;&amp; </span>state &lt;= <span class=\"number\">11</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断人是否和菜在一起</span></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> <span class=\"constructor\">IsPeopleWithGreens(<span class=\"params\">int</span> <span class=\"params\">state</span>)</span> =&gt; state % <span class=\"number\">2</span><span class=\"operator\"> == </span><span class=\"number\">0</span><span class=\"operator\"> &amp;&amp; </span>state &lt; <span class=\"number\">8</span><span class=\"operator\"> || </span>state % <span class=\"number\">2</span><span class=\"operator\"> == </span><span class=\"number\">1</span><span class=\"operator\"> &amp;&amp; </span>state &gt;= <span class=\"number\">8</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//运输人和青菜</span></span><br><span class=\"line\">    <span class=\"built_in\">int</span> <span class=\"constructor\">TransferPeopleWithGreens(<span class=\"params\">int</span> <span class=\"params\">i</span>)</span> =&gt; i ^ <span class=\"number\">9</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//运输人和羊</span></span><br><span class=\"line\">    <span class=\"built_in\">int</span> <span class=\"constructor\">TransferPeopleWithSheep(<span class=\"params\">int</span> <span class=\"params\">i</span>)</span> =&gt; i ^ <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//运输人和狼</span></span><br><span class=\"line\">    <span class=\"built_in\">int</span> <span class=\"constructor\">TransPeopleWithWolf(<span class=\"params\">int</span> <span class=\"params\">i</span>)</span> =&gt; i ^ <span class=\"number\">12</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//运输人和狼</span></span><br><span class=\"line\">    <span class=\"built_in\">int</span> <span class=\"constructor\">TransPeople(<span class=\"params\">int</span> <span class=\"params\">i</span>)</span> =&gt; i ^ <span class=\"number\">8</span>;</span><br><span class=\"line\">    Transport transport1 = <span class=\"keyword\">new</span> <span class=\"constructor\">Transport(<span class=\"string\">&quot;人和菜&quot;</span>, IsPeopleWithGreens, ValidEndState, TransferPeopleWithGreens)</span>;</span><br><span class=\"line\">    Transport transport2 = <span class=\"keyword\">new</span> <span class=\"constructor\">Transport(<span class=\"string\">&quot;人和羊&quot;</span>, IsPeopleWithSheep, ValidEndState, TransferPeopleWithSheep)</span>;</span><br><span class=\"line\">    Transport transport3 = <span class=\"keyword\">new</span> <span class=\"constructor\">Transport(<span class=\"string\">&quot;人和狼&quot;</span>, IsPeopleWithWolf, ValidEndState, TransPeopleWithWolf)</span>;</span><br><span class=\"line\">    Transport transport4 = <span class=\"keyword\">new</span> <span class=\"constructor\">Transport(<span class=\"string\">&quot;人&quot;</span>, <span class=\"params\">state</span> =&gt; <span class=\"params\">true</span>, ValidEndState, TransPeople)</span>;</span><br><span class=\"line\">    List&lt;Transport&gt; transports = <span class=\"keyword\">new</span> List&lt;Transport&gt; &#123;transport1, transport2, transport3, transport4&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> tempState = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> EndState = <span class=\"number\">15</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (tempState != EndState)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        foreach (var actionItem <span class=\"keyword\">in</span> transports)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            tempState = actionItem.<span class=\"constructor\">Transfer(<span class=\"params\">tempState</span>)</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Console.<span class=\"constructor\">WriteLine(<span class=\"string\">&quot;transports 结束&quot;</span>)</span>;</span><br><span class=\"line\">    Console.<span class=\"constructor\">ReadKey()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">transports 开始</span><br><span class=\"line\">人和羊从<span class=\"selector-tag\">A</span>岸到了<span class=\"selector-tag\">B</span>岸。</span><br><span class=\"line\">人从<span class=\"selector-tag\">B</span>岸到了<span class=\"selector-tag\">A</span>岸。</span><br><span class=\"line\">人和菜从<span class=\"selector-tag\">A</span>岸到了<span class=\"selector-tag\">B</span>岸。</span><br><span class=\"line\">人和羊从<span class=\"selector-tag\">B</span>岸到了<span class=\"selector-tag\">A</span>岸。</span><br><span class=\"line\">人和狼从<span class=\"selector-tag\">A</span>岸到了<span class=\"selector-tag\">B</span>岸。</span><br><span class=\"line\">人从<span class=\"selector-tag\">B</span>岸到了<span class=\"selector-tag\">A</span>岸。</span><br><span class=\"line\">人和羊从<span class=\"selector-tag\">A</span>岸到了<span class=\"selector-tag\">B</span>岸。</span><br><span class=\"line\">transports 结束</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://ddabb.github.io/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E8%BF%87%E7%A8%8B%E7%89%88%E6%9C%AC/\">人狼羊菜2018年过程版本</a></li>\n<li><a href=\"https://ddabb.github.io/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2012%E5%B9%B4%E7%89%88%E6%9C%AC/\">人狼羊菜2012年版本</a></li>\n</ul>\n","raw":null,"categories":[{"name":"逻辑思维","path":"api/categories/逻辑思维.json"}],"tags":[{"name":"人狼羊菜","path":"api/tags/人狼羊菜.json"}]},{"title":"人狼羊菜2018年过程版本","slug":"人狼羊菜2018年过程版本","date":"2018-10-30T15:48:38.000Z","updated":"2023-09-08T06:12:36.700Z","comments":true,"path":"api/articles/人狼羊菜2018年过程版本.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":"/.com//%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C%E7%8A%B6%E6%80%81%E5%9B%BE.png","content":"<h2 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h2><h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>假设开始人狼羊菜都是在A岸，目的是将人狼羊菜运输到B岸。<br>人,狼,羊，菜在A岸的标识为0,在B岸的标识位为1。经过枚举可以得出16种状态中不符合的有6种。<br>如图所示</p>\n<p><img src=\"/.com//%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C%E7%8A%B6%E6%80%81%E5%9B%BE.png\" alt=\"人狼羊菜状态图\"></p>\n<p>根据以上描述的状态模式,可以将问题转化为  </p>\n<ul>\n<li>判断运输的终止状态是否合法</li>\n<li>判断人和羊是否在一侧</li>\n<li>判断人和菜是否在一侧</li>\n<li>判断人和狼是否在一侧</li>\n<li>执行人独自过河的动作</li>\n<li>执行人和羊一起过河的动作</li>\n<li>执行人和狼一起过河的动作</li>\n<li>执行人和菜一起过河的动作</li>\n</ul>\n<p>新建MoveClass类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 人狼羊菜运输类</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MoveClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>依次对应的函数如下</p>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// <span class=\"variable\">&lt;summary&gt;</span></span><br><span class=\"line\">/// 状态合法</span><br><span class=\"line\">/// &lt;/summary&gt;</span><br><span class=\"line\">/// <span class=\"variable\">&lt;param name=&quot;state&quot;&gt;</span>&lt;/param&gt;</span><br><span class=\"line\">/// <span class=\"variable\">&lt;returns&gt;</span>&lt;/returns&gt;</span><br><span class=\"line\">public bool IsVaild(int <span class=\"keyword\">state</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    return <span class=\"keyword\">state</span> != <span class=\"number\">3</span> &amp;&amp; !(<span class=\"keyword\">state</span> &gt;= <span class=\"number\">6</span> &amp;&amp; <span class=\"keyword\">state</span> <span class=\"variable\">&lt;= 9) &amp;&amp; state != 12;</span></span><br><span class=\"line\"><span class=\"variable\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// <span class=\"variable\">&lt;summary&gt;</span></span><br><span class=\"line\">/// 人和羊在一起返回真</span><br><span class=\"line\">/// &lt;/summary&gt;</span><br><span class=\"line\">/// <span class=\"variable\">&lt;param name=&quot;state&quot;&gt;</span>&lt;/param&gt;</span><br><span class=\"line\">/// <span class=\"variable\">&lt;returns&gt;</span>&lt;/returns&gt;</span><br><span class=\"line\">public bool IsPeopleWithSheep(int <span class=\"keyword\">state</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    return ((<span class=\"keyword\">state</span> / <span class=\"number\">2</span>) % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; <span class=\"keyword\">state</span> <span class=\"variable\">&lt; 8) || ((state / 2) % 2 == 1 &amp;&amp; state &gt;</span>= <span class=\"number\">8</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// <span class=\"variable\">&lt;summary&gt;</span></span><br><span class=\"line\">/// 人和菜在一起返回真</span><br><span class=\"line\">/// &lt;/summary&gt;</span><br><span class=\"line\">/// <span class=\"variable\">&lt;param name=&quot;state&quot;&gt;</span>&lt;/param&gt;</span><br><span class=\"line\">/// <span class=\"variable\">&lt;returns&gt;</span>&lt;/returns&gt;</span><br><span class=\"line\">public bool IsPeopleWithGreens(int <span class=\"keyword\">state</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    return <span class=\"keyword\">state</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; <span class=\"keyword\">state</span> <span class=\"variable\">&lt; 8 || state % 2 == 1 &amp;&amp; state &gt;</span>= <span class=\"number\">8</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// <span class=\"variable\">&lt;summary&gt;</span></span><br><span class=\"line\">/// 人和狼在一起返回真</span><br><span class=\"line\">/// &lt;/summary&gt;</span><br><span class=\"line\">/// <span class=\"variable\">&lt;param name=&quot;state&quot;&gt;</span>&lt;/param&gt;</span><br><span class=\"line\">/// <span class=\"variable\">&lt;returns&gt;</span>&lt;/returns&gt;</span><br><span class=\"line\">public bool IsPeopleWithWolf(int <span class=\"keyword\">state</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    return !(<span class=\"keyword\">state</span> &gt;= <span class=\"number\">4</span> &amp;&amp; <span class=\"keyword\">state</span> <span class=\"variable\">&lt;= 11);</span></span><br><span class=\"line\"><span class=\"variable\">&#125;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 只身一人过河</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;state&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> <span class=\"title\">MovePerson</span>(<span class=\"params\"><span class=\"built_in\">int</span> state</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state ^ <span class=\"number\">8</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 人带羊过河</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;state&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> <span class=\"title\">MovePersonWithSheep</span>(<span class=\"params\"><span class=\"built_in\">int</span> state</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state ^ <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 人带狼过河</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;state&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> <span class=\"title\">MovePersonWithWolf</span>(<span class=\"params\"><span class=\"built_in\">int</span> state</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state ^ <span class=\"number\">12</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 人带菜过河</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;state&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> <span class=\"title\">MovePersonWithGreens</span>(<span class=\"params\"><span class=\"built_in\">int</span> state</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state ^ <span class=\"number\">9</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>主要的逻辑函数</p>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void Move()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">int <span class=\"keyword\">state</span> = <span class=\"number\">0</span>, tempState;</span><br><span class=\"line\">int EndState = <span class=\"number\">15</span>;</span><br><span class=\"line\">while (<span class=\"keyword\">state</span> != EndState)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    tempState = MovePerson(<span class=\"keyword\">state</span>);</span><br><span class=\"line\">    if (IsVaild(tempState))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">state</span> = tempState;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"keyword\">state</span> &gt; <span class=\"number\">8</span> ? <span class=\"string\">&quot;人独自一人从A岸到达B岸&quot;</span> : <span class=\"string\">&quot;人独自一人从B岸到达A岸&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (IsPeopleWithSheep(<span class=\"keyword\">state</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        tempState = MovePersonWithSheep(<span class=\"keyword\">state</span>);</span><br><span class=\"line\">        if (IsVaild(tempState))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">state</span> = tempState;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"keyword\">state</span> &gt; <span class=\"number\">8</span> ? <span class=\"string\">&quot;人带羊从A岸到达B岸&quot;</span> : <span class=\"string\">&quot;人带羊从B岸到达A岸&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (IsPeopleWithWolf(<span class=\"keyword\">state</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        tempState = MovePersonWithWolf(<span class=\"keyword\">state</span>);</span><br><span class=\"line\">        if (IsVaild(tempState))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">state</span> = tempState;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"keyword\">state</span> &gt; <span class=\"number\">8</span> ? <span class=\"string\">&quot;人带狼从A岸到达B岸&quot;</span> : <span class=\"string\">&quot;人带狼从B岸到达A岸&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (IsPeopleWithGreens(<span class=\"keyword\">state</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        tempState = MovePersonWithGreens(<span class=\"keyword\">state</span>);</span><br><span class=\"line\">        if (IsVaild(tempState))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">state</span> = tempState;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"keyword\">state</span> &gt; <span class=\"number\">8</span> ? <span class=\"string\">&quot;人带菜从A岸到达B岸&quot;</span> : <span class=\"string\">&quot;人带菜从B岸到达A岸&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行以上逻辑函数</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Console.<span class=\"constructor\">WriteLine(<span class=\"string\">&quot;MoveClass 开始&quot;</span>)</span>;</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"constructor\">MoveClass()</span>.<span class=\"constructor\">Move()</span>;</span><br><span class=\"line\">Console.<span class=\"constructor\">WriteLine(<span class=\"string\">&quot;MoveClass 结束&quot;</span>)</span>;</span><br><span class=\"line\">Console.<span class=\"constructor\">ReadKey()</span>;</span><br></pre></td></tr></table></figure>\n<p>最终运行结果如下:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MoveClass 开始</span><br><span class=\"line\">人带羊从<span class=\"selector-tag\">A</span>岸到达<span class=\"selector-tag\">B</span>岸</span><br><span class=\"line\">人独自一人从<span class=\"selector-tag\">B</span>岸到达<span class=\"selector-tag\">A</span>岸</span><br><span class=\"line\">人带狼从<span class=\"selector-tag\">A</span>岸到达<span class=\"selector-tag\">B</span>岸</span><br><span class=\"line\">人带羊从<span class=\"selector-tag\">B</span>岸到达<span class=\"selector-tag\">A</span>岸</span><br><span class=\"line\">人带菜从<span class=\"selector-tag\">A</span>岸到达<span class=\"selector-tag\">B</span>岸</span><br><span class=\"line\">人独自一人从<span class=\"selector-tag\">B</span>岸到达<span class=\"selector-tag\">A</span>岸</span><br><span class=\"line\">人带羊从<span class=\"selector-tag\">A</span>岸到达<span class=\"selector-tag\">B</span>岸</span><br><span class=\"line\">MoveClass 结束</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://ddabb.github.io/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E5%AF%B9%E8%B1%A1%E7%89%88%E6%9C%AC/\">人狼羊菜2018年对象版本</a></li>\n<li><a href=\"https://ddabb.github.io/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2012%E5%B9%B4%E7%89%88%E6%9C%AC/\">人狼羊菜2012年版本</a></li>\n</ul>\n","raw":null,"categories":[{"name":"逻辑思维","path":"api/categories/逻辑思维.json"}],"tags":[{"name":"人狼羊菜","path":"api/tags/人狼羊菜.json"}]},{"title":"建站原因","slug":"建站原因","date":"2018-10-25T15:37:09.000Z","updated":"2023-09-08T06:12:36.704Z","comments":true,"path":"api/articles/建站原因.json","excerpt":null,"keywords":["AI","人工智能","Hexo","CRM",".net core"],"cover":null,"content":"<h2 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h2><p> 前几天翻阅过去的日志，里面有一句话——如果没有去长城的想法，那就摸不到长城的砖块。<br> 换而言之，如果我不想搭建一个网站，那该网站就不会诞生。搭建网站总是有一个目标的，那我搭建该网站的目标是啥？  </p>\n<h2 id=\"分享传播\"><a href=\"#分享传播\" class=\"headerlink\" title=\"分享传播\"></a>分享传播</h2><p>最初的原因是我有时间，我有工作经验，然后我钦佩一些圈子内的技术大牛，认同他们的开源理念，想追随他们的脚步，故有了最初的目标：</p>\n<ul>\n<li>搭建一个网站用于知识的分享和传播。</li>\n</ul>\n<h2 id=\"记录知识\"><a href=\"#记录知识\" class=\"headerlink\" title=\"记录知识\"></a>记录知识</h2><p>在搭建网站的过程中遇到的问题也越来越多，比如后台是Dbfirst还是code first？网站需不需要走Https?网站要不要引入Abp框架？富文本的编辑工具选择什么？怎么样做QQ登录？微信授权登录该怎么实现？在一步一步的功能实现过程中遇到了很多在工作中没有遇到过的问题，也在解决这些问题的过程中接触到了很多的之前未曾涉及到的知识点，所以搭建网站的过程中又新增了一个目标：</p>\n<ul>\n<li>记录我在搭建网站过程中走过的坑，希望同行有幸看到该文章，不再走相似的重复道路。</li>\n</ul>\n<h2 id=\"归纳整理\"><a href=\"#归纳整理\" class=\"headerlink\" title=\"归纳整理\"></a>归纳整理</h2><p>在做技术选型的时候，为了实现跨平台我选择了.net core。  </p>\n<p>试图将Abp框架签入个人网站中时,发现<strong>Abp的确不适合小型项目</strong>，在接触<a href=\"https://www.cnblogs.com/kellynic/p/9712483.html\">gensql网站快速开发</a>之后,觉得使用Abp创建个人博客估计年底都完成不了，这不符合我快速开发的预期理念，因此放弃了code first，选择了db first。</p>\n<p>gensql工具适合于做后台管理的模板生成器,并没有提供可以选择的前端主题,故我决定自行选择一个UI主题,选择了以前公司工作时用到的<a href=\"http://www.inspinia.cn/\">inspinia</a>作为前端Ui,充分阐释了手上只有锤子，什么都是钉子的道理。  </p>\n<p>确定好前端Ui之后,接下来就需要选择博客的富文本编辑器。在<br><a href=\"https://www.layui.com/\">layui</a><br><a href=\"https://summernote.org/\">summernote</a><br><a href=\"https://ueditor.baidu.com/website/index.html\">ueditor</a>等编辑器中进行了试验，发现都得自行编写上传图片和文件的逻辑,界面展示效果也没有很好看,故选择放弃这三个编辑器。<br>不经意间接触了MarkDown的语法,了解到了<a href=\"https://github.com/Dynalon/mdwiki/releases\">MDwiki</a>能快速搭建博客站点，展示效果比在inspinia中的文章的文章页面效果要好,但是该MDwiki在手机端的展示效果并没有符合我的预期。  </p>\n<p>最终有幸接触了<a href=\"https://www.cnblogs.com/blogjun/articles/8289977.html?from=timeline\">使用Hexo搭建个人博客（二）-安装部署</a>和<a href=\"https://github.com/zthxxx/hexo-theme-Wikitten/blob/master/README_zh-CN.md\">hexo-theme-Wikitten</a>的配置教程。参考这两篇文章终于搭建了<a href=\"https://ddabb.github.io/\">60分小站</a>这个站点。  </p>\n<p>由此可见，整个搭建个人博客的过程中我走了不少的弯路，如果最先接触最后的两篇文章就不要费劲这么多周折才搭建好一个个人博客网站。尽管不少曲折,但也因此我也学到了不少东西。之前并没有在博客园编写个人博客的习惯，毕竟博客园的编辑器相对MarkDown这种语法来讲显得比较臃肿。该网站又多出了一个作用：</p>\n<ul>\n<li>养成做笔记的习惯,归纳整理个人的知识库，有利于日后的检索和温习。</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.cnblogs.com/kellynic/p/9712483.html\">gensql网站快速开发</a></li>\n<li><a href=\"http://www.inspinia.cn/\">inspinia</a></li>\n<li><a href=\"https://summernote.org/\">summernote</a></li>\n<li><a href=\"https://www.layui.com/\">layui</a></li>\n<li><a href=\"https://ueditor.baidu.com/website/index.html\">ueditor</a></li>\n<li><a href=\"https://github.com/Dynalon/mdwiki/releases\">MDwiki</a></li>\n<li><a href=\"https://www.cnblogs.com/blogjun/articles/8289977.html?from=timeline\">使用Hexo搭建个人博客（二）-安装部署</a></li>\n<li><a href=\"https://github.com/zthxxx/hexo-theme-Wikitten/blob/master/README_zh-CN.md\">hexo-theme-Wikitten</a></li>\n</ul>\n","raw":null,"categories":[{"name":"关于博客","path":"api/categories/关于博客.json"}],"tags":[{"name":"博客","path":"api/tags/博客.json"},{"name":"网站","path":"api/tags/网站.json"}]}]}