{"title":"第一个python手写识别程序","slug":"第一个python手写识别程序","date":"2021-11-21T11:25:27.000Z","updated":"2023-09-08T06:12:36.708Z","comments":true,"path":"api/articles/第一个python手写识别程序.json","excerpt":null,"covers":["/.com//%E6%AD%A3%E7%A1%AE.png"],"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>我的第一个AI应用是参考<a href=\"https://cloud.tencent.com/developer/article/1348205\">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a>和<a href=\"http://www.cnblogs.com/ms-uap/p/9123033.html\">AI应用开发实战 - 从零开始配置环境</a>两篇文章进行的实施,故以该文做出相应的补充。</p>\n<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><h2 id=\"‘python’-不是内部或外部变量\"><a href=\"#‘python’-不是内部或外部变量\" class=\"headerlink\" title=\"‘python’ 不是内部或外部变量\"></a>‘python’ 不是内部或外部变量</h2><p>命令行执行<strong>python –version</strong>提示’python’ 不是内部或外部变量，在命令行中输入</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"attribute\">PATH</span>=<span class=\"string\">&quot;C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64&quot;</span>;%PATH%</span><br></pre></td></tr></table></figure>\n<p>之后,再输入</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">python</span> --<span class=\"keyword\">version</span></span><br></pre></td></tr></table></figure>\n<p>输出版本为3.6.5<br>但是关闭命令行之后，再输入python –version时,依旧提示 <strong>‘python’ 不是内部或外部变量</strong>。<br>故在计算机→属性右键→高级系统设置→环境变量→选择<strong>PATH</strong>→点击新建→将<strong>C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64</strong>添加→确定，之后再运行python –version，显示正常。</p>\n<h2 id=\"saved-model-pb路径不对\"><a href=\"#saved-model-pb路径不对\" class=\"headerlink\" title=\"saved_model.pb路径不对\"></a>saved_model.pb路径不对</h2><p>单独参考第一篇文章进行配置时，发现没有<strong>samples-for-ai\\export\\saved_model.pb</strong>这个路径。<br>原因是没有启动<strong>examples\\tensorflow\\TensorflowExamples.sln</strong>这个解决方案，将MNIST项目设置为启动项目并运行,则会有samples-for-ai\\export\\saved_model.pb这个文件了。</p>\n<h2 id=\"命令行无响应\"><a href=\"#命令行无响应\" class=\"headerlink\" title=\"命令行无响应\"></a>命令行无响应</h2><p>安装<strong>scipy-1.1.0</strong>和<strong>mxnet_cu90-1.2.0</strong>时,命令行一直无响应,解决方案是到<a href=\"https://pypi.org/project/scipy/1.1.0/\">scipy-1.1.0</a>和<a href=\"https://pypi.org/project/mxnet-cu90/1.2.0/\">mxnet-cu90 1.2.0</a>下载指定的文件，然后通过pip3命令来执行安装，其余问题也可以通过类似命令来解决。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">pip3</span> install D:\\scipy-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">0</span>-cp36-none-win_amd64.whl</span><br><span class=\"line\"><span class=\"attribute\">pip3</span> install D:\\mxnet_cu90-<span class=\"number\">1</span>.<span class=\"number\">2</span>.<span class=\"number\">0</span>-py2.py3-none-win_amd64.whl</span><br></pre></td></tr></table></figure>\n<p>通过下载的文件可以得知，文件较大，命令行无法及时完成下载,所以<strong>需要有一定的耐心等待</strong></p>\n<blockquote>\n<p>注意需要将<strong>C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\Scripts</strong>添加到<strong>PATH变量</strong>中。</p>\n</blockquote>\n<h2 id=\"cudnn版本不对\"><a href=\"#cudnn版本不对\" class=\"headerlink\" title=\"cudnn版本不对\"></a>cudnn版本不对</h2><p>现在官网<a href=\"https://developer.nvidia.com/cudnn\">https://developer.nvidia.com/cudnn</a>提供的cudnn版本是7.4.1,而微软示例代码中的cudnn版本是7.0.3,高版本的cudnn也会导致编译失败，需要找低版本的7.0.<em>的cudnn替换到*<em>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll</em></em>  </p>\n<h1 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h1><p>解决了这部分问题之后,能正常展示winform界面，运行结果如下:<br><img src=\"/.com//%E6%AD%A3%E7%A1%AE.png\" alt=\"正确识别\"><br><img src=\"/.com//%E9%94%99%E8%AF%AF.png\" alt=\"错误识别\"><br>该部分涉及到训练模型是否足够多的问题，该文不做深入的研究。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>参考资料中提及的两篇文章都已经是做<strong>手写识别</strong>非常好的入门资料，该文仅仅是对这两篇文章做一个相应的补充，以作备忘。<br>另外我希望早日掌握以下技能</p>\n<blockquote>\n<p>识别<strong>开心消消乐</strong>的游戏界面，然后通过能够确定执行的最佳下一步，达到这个目的，我觉得我对人工智能的了解和我的AI编程就进入了新的层次了。</p>\n</blockquote>\n<p>#参考资料</p>\n<ul>\n<li><a href=\"https://cloud.tencent.com/developer/article/1348205\">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a></li>\n<li><a href=\"http://www.cnblogs.com/ms-uap/p/9123033.html\">AI应用开发实战 - 从零开始配置环境</a></li>\n</ul>\n","more":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>我的第一个AI应用是参考<a href=\"https://cloud.tencent.com/developer/article/1348205\">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a>和<a href=\"http://www.cnblogs.com/ms-uap/p/9123033.html\">AI应用开发实战 - 从零开始配置环境</a>两篇文章进行的实施,故以该文做出相应的补充。</p>\n<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><h2 id=\"‘python’-不是内部或外部变量\"><a href=\"#‘python’-不是内部或外部变量\" class=\"headerlink\" title=\"‘python’ 不是内部或外部变量\"></a>‘python’ 不是内部或外部变量</h2><p>命令行执行<strong>python –version</strong>提示’python’ 不是内部或外部变量，在命令行中输入</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"attribute\">PATH</span>=<span class=\"string\">&quot;C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64&quot;</span>;%PATH%</span><br></pre></td></tr></table></figure>\n<p>之后,再输入</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">python</span> --<span class=\"keyword\">version</span></span><br></pre></td></tr></table></figure>\n<p>输出版本为3.6.5<br>但是关闭命令行之后，再输入python –version时,依旧提示 <strong>‘python’ 不是内部或外部变量</strong>。<br>故在计算机→属性右键→高级系统设置→环境变量→选择<strong>PATH</strong>→点击新建→将<strong>C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64</strong>添加→确定，之后再运行python –version，显示正常。</p>\n<h2 id=\"saved-model-pb路径不对\"><a href=\"#saved-model-pb路径不对\" class=\"headerlink\" title=\"saved_model.pb路径不对\"></a>saved_model.pb路径不对</h2><p>单独参考第一篇文章进行配置时，发现没有<strong>samples-for-ai\\export\\saved_model.pb</strong>这个路径。<br>原因是没有启动<strong>examples\\tensorflow\\TensorflowExamples.sln</strong>这个解决方案，将MNIST项目设置为启动项目并运行,则会有samples-for-ai\\export\\saved_model.pb这个文件了。</p>\n<h2 id=\"命令行无响应\"><a href=\"#命令行无响应\" class=\"headerlink\" title=\"命令行无响应\"></a>命令行无响应</h2><p>安装<strong>scipy-1.1.0</strong>和<strong>mxnet_cu90-1.2.0</strong>时,命令行一直无响应,解决方案是到<a href=\"https://pypi.org/project/scipy/1.1.0/\">scipy-1.1.0</a>和<a href=\"https://pypi.org/project/mxnet-cu90/1.2.0/\">mxnet-cu90 1.2.0</a>下载指定的文件，然后通过pip3命令来执行安装，其余问题也可以通过类似命令来解决。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">pip3</span> install D:\\scipy-<span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">0</span>-cp36-none-win_amd64.whl</span><br><span class=\"line\"><span class=\"attribute\">pip3</span> install D:\\mxnet_cu90-<span class=\"number\">1</span>.<span class=\"number\">2</span>.<span class=\"number\">0</span>-py2.py3-none-win_amd64.whl</span><br></pre></td></tr></table></figure>\n<p>通过下载的文件可以得知，文件较大，命令行无法及时完成下载,所以<strong>需要有一定的耐心等待</strong></p>\n<blockquote>\n<p>注意需要将<strong>C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\Scripts</strong>添加到<strong>PATH变量</strong>中。</p>\n</blockquote>\n<h2 id=\"cudnn版本不对\"><a href=\"#cudnn版本不对\" class=\"headerlink\" title=\"cudnn版本不对\"></a>cudnn版本不对</h2><p>现在官网<a href=\"https://developer.nvidia.com/cudnn\">https://developer.nvidia.com/cudnn</a>提供的cudnn版本是7.4.1,而微软示例代码中的cudnn版本是7.0.3,高版本的cudnn也会导致编译失败，需要找低版本的7.0.<em>的cudnn替换到*<em>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll</em></em>  </p>\n<h1 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h1><p>解决了这部分问题之后,能正常展示winform界面，运行结果如下:<br><img src=\"/.com//%E6%AD%A3%E7%A1%AE.png\" alt=\"正确识别\"><br><img src=\"/.com//%E9%94%99%E8%AF%AF.png\" alt=\"错误识别\"><br>该部分涉及到训练模型是否足够多的问题，该文不做深入的研究。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>参考资料中提及的两篇文章都已经是做<strong>手写识别</strong>非常好的入门资料，该文仅仅是对这两篇文章做一个相应的补充，以作备忘。<br>另外我希望早日掌握以下技能</p>\n<blockquote>\n<p>识别<strong>开心消消乐</strong>的游戏界面，然后通过能够确定执行的最佳下一步，达到这个目的，我觉得我对人工智能的了解和我的AI编程就进入了新的层次了。</p>\n</blockquote>\n<p>#参考资料</p>\n<ul>\n<li><a href=\"https://cloud.tencent.com/developer/article/1348205\">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a></li>\n<li><a href=\"http://www.cnblogs.com/ms-uap/p/9123033.html\">AI应用开发实战 - 从零开始配置环境</a></li>\n</ul>\n","categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"人工智能","path":"api/categories/人工智能.json"}],"tags":[{"name":"python","path":"api/tags/python.json"},{"name":"原创","path":"api/tags/原创.json"},{"name":"手写识别","path":"api/tags/手写识别.json"}]}