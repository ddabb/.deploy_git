{"title":"SqlServer 迁移到mysql","slug":"sqlserver-to-mysql","date":"2018-12-25T13:56:21.000Z","updated":"2023-09-08T06:12:36.699Z","comments":true,"path":"api/articles/sqlserver-to-mysql.json","excerpt":null,"covers":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近有开展Sqlserver 迁移到mysql的工作,以下经验基本上是别的博客没有提到过的，故行此文以作补充。</p>\n<h1 id=\"版本差异\"><a href=\"#版本差异\" class=\"headerlink\" title=\"版本差异\"></a>版本差异</h1><h2 id=\"时间精度\"><a href=\"#时间精度\" class=\"headerlink\" title=\"时间精度\"></a>时间精度</h2><p>Mysql 5.5版本不支持毫秒,Mysql 5.6以上才支持。<br>时间格式为<strong>DateTime(3)</strong>,当前时间为**Now(3)**。在5.5版本上,这两种写法为提示错误。</p>\n<h2 id=\"row-number函数\"><a href=\"#row-number函数\" class=\"headerlink\" title=\"row_number函数\"></a>row_number函数</h2><p>mysql 8.0才支持row_number函数，低版本都不支持该函数。<br><strong>低版本实现方式:</strong> 游标查询,或者少量数据的情况下,创建带有自增主键的临时表。</p>\n<h2 id=\"mysql-proc表\"><a href=\"#mysql-proc表\" class=\"headerlink\" title=\"mysql.proc表\"></a>mysql.proc表</h2><p>该表在mysql 8.0版本中已经不存在了,所以 **<font color=\"#FF0000\">select * from mysql.proc；</font>**在mysql 8.0版本中会报错;<br>需要转换成 **<font color=\"#FF0000\">show procedure status where db&#x3D;’sys’;</font>**这种写法来获取存储过程的相关信息。</p>\n<h2 id=\"with-cte\"><a href=\"#with-cte\" class=\"headerlink\" title=\"with cte\"></a>with cte</h2><p>mysql 8.0以上才支持cte,不过<a href=\"https://dev.mysql.com/doc/refman/8.0/en/with.html#common-table-expressions-recursive\">Mysql递归cte</a>的写法与sql server存在差异,需要添加关键字<strong>recursive</strong>,否则会提示cte不存在错误。</p>\n<p>如下</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">recursive</span> cte <span class=\"keyword\">as</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span> Id,Pid,DeptName,<span class=\"number\">0</span> <span class=\"keyword\">as</span> lvl <span class=\"keyword\">from</span> Department</span><br><span class=\"line\">    <span class=\"keyword\">where</span> Id = <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">union</span> <span class=\"keyword\">all</span></span><br><span class=\"line\">    <span class=\"keyword\">select</span> d.Id,d.Pid,d.DeptName,lvl+<span class=\"number\">1</span> <span class=\"keyword\">from</span> cte c <span class=\"keyword\">inner</span> <span class=\"keyword\">join</span> Department d</span><br><span class=\"line\">    <span class=\"keyword\">on</span> c.Id = d.Pid</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> cte</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"net-framework框架\"><a href=\"#net-framework框架\" class=\"headerlink\" title=\".net framework框架\"></a>.net framework框架</h2><p>5.6 及以上的的版本使用<strong>mysql.data.dll</strong>时需要 <strong>.net framework 4.5.2</strong>以上。</p>\n<h1 id=\"Mysql不具备的SQL-Server语法\"><a href=\"#Mysql不具备的SQL-Server语法\" class=\"headerlink\" title=\"Mysql不具备的SQL Server语法\"></a>Mysql不具备的SQL Server语法</h1><h2 id=\"uniqueidentifier\"><a href=\"#uniqueidentifier\" class=\"headerlink\" title=\"uniqueidentifier\"></a>uniqueidentifier</h2><p>SqlServer 通过WorkBench 迁移到Mysql时，该字段会自动变成varchar(36)类型。Mysql对应的生成Guid的语法是**uuid()**。<br>因object不支持强制转换成Guid，所以应将接口代码中的 <strong>(Guid)cmd.ExecuteScalar()<strong>替换成</strong>new Guid(cmd.ExecuteScalar())</strong></p>\n<h2 id=\"deleted-Inserted\"><a href=\"#deleted-Inserted\" class=\"headerlink\" title=\"deleted,Inserted\"></a>deleted,Inserted</h2><p>SqlServer在执行 insert into table_a select top 10 columnname from table_b时可以通过inserted获取到新插入的十条记录的自增主键,而Mysql不可以。<br><strong>实现方式</strong>  表新增Guid辅助字段,并将Guid放在临时表,通过多表链接查询获取数据。</p>\n<h2 id=\"select-top-…-percent\"><a href=\"#select-top-…-percent\" class=\"headerlink\" title=\"select top … percent\"></a>select top … percent</h2><p>SqlServer在执行 select top 10 percent columnname from table_a,如果table_a中有200条记录,则会返回前20条记录。<br><strong>实现方式</strong>  Mysql 需要通过获取总记录条数，然后获取总条数*百分比来获取数据。</p>\n<h1 id=\"临时表编码\"><a href=\"#临时表编码\" class=\"headerlink\" title=\"临时表编码\"></a>临时表编码</h1><p>CREATE TEMPORARY TABLE<br>temptable1(groupname VARCHAR(50))<br> <strong><font color=\"#FF0000\">DEFAULT CHARSET&#x3D;utf8;</font></strong><br>这样可以解决临时表不能插入中文的问题。</p>\n<h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><h2 id=\"默认位置\"><a href=\"#默认位置\" class=\"headerlink\" title=\"默认位置\"></a>默认位置</h2><p>各版本的配置文件的位置如下:<br><strong>5.5：</strong> C:\\<font color=\"#FF0000\">Program Files</font>\\MySQL\\MySQL Server 5.5\\my.ini<br><strong>5.6：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 5.6\\my.ini<br><strong>5.7：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 5.7\\my.ini<br><strong>8.0：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 8.0\\my.ini<br><strong><font color=\"#FF0000\">配置文件修改以后重启mysqlserver才会生效。</font></strong></p>\n<h2 id=\"longtext存储\"><a href=\"#longtext存储\" class=\"headerlink\" title=\"longtext存储\"></a>longtext存储</h2><p>max_allowed_packet 的默认值是4M。<br>设置<strong>max_allowed_packet&#x3D;100M</strong>可以解决longtext数据的存储长度的问题。</p>\n<h2 id=\"数据库名大小写\"><a href=\"#数据库名大小写\" class=\"headerlink\" title=\"数据库名大小写\"></a>数据库名大小写</h2><p>lower_case_table_names<br>设置lower_case_table_names&#x3D;1,表名称都设置为统一小写。</p>\n<h2 id=\"id自增不连续\"><a href=\"#id自增不连续\" class=\"headerlink\" title=\"id自增不连续\"></a>id自增不连续</h2><p>innodb_autoinc_lock_mode&#x3D;0  解决id自增不连续的问题；</p>\n<h1 id=\"语法差异\"><a href=\"#语法差异\" class=\"headerlink\" title=\"语法差异\"></a>语法差异</h1><h2 id=\"不等于\"><a href=\"#不等于\" class=\"headerlink\" title=\"不等于\"></a>不等于</h2><p>SqlServer的不等于符号 **!&#x3D;**中间可以存在空格，而Mysql的不可以。<br>Sql Server： select * from a where a.column !    &#x3D; 0  <font color=\"#FF0000\">不报错</font><br>Mysql： select * from a where a.column !    &#x3D; 0       <font color=\"#FF0000\">报错</font><br>Mysql： select * from a where a.column !&#x3D; 0           <font color=\"#FF0000\">不报错</font>  </p>\n<h2 id=\"逻辑取反\"><a href=\"#逻辑取反\" class=\"headerlink\" title=\"逻辑取反\"></a>逻辑取反</h2><p>SqlServer ： update table_a set isOk&#x3D;~isOk;<br>Mysql     ： update table_a set isOk&#x3D;!isOk;</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>以上就是本人在做SqlServer 迁移到Mysql的过程中遇到的问题以及相应的解决方案。<br>如果其中有不正确的地方，强烈欢迎指正，避免误导他人。<br>希望该文能为你的迁移大业贡献一份力量。</p>\n","more":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近有开展Sqlserver 迁移到mysql的工作,以下经验基本上是别的博客没有提到过的，故行此文以作补充。</p>\n<h1 id=\"版本差异\"><a href=\"#版本差异\" class=\"headerlink\" title=\"版本差异\"></a>版本差异</h1><h2 id=\"时间精度\"><a href=\"#时间精度\" class=\"headerlink\" title=\"时间精度\"></a>时间精度</h2><p>Mysql 5.5版本不支持毫秒,Mysql 5.6以上才支持。<br>时间格式为<strong>DateTime(3)</strong>,当前时间为**Now(3)**。在5.5版本上,这两种写法为提示错误。</p>\n<h2 id=\"row-number函数\"><a href=\"#row-number函数\" class=\"headerlink\" title=\"row_number函数\"></a>row_number函数</h2><p>mysql 8.0才支持row_number函数，低版本都不支持该函数。<br><strong>低版本实现方式:</strong> 游标查询,或者少量数据的情况下,创建带有自增主键的临时表。</p>\n<h2 id=\"mysql-proc表\"><a href=\"#mysql-proc表\" class=\"headerlink\" title=\"mysql.proc表\"></a>mysql.proc表</h2><p>该表在mysql 8.0版本中已经不存在了,所以 **<font color=\"#FF0000\">select * from mysql.proc；</font>**在mysql 8.0版本中会报错;<br>需要转换成 **<font color=\"#FF0000\">show procedure status where db&#x3D;’sys’;</font>**这种写法来获取存储过程的相关信息。</p>\n<h2 id=\"with-cte\"><a href=\"#with-cte\" class=\"headerlink\" title=\"with cte\"></a>with cte</h2><p>mysql 8.0以上才支持cte,不过<a href=\"https://dev.mysql.com/doc/refman/8.0/en/with.html#common-table-expressions-recursive\">Mysql递归cte</a>的写法与sql server存在差异,需要添加关键字<strong>recursive</strong>,否则会提示cte不存在错误。</p>\n<p>如下</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">recursive</span> cte <span class=\"keyword\">as</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span> Id,Pid,DeptName,<span class=\"number\">0</span> <span class=\"keyword\">as</span> lvl <span class=\"keyword\">from</span> Department</span><br><span class=\"line\">    <span class=\"keyword\">where</span> Id = <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">union</span> <span class=\"keyword\">all</span></span><br><span class=\"line\">    <span class=\"keyword\">select</span> d.Id,d.Pid,d.DeptName,lvl+<span class=\"number\">1</span> <span class=\"keyword\">from</span> cte c <span class=\"keyword\">inner</span> <span class=\"keyword\">join</span> Department d</span><br><span class=\"line\">    <span class=\"keyword\">on</span> c.Id = d.Pid</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> cte</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"net-framework框架\"><a href=\"#net-framework框架\" class=\"headerlink\" title=\".net framework框架\"></a>.net framework框架</h2><p>5.6 及以上的的版本使用<strong>mysql.data.dll</strong>时需要 <strong>.net framework 4.5.2</strong>以上。</p>\n<h1 id=\"Mysql不具备的SQL-Server语法\"><a href=\"#Mysql不具备的SQL-Server语法\" class=\"headerlink\" title=\"Mysql不具备的SQL Server语法\"></a>Mysql不具备的SQL Server语法</h1><h2 id=\"uniqueidentifier\"><a href=\"#uniqueidentifier\" class=\"headerlink\" title=\"uniqueidentifier\"></a>uniqueidentifier</h2><p>SqlServer 通过WorkBench 迁移到Mysql时，该字段会自动变成varchar(36)类型。Mysql对应的生成Guid的语法是**uuid()**。<br>因object不支持强制转换成Guid，所以应将接口代码中的 <strong>(Guid)cmd.ExecuteScalar()<strong>替换成</strong>new Guid(cmd.ExecuteScalar())</strong></p>\n<h2 id=\"deleted-Inserted\"><a href=\"#deleted-Inserted\" class=\"headerlink\" title=\"deleted,Inserted\"></a>deleted,Inserted</h2><p>SqlServer在执行 insert into table_a select top 10 columnname from table_b时可以通过inserted获取到新插入的十条记录的自增主键,而Mysql不可以。<br><strong>实现方式</strong>  表新增Guid辅助字段,并将Guid放在临时表,通过多表链接查询获取数据。</p>\n<h2 id=\"select-top-…-percent\"><a href=\"#select-top-…-percent\" class=\"headerlink\" title=\"select top … percent\"></a>select top … percent</h2><p>SqlServer在执行 select top 10 percent columnname from table_a,如果table_a中有200条记录,则会返回前20条记录。<br><strong>实现方式</strong>  Mysql 需要通过获取总记录条数，然后获取总条数*百分比来获取数据。</p>\n<h1 id=\"临时表编码\"><a href=\"#临时表编码\" class=\"headerlink\" title=\"临时表编码\"></a>临时表编码</h1><p>CREATE TEMPORARY TABLE<br>temptable1(groupname VARCHAR(50))<br> <strong><font color=\"#FF0000\">DEFAULT CHARSET&#x3D;utf8;</font></strong><br>这样可以解决临时表不能插入中文的问题。</p>\n<h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><h2 id=\"默认位置\"><a href=\"#默认位置\" class=\"headerlink\" title=\"默认位置\"></a>默认位置</h2><p>各版本的配置文件的位置如下:<br><strong>5.5：</strong> C:\\<font color=\"#FF0000\">Program Files</font>\\MySQL\\MySQL Server 5.5\\my.ini<br><strong>5.6：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 5.6\\my.ini<br><strong>5.7：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 5.7\\my.ini<br><strong>8.0：</strong> C:\\<font color=\"#FF0000\">ProgramData</font>\\MySQL\\MySQL Server 8.0\\my.ini<br><strong><font color=\"#FF0000\">配置文件修改以后重启mysqlserver才会生效。</font></strong></p>\n<h2 id=\"longtext存储\"><a href=\"#longtext存储\" class=\"headerlink\" title=\"longtext存储\"></a>longtext存储</h2><p>max_allowed_packet 的默认值是4M。<br>设置<strong>max_allowed_packet&#x3D;100M</strong>可以解决longtext数据的存储长度的问题。</p>\n<h2 id=\"数据库名大小写\"><a href=\"#数据库名大小写\" class=\"headerlink\" title=\"数据库名大小写\"></a>数据库名大小写</h2><p>lower_case_table_names<br>设置lower_case_table_names&#x3D;1,表名称都设置为统一小写。</p>\n<h2 id=\"id自增不连续\"><a href=\"#id自增不连续\" class=\"headerlink\" title=\"id自增不连续\"></a>id自增不连续</h2><p>innodb_autoinc_lock_mode&#x3D;0  解决id自增不连续的问题；</p>\n<h1 id=\"语法差异\"><a href=\"#语法差异\" class=\"headerlink\" title=\"语法差异\"></a>语法差异</h1><h2 id=\"不等于\"><a href=\"#不等于\" class=\"headerlink\" title=\"不等于\"></a>不等于</h2><p>SqlServer的不等于符号 **!&#x3D;**中间可以存在空格，而Mysql的不可以。<br>Sql Server： select * from a where a.column !    &#x3D; 0  <font color=\"#FF0000\">不报错</font><br>Mysql： select * from a where a.column !    &#x3D; 0       <font color=\"#FF0000\">报错</font><br>Mysql： select * from a where a.column !&#x3D; 0           <font color=\"#FF0000\">不报错</font>  </p>\n<h2 id=\"逻辑取反\"><a href=\"#逻辑取反\" class=\"headerlink\" title=\"逻辑取反\"></a>逻辑取反</h2><p>SqlServer ： update table_a set isOk&#x3D;~isOk;<br>Mysql     ： update table_a set isOk&#x3D;!isOk;</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>以上就是本人在做SqlServer 迁移到Mysql的过程中遇到的问题以及相应的解决方案。<br>如果其中有不正确的地方，强烈欢迎指正，避免误导他人。<br>希望该文能为你的迁移大业贡献一份力量。</p>\n","categories":[{"name":"代码世界","path":"api/categories/代码世界.json"},{"name":"数据库迁移","path":"api/categories/数据库迁移.json"}],"tags":[{"name":"mysql","path":"api/tags/mysql.json"},{"name":"sqlserver","path":"api/tags/sqlserver.json"}]}