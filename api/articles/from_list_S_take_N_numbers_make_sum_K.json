{"title":"集合S取出n个元素其和为K个数统计","slug":"from_list_S_take_N_numbers_make_sum_K","date":"2018-11-17T00:17:17.000Z","updated":"2023-09-08T06:12:36.691Z","comments":true,"path":"api/articles/from_list_S_take_N_numbers_make_sum_K.json","excerpt":null,"covers":["/.com//1234_10.png"],"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近csrediscore的创作者在制作一个斗地主的机器人,他探讨性地给我出了一个问题——<strong>怎么样去统计手牌组合的可能性？</strong><br>该问题算是比较复杂的,在不考虑癞子的情况下有<strong>火箭、炸弹、单牌、对牌、连对、三张牌、三带一、单顺、双顺、三顺、飞机带翅膀、四带二</strong>等等牌型。<br>以地主20张手牌为例：</p>\n<ul>\n<li>20张手牌中能打出火箭次数在[0,1]中取值。</li>\n<li>20张手牌中能打出炸弹次数在[0,5]中取值。</li>\n<li>20张手牌中能打出单牌次数在[0,20]中取值——在不考虑其他玩家的情况下,最多出20次单牌。</li>\n<li>依次类推…………<br>所以问题转换为<strong>每种牌型中选取任意次数构成N张手牌的情况有多少种？</strong></li>\n</ul>\n<h1 id=\"问题分解一\"><a href=\"#问题分解一\" class=\"headerlink\" title=\"问题分解一\"></a>问题分解一</h1><p>为了更加简单一点描述问题,我继续对问题进行了简化。<br><strong>从集合{1,2,3,4}中,取出一个元素和为10的个数统计</strong><br>比如集合为：{1,2,3,4}，和值为10；其中取法1,2,3,4和4,3,2,1等价。<br>因和值固定，且都为正数，所以每个元素的取出次数有限，可以得出结论如下图<br><img src=\"/.com//1234_10.png\" alt=\"1,2,3,4可以取出次数分析\">  </p>\n<h1 id=\"问题分解二\"><a href=\"#问题分解二\" class=\"headerlink\" title=\"问题分解二\"></a>问题分解二</h1><figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从集合</span><br><span class=\"line\">&#123;<span class=\"number\">0,1,2,3</span>,<span class=\"number\">4,5,6,7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0,2,4,6</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0,3,6,9</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>&#125;</span><br><span class=\"line\">中各取出一个元素组成新集合S1,S1求和为<span class=\"number\">10</span>的个数统计。</span><br></pre></td></tr></table></figure>\n<p>由图可知,可以取出的元素组合情况为:  11 *  6 * 4 * 3&#x3D;792种。</p>\n<p>最终只需要在这792种方案中选取出和为10的记录。<br>罗列792种方案的可行性的过程叫做求笛卡尔积,以下给出代码实现C#版代码实现过程。</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>求笛卡尔积扩展类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">EnumerableEx</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 求集合的笛卡尔积</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"title\">IEnumerable</span>&lt;<span class=\"title\">IEnumerable</span>&lt;<span class=\"title\">T</span>&gt;&gt; <span class=\"title\">Cartesian</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"keyword\">this</span> IEnumerable&lt;IEnumerable&lt;T&gt;&gt; sequences</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        IEnumerable&lt;IEnumerable&lt;T&gt;&gt; tempProduct = <span class=\"keyword\">new</span>[] &#123;Enumerable.Empty&lt;T&gt;()&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sequences.Aggregate(tempProduct,</span><br><span class=\"line\">            (current, sequence) =&gt;</span><br><span class=\"line\">                (<span class=\"keyword\">from</span> accseq <span class=\"keyword\">in</span> current <span class=\"keyword\">from</span> item <span class=\"keyword\">in</span> sequence <span class=\"keyword\">select</span> accseq.Concat(<span class=\"keyword\">new</span>[] &#123;item&#125;)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建数字集合类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"doctag\">///</span> 数字集合</span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DigitGroup</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 元素</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Value;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 次数</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Times;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 和</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Sum;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DigitGroup</span>(<span class=\"params\"><span class=\"built_in\">int</span> <span class=\"keyword\">value</span>, <span class=\"built_in\">int</span> times</span>)</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Value = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Times = times;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Sum = <span class=\"keyword\">value</span> * times;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"built_in\">string</span> <span class=\"title\">ToString</span>()</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;&#123;0&#125;个&#123;1&#125;,和为&#123;2&#125;&quot;</span>, Times, Value, Sum);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台Program类</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Program</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> Main(string[] args)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          List&lt;<span class=\"built_in\">int</span>&gt; numbers = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">int</span>&gt; &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> Sum = <span class=\"number\">10</span>;</span><br><span class=\"line\">          <span class=\"built_in\">var</span> digitGroupList = GetChooseList(numbers, Sum);</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"built_in\">var</span> result = digitGroupList.Cartesian();</span><br><span class=\"line\">          result = result.Where(chooses =&gt; chooses.Sum(choose =&gt; choose.Sum) == Sum);</span><br><span class=\"line\">          PrintResult(result);</span><br><span class=\"line\"></span><br><span class=\"line\">          Console.ReadKey();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IEnumerable&lt;IEnumerable&lt;DigitGroup&gt;&gt; GetChooseList(List&lt;<span class=\"built_in\">int</span>&gt; intList, <span class=\"built_in\">int</span> target)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          List&lt;List&lt;DigitGroup&gt;&gt; newList = <span class=\"keyword\">new</span> List&lt;List&lt;DigitGroup&gt;&gt;();</span><br><span class=\"line\">          foreach (<span class=\"built_in\">var</span> beichushu <span class=\"keyword\">in</span> intList)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              List&lt;DigitGroup&gt; temp = <span class=\"keyword\">new</span> List&lt;DigitGroup&gt;();</span><br><span class=\"line\">              <span class=\"built_in\">var</span> <span class=\"keyword\">count</span> = target / beichushu;</span><br><span class=\"line\">              <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"keyword\">count</span>; i++)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  temp.Add(<span class=\"keyword\">new</span> DigitGroup(beichushu, i));</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              newList.Add(temp);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">return</span> newList;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> PrintResult(IEnumerable&lt;IEnumerable&lt;DigitGroup&gt;&gt; result)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> <span class=\"keyword\">index</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">          foreach (<span class=\"built_in\">var</span> list <span class=\"keyword\">in</span> result)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              <span class=\"keyword\">index</span> += <span class=\"number\">1</span>;</span><br><span class=\"line\">              Console.Write(<span class=\"keyword\">index</span> + <span class=\"string\">&quot;: &quot;</span>);</span><br><span class=\"line\">              foreach (<span class=\"built_in\">var</span> choose <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  <span class=\"keyword\">if</span> (choose.Sum != <span class=\"number\">0</span>)</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\">                      Console.Write(<span class=\"string\">&quot; &quot;</span> + choose + <span class=\"string\">&quot;   &quot;</span>);</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              Console.WriteLine();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>最终运行结果如下</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">1</span>:  <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">2</span>:  <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">4</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">3</span>:  <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">4</span>:  <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">5</span>:  <span class=\"number\">5</span>个<span class=\"number\">2</span>,和为<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attribute\">6</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">3</span>个<span class=\"number\">3</span>,和为<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"attribute\">7</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">8</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">9</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">4</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">10</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">11</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">12</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">4</span>个<span class=\"number\">2</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">13</span>:  <span class=\"number\">3</span>个<span class=\"number\">1</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">14</span>:  <span class=\"number\">3</span>个<span class=\"number\">1</span>,和为<span class=\"number\">3</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">15</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">16</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">17</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">18</span>:  <span class=\"number\">5</span>个<span class=\"number\">1</span>,和为<span class=\"number\">5</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">19</span>:  <span class=\"number\">6</span>个<span class=\"number\">1</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">20</span>:  <span class=\"number\">6</span>个<span class=\"number\">1</span>,和为<span class=\"number\">6</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">21</span>:  <span class=\"number\">7</span>个<span class=\"number\">1</span>,和为<span class=\"number\">7</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">22</span>:  <span class=\"number\">8</span>个<span class=\"number\">1</span>,和为<span class=\"number\">8</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attribute\">23</span>:  <span class=\"number\">10</span>个<span class=\"number\">1</span>,和为<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>  我现在依旧不知道20张手牌,各种牌型组合的可能性有多少种,但是将问题转化成{1,2,3,4}求和为10的这种方式已经将问题做了一个很好的分解。<br>  只需要将DigitGroup再做一下相应的替换就可以计算出可能的牌型有多少种，该问题的求解已经不在该文的范畴类，有兴趣的读者可以尝试解决一下。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.cnblogs.com/localhost2016/p/8668355.html\">C# 用Linq的方式实现组合和笛卡尔积（支持泛型T）</a></li>\n<li><a href=\"https://ddabb.github.io/Fight-the-Landlord-Card-Type-Aanalysis/\">欢乐斗地主出牌方式统计</a></li>\n</ul>\n","more":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>最近csrediscore的创作者在制作一个斗地主的机器人,他探讨性地给我出了一个问题——<strong>怎么样去统计手牌组合的可能性？</strong><br>该问题算是比较复杂的,在不考虑癞子的情况下有<strong>火箭、炸弹、单牌、对牌、连对、三张牌、三带一、单顺、双顺、三顺、飞机带翅膀、四带二</strong>等等牌型。<br>以地主20张手牌为例：</p>\n<ul>\n<li>20张手牌中能打出火箭次数在[0,1]中取值。</li>\n<li>20张手牌中能打出炸弹次数在[0,5]中取值。</li>\n<li>20张手牌中能打出单牌次数在[0,20]中取值——在不考虑其他玩家的情况下,最多出20次单牌。</li>\n<li>依次类推…………<br>所以问题转换为<strong>每种牌型中选取任意次数构成N张手牌的情况有多少种？</strong></li>\n</ul>\n<h1 id=\"问题分解一\"><a href=\"#问题分解一\" class=\"headerlink\" title=\"问题分解一\"></a>问题分解一</h1><p>为了更加简单一点描述问题,我继续对问题进行了简化。<br><strong>从集合{1,2,3,4}中,取出一个元素和为10的个数统计</strong><br>比如集合为：{1,2,3,4}，和值为10；其中取法1,2,3,4和4,3,2,1等价。<br>因和值固定，且都为正数，所以每个元素的取出次数有限，可以得出结论如下图<br><img src=\"/.com//1234_10.png\" alt=\"1,2,3,4可以取出次数分析\">  </p>\n<h1 id=\"问题分解二\"><a href=\"#问题分解二\" class=\"headerlink\" title=\"问题分解二\"></a>问题分解二</h1><figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从集合</span><br><span class=\"line\">&#123;<span class=\"number\">0,1,2,3</span>,<span class=\"number\">4,5,6,7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0,2,4,6</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0,3,6,9</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>&#125;</span><br><span class=\"line\">中各取出一个元素组成新集合S1,S1求和为<span class=\"number\">10</span>的个数统计。</span><br></pre></td></tr></table></figure>\n<p>由图可知,可以取出的元素组合情况为:  11 *  6 * 4 * 3&#x3D;792种。</p>\n<p>最终只需要在这792种方案中选取出和为10的记录。<br>罗列792种方案的可行性的过程叫做求笛卡尔积,以下给出代码实现C#版代码实现过程。</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>求笛卡尔积扩展类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">EnumerableEx</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 求集合的笛卡尔积</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"title\">IEnumerable</span>&lt;<span class=\"title\">IEnumerable</span>&lt;<span class=\"title\">T</span>&gt;&gt; <span class=\"title\">Cartesian</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"keyword\">this</span> IEnumerable&lt;IEnumerable&lt;T&gt;&gt; sequences</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        IEnumerable&lt;IEnumerable&lt;T&gt;&gt; tempProduct = <span class=\"keyword\">new</span>[] &#123;Enumerable.Empty&lt;T&gt;()&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sequences.Aggregate(tempProduct,</span><br><span class=\"line\">            (current, sequence) =&gt;</span><br><span class=\"line\">                (<span class=\"keyword\">from</span> accseq <span class=\"keyword\">in</span> current <span class=\"keyword\">from</span> item <span class=\"keyword\">in</span> sequence <span class=\"keyword\">select</span> accseq.Concat(<span class=\"keyword\">new</span>[] &#123;item&#125;)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建数字集合类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"doctag\">///</span> 数字集合</span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DigitGroup</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 元素</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Value;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 次数</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Times;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> 和</span></span><br><span class=\"line\">      <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Sum;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DigitGroup</span>(<span class=\"params\"><span class=\"built_in\">int</span> <span class=\"keyword\">value</span>, <span class=\"built_in\">int</span> times</span>)</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Value = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Times = times;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.Sum = <span class=\"keyword\">value</span> * times;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"built_in\">string</span> <span class=\"title\">ToString</span>()</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;&#123;0&#125;个&#123;1&#125;,和为&#123;2&#125;&quot;</span>, Times, Value, Sum);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台Program类</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Program</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> Main(string[] args)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          List&lt;<span class=\"built_in\">int</span>&gt; numbers = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">int</span>&gt; &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> Sum = <span class=\"number\">10</span>;</span><br><span class=\"line\">          <span class=\"built_in\">var</span> digitGroupList = GetChooseList(numbers, Sum);</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"built_in\">var</span> result = digitGroupList.Cartesian();</span><br><span class=\"line\">          result = result.Where(chooses =&gt; chooses.Sum(choose =&gt; choose.Sum) == Sum);</span><br><span class=\"line\">          PrintResult(result);</span><br><span class=\"line\"></span><br><span class=\"line\">          Console.ReadKey();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IEnumerable&lt;IEnumerable&lt;DigitGroup&gt;&gt; GetChooseList(List&lt;<span class=\"built_in\">int</span>&gt; intList, <span class=\"built_in\">int</span> target)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          List&lt;List&lt;DigitGroup&gt;&gt; newList = <span class=\"keyword\">new</span> List&lt;List&lt;DigitGroup&gt;&gt;();</span><br><span class=\"line\">          foreach (<span class=\"built_in\">var</span> beichushu <span class=\"keyword\">in</span> intList)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              List&lt;DigitGroup&gt; temp = <span class=\"keyword\">new</span> List&lt;DigitGroup&gt;();</span><br><span class=\"line\">              <span class=\"built_in\">var</span> <span class=\"keyword\">count</span> = target / beichushu;</span><br><span class=\"line\">              <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"keyword\">count</span>; i++)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  temp.Add(<span class=\"keyword\">new</span> DigitGroup(beichushu, i));</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              newList.Add(temp);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">return</span> newList;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> PrintResult(IEnumerable&lt;IEnumerable&lt;DigitGroup&gt;&gt; result)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> <span class=\"keyword\">index</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">          foreach (<span class=\"built_in\">var</span> list <span class=\"keyword\">in</span> result)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              <span class=\"keyword\">index</span> += <span class=\"number\">1</span>;</span><br><span class=\"line\">              Console.Write(<span class=\"keyword\">index</span> + <span class=\"string\">&quot;: &quot;</span>);</span><br><span class=\"line\">              foreach (<span class=\"built_in\">var</span> choose <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  <span class=\"keyword\">if</span> (choose.Sum != <span class=\"number\">0</span>)</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\">                      Console.Write(<span class=\"string\">&quot; &quot;</span> + choose + <span class=\"string\">&quot;   &quot;</span>);</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              Console.WriteLine();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>最终运行结果如下</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">1</span>:  <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">2</span>:  <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">4</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">3</span>:  <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">4</span>:  <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">5</span>:  <span class=\"number\">5</span>个<span class=\"number\">2</span>,和为<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attribute\">6</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">3</span>个<span class=\"number\">3</span>,和为<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"attribute\">7</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">8</span>:  <span class=\"number\">1</span>个<span class=\"number\">1</span>,和为<span class=\"number\">1</span>    <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">9</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">4</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">10</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">11</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">12</span>:  <span class=\"number\">2</span>个<span class=\"number\">1</span>,和为<span class=\"number\">2</span>    <span class=\"number\">4</span>个<span class=\"number\">2</span>,和为<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">13</span>:  <span class=\"number\">3</span>个<span class=\"number\">1</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">14</span>:  <span class=\"number\">3</span>个<span class=\"number\">1</span>,和为<span class=\"number\">3</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">15</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">2</span>个<span class=\"number\">3</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">16</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">17</span>:  <span class=\"number\">4</span>个<span class=\"number\">1</span>,和为<span class=\"number\">4</span>    <span class=\"number\">3</span>个<span class=\"number\">2</span>,和为<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">18</span>:  <span class=\"number\">5</span>个<span class=\"number\">1</span>,和为<span class=\"number\">5</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">19</span>:  <span class=\"number\">6</span>个<span class=\"number\">1</span>,和为<span class=\"number\">6</span>    <span class=\"number\">1</span>个<span class=\"number\">4</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">20</span>:  <span class=\"number\">6</span>个<span class=\"number\">1</span>,和为<span class=\"number\">6</span>    <span class=\"number\">2</span>个<span class=\"number\">2</span>,和为<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">21</span>:  <span class=\"number\">7</span>个<span class=\"number\">1</span>,和为<span class=\"number\">7</span>    <span class=\"number\">1</span>个<span class=\"number\">3</span>,和为<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">22</span>:  <span class=\"number\">8</span>个<span class=\"number\">1</span>,和为<span class=\"number\">8</span>    <span class=\"number\">1</span>个<span class=\"number\">2</span>,和为<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attribute\">23</span>:  <span class=\"number\">10</span>个<span class=\"number\">1</span>,和为<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>  我现在依旧不知道20张手牌,各种牌型组合的可能性有多少种,但是将问题转化成{1,2,3,4}求和为10的这种方式已经将问题做了一个很好的分解。<br>  只需要将DigitGroup再做一下相应的替换就可以计算出可能的牌型有多少种，该问题的求解已经不在该文的范畴类，有兴趣的读者可以尝试解决一下。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.cnblogs.com/localhost2016/p/8668355.html\">C# 用Linq的方式实现组合和笛卡尔积（支持泛型T）</a></li>\n<li><a href=\"https://ddabb.github.io/Fight-the-Landlord-Card-Type-Aanalysis/\">欢乐斗地主出牌方式统计</a></li>\n</ul>\n","categories":[{"name":"逻辑思维","path":"api/categories/逻辑思维.json"}],"tags":[{"name":"笛卡尔积","path":"api/tags/笛卡尔积.json"},{"name":"斗地主","path":"api/tags/斗地主.json"}]}